// <auto-generated />
using System;
using ERP.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ERPAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190621020956_goodsdelivery_lista")]
    partial class goodsdelivery_lista
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ERPAPI.Models.ApplicationRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("ERPAPI.Models.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<long>("BranchId");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("ERPAPI.Models.ApplicationUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("PolicyId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("ERPAPI.Models.ApplicationUserRole", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<Guid>("RoleId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("RoleName");

                    b.Property<string>("UserName");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("ERPAPI.Models.AspNetRoleClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("ERPAPI.Models.AspNetUserLogins", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<Guid>("UserId");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("ERPAPI.Models.AspNetUserTokens", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("ERPAPI.Models.Bank", b =>
                {
                    b.Property<long>("BankId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankName");

                    b.Property<string>("Description");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("BankId");

                    b.ToTable("Bank");
                });

            modelBuilder.Entity("ERPAPI.Models.Bitacora", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accion");

                    b.Property<string>("Descripcion");

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<DateTime?>("HoraFin");

                    b.Property<DateTime?>("HoraInicio");

                    b.Property<long>("IdEstado");

                    b.Property<long?>("IdOperacion");

                    b.Property<string>("NoReferencia");

                    b.Property<string>("QueryEjecuto");

                    b.Property<string>("ResultadoSerializado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioEjecucion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Id");

                    b.ToTable("Bitacora");
                });

            modelBuilder.Entity("ERPAPI.Models.BlackListCustomers", b =>
                {
                    b.Property<long>("BlackListId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("CustomerReference");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Identidad");

                    b.Property<string>("Origen");

                    b.Property<string>("RTN");

                    b.Property<string>("Referencia");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("BlackListId");

                    b.ToTable("BlackListCustomers");
                });

            modelBuilder.Entity("ERPAPI.Models.Branch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("BranchName")
                        .IsRequired();

                    b.Property<string>("City");

                    b.Property<string>("ContactPerson");

                    b.Property<int>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<string>("Description");

                    b.Property<string>("Email");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Phone");

                    b.Property<string>("State");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.Property<string>("ZipCode");

                    b.HasKey("BranchId");

                    b.ToTable("Branch");
                });

            modelBuilder.Entity("ERPAPI.Models.CAI", b =>
                {
                    b.Property<long>("IdCAI")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaLimiteEmision");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<DateTime>("FechaRecepcion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<string>("_cai");

                    b.HasKey("IdCAI");

                    b.ToTable("CAI");
                });

            modelBuilder.Entity("ERPAPI.Models.CalculoPlanilla", b =>
                {
                    b.Property<long>("Idcalculo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<DateTime?>("Fechafin");

                    b.Property<DateTime?>("Fechainicio");

                    b.Property<long>("IdEstado");

                    b.Property<long?>("IdPlanilla");

                    b.Property<decimal?>("TasaCambio");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Idcalculo");

                    b.ToTable("CalculoPlanilla");
                });

            modelBuilder.Entity("ERPAPI.Models.CalculoPlanillaDetalle", b =>
                {
                    b.Property<long>("Iddetallecalculo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<DateTime?>("Fechacreacion");

                    b.Property<string>("FormulaEjecutada");

                    b.Property<long?>("IdCalculo");

                    b.Property<long?>("IdFormula");

                    b.Property<long?>("IdOrdenFormula");

                    b.Property<long?>("IdPuesto");

                    b.Property<long?>("Idempleado");

                    b.Property<int?>("IdtipoFormula");

                    b.Property<string>("NombreFormula");

                    b.Property<string>("NombreTipoFormula");

                    b.Property<string>("Nombreempleado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<decimal?>("ValorFormula");

                    b.HasKey("Iddetallecalculo");

                    b.ToTable("CalculoPlanillaDetalle");
                });

            modelBuilder.Entity("ERPAPI.Models.CertificadoDeposito", b =>
                {
                    b.Property<long>("IdCD")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Almacenaje");

                    b.Property<long>("BankId");

                    b.Property<string>("BankName");

                    b.Property<long>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<long>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("Direccion");

                    b.Property<string>("EmpresaSeguro");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCertificado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaFirma");

                    b.Property<DateTime>("FechaInicioComputo");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<DateTime>("FechaPagoBanco");

                    b.Property<DateTime>("FechaVencimiento");

                    b.Property<DateTime>("FechaVencimientoDeposito");

                    b.Property<long>("IdEstado");

                    b.Property<string>("LugarFirma");

                    b.Property<double>("MontoGarantia");

                    b.Property<long>("NoCD");

                    b.Property<string>("NoPoliza");

                    b.Property<long>("NoTraslado");

                    b.Property<string>("NombreEmpresa");

                    b.Property<string>("NombrePrestatario");

                    b.Property<string>("OtrosCargos");

                    b.Property<double>("PorcentajeInteresesInsolutos");

                    b.Property<double>("Quantitysum");

                    b.Property<string>("Seguro");

                    b.Property<long>("ServicioId");

                    b.Property<string>("ServicioName");

                    b.Property<double>("SujetasAPago");

                    b.Property<double>("Total");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<long>("WarehouseId");

                    b.Property<string>("WarehouseName");

                    b.HasKey("IdCD");

                    b.ToTable("CertificadoDeposito");
                });

            modelBuilder.Entity("ERPAPI.Models.CertificadoLine", b =>
                {
                    b.Property<long>("CertificadoLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<long>("CenterCostId");

                    b.Property<string>("CenterCostName");

                    b.Property<string>("Description");

                    b.Property<long>("IdCD");

                    b.Property<double>("Price");

                    b.Property<double>("Quantity");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<double>("TotalCantidad");

                    b.Property<string>("UnitMeasurName");

                    b.Property<long>("UnitMeasureId");

                    b.HasKey("CertificadoLineId");

                    b.HasIndex("IdCD");

                    b.ToTable("CertificadoLine");
                });

            modelBuilder.Entity("ERPAPI.Models.City", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<long?>("State_Id");

                    b.HasKey("Id");

                    b.ToTable("City");
                });

            modelBuilder.Entity("ERPAPI.Models.Conditions", b =>
                {
                    b.Property<long>("ConditionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConditionName");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("ConditionId");

                    b.ToTable("Conditions");
                });

            modelBuilder.Entity("ERPAPI.Models.ControlPallets", b =>
                {
                    b.Property<long>("ControlPalletsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BranchId");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("DescriptionProduct");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<int>("EsIngreso");

                    b.Property<int>("EsSalida");

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Marca");

                    b.Property<string>("Motorista");

                    b.Property<int>("PalletId");

                    b.Property<string>("Placa");

                    b.Property<long>("ProductId");

                    b.Property<double>("QQPesoBruto");

                    b.Property<double>("QQPesoFinal");

                    b.Property<double>("QQPesoNeto");

                    b.Property<int>("SacosDevueltos");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<int>("SubTotal");

                    b.Property<double>("Tara");

                    b.Property<int>("TotalSacos");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<int>("WarehouseId");

                    b.HasKey("ControlPalletsId");

                    b.ToTable("ControlPallets");
                });

            modelBuilder.Entity("ERPAPI.Models.ControlPalletsLine", b =>
                {
                    b.Property<long>("ControlPalletsLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Alto");

                    b.Property<int>("Ancho");

                    b.Property<long>("CenterCostId");

                    b.Property<string>("CenterCostName");

                    b.Property<long>("ControlPalletsId");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<int>("Otros");

                    b.Property<double>("Totallinea");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("ControlPalletsLineId");

                    b.HasIndex("ControlPalletsId");

                    b.ToTable("ControlPalletsLine");
                });

            modelBuilder.Entity("ERPAPI.Models.Country", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<string>("Name");

                    b.Property<int?>("PhoneCode");

                    b.Property<string>("SortName");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("ERPAPI.Models.Currency", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CurrencyCode")
                        .IsRequired();

                    b.Property<string>("CurrencyName")
                        .IsRequired();

                    b.Property<string>("Description");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("CurrencyId");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("ERPAPI.Models.Customer", b =>
                {
                    b.Property<long>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("ContactPerson");

                    b.Property<string>("CustomerName")
                        .IsRequired();

                    b.Property<int>("CustomerTypeId");

                    b.Property<string>("Email");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Identidad")
                        .IsRequired();

                    b.Property<string>("Phone");

                    b.Property<string>("RTN")
                        .IsRequired();

                    b.Property<string>("State");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.Property<string>("ZipCode");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerConditions", b =>
                {
                    b.Property<long>("CustomerConditionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ConditionId");

                    b.Property<string>("CustomerConditionName");

                    b.Property<long>("CustomerId");

                    b.Property<string>("Description");

                    b.Property<long>("DocumentId");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<long>("IdTipoDocumento");

                    b.Property<string>("LogicalCondition");

                    b.Property<long>("ProductId");

                    b.Property<long>("SubProductId");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<double>("ValueDecimal");

                    b.Property<string>("ValueString");

                    b.Property<string>("ValueToEvaluate");

                    b.HasKey("CustomerConditionId");

                    b.ToTable("CustomerConditions");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerProduct", b =>
                {
                    b.Property<long>("CustomerProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("CustomerProductId");

                    b.ToTable("CustomerProduct");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerType", b =>
                {
                    b.Property<long>("CustomerTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerTypeName")
                        .IsRequired();

                    b.Property<string>("Description");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("CustomerTypeId");

                    b.ToTable("CustomerType");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomersOfCustomer", b =>
                {
                    b.Property<long>("CustomerOfId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("ContactPerson");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName")
                        .IsRequired();

                    b.Property<int>("CustomerTypeId");

                    b.Property<string>("Email");

                    b.Property<string>("Identidad")
                        .IsRequired();

                    b.Property<string>("Phone");

                    b.Property<string>("RTN")
                        .IsRequired();

                    b.Property<string>("State");

                    b.Property<string>("ZipCode");

                    b.HasKey("CustomerOfId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomersOfCustomer");
                });

            modelBuilder.Entity("ERPAPI.Models.Departamento", b =>
                {
                    b.Property<long>("IdDepartamento")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdEstado");

                    b.Property<string>("NombreDepartamento");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("IdDepartamento");

                    b.ToTable("Departamento");
                });

            modelBuilder.Entity("ERPAPI.Models.Dependientes", b =>
                {
                    b.Property<long>("IdDependientes")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direccion");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdEmpleado");

                    b.Property<string>("NombreDependientes");

                    b.Property<string>("Parentezco");

                    b.Property<string>("Telefono");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("IdDependientes");

                    b.ToTable("Dependientes");
                });

            modelBuilder.Entity("ERPAPI.Models.ElementoConfiguracion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<string>("Formula");

                    b.Property<long?>("Idconfiguracion");

                    b.Property<string>("Nombre");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<double?>("Valordecimal");

                    b.Property<string>("Valorstring");

                    b.Property<string>("Valorstring2");

                    b.HasKey("Id");

                    b.ToTable("ElementoConfiguracion");
                });

            modelBuilder.Entity("ERPAPI.Models.Employees", b =>
                {
                    b.Property<long>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ciudad");

                    b.Property<string>("Correo");

                    b.Property<string>("CuentaBanco");

                    b.Property<string>("Direccion");

                    b.Property<string>("Estado");

                    b.Property<int>("Extension");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaEgreso");

                    b.Property<DateTime>("FechaFinContrato");

                    b.Property<DateTime?>("FechaIngreso");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<DateTime?>("FechaNacimiento");

                    b.Property<string>("Foto");

                    b.Property<string>("Genero");

                    b.Property<long?>("IdActivoinactivo");

                    b.Property<long?>("IdBanco");

                    b.Property<long?>("IdCiudad");

                    b.Property<int>("IdDepartamento");

                    b.Property<long?>("IdEstado");

                    b.Property<long?>("IdPais");

                    b.Property<int>("IdPuesto");

                    b.Property<int>("IdSucursal");

                    b.Property<int>("IdTipoContrato");

                    b.Property<string>("Identidad");

                    b.Property<long>("Idsescalas");

                    b.Property<long?>("MonedaSalario");

                    b.Property<string>("NombreCiudad");

                    b.Property<string>("NombreDepartamento");

                    b.Property<string>("NombreEmpleado");

                    b.Property<string>("NombreEstado");

                    b.Property<string>("NombrePais");

                    b.Property<string>("NombrePuesto");

                    b.Property<string>("NombreSucursal");

                    b.Property<string>("Notas");

                    b.Property<long?>("Puesto");

                    b.Property<decimal?>("Salario");

                    b.Property<string>("Telefono");

                    b.Property<string>("Userid");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("IdEmpleado");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ERPAPI.Models.Empresa", b =>
                {
                    b.Property<long>("IdEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direccion");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<string>("NombreContacto");

                    b.Property<string>("NombreEmpresa");

                    b.Property<string>("Telefono");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("IdEmpresa");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("ERPAPI.Models.Escala", b =>
                {
                    b.Property<long>("IdEscala")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionEscala");

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdEstado");

                    b.Property<long?>("Idpadre");

                    b.Property<string>("NombreEscala");

                    b.Property<decimal?>("Porcentaje");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.Property<decimal?>("ValorCalculo");

                    b.Property<decimal?>("ValorFinal");

                    b.Property<decimal?>("ValorInicial");

                    b.HasKey("IdEscala");

                    b.ToTable("Escala");
                });

            modelBuilder.Entity("ERPAPI.Models.Estados", b =>
                {
                    b.Property<long>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionEstado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdGrupoEstado");

                    b.Property<string>("NombreEstado")
                        .IsRequired();

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("IdEstado");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("ERPAPI.Models.Formula", b =>
                {
                    b.Property<long>("IdFormula")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CalculoFormula");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdEstado");

                    b.Property<int?>("IdTipoFormula");

                    b.Property<string>("NombreEstado");

                    b.Property<string>("NombreFormula");

                    b.Property<string>("NombreTipoformula");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdFormula");

                    b.ToTable("Formula");
                });

            modelBuilder.Entity("ERPAPI.Models.FormulasAplicadas", b =>
                {
                    b.Property<long>("IdFormulaAplicada")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<string>("FormulaEmpleada");

                    b.Property<long?>("IdCalculo");

                    b.Property<long?>("IdEmpleado");

                    b.Property<long?>("IdEstado");

                    b.Property<long?>("IdFormula");

                    b.Property<decimal?>("MultiplicarPor");

                    b.Property<string>("NombreFormula");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdFormulaAplicada");

                    b.ToTable("FormulasAplicadas");
                });

            modelBuilder.Entity("ERPAPI.Models.FormulasConFormulas", b =>
                {
                    b.Property<long>("IdFormulaconformula")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EstructuraConcepto");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("Fechamodificacion");

                    b.Property<long?>("IdFormula");

                    b.Property<long?>("IdFormulachild");

                    b.Property<string>("NombreFormulachild");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdFormulaconformula");

                    b.ToTable("FormulasConFormulas");
                });

            modelBuilder.Entity("ERPAPI.Models.FormulasConcepto", b =>
                {
                    b.Property<long>("IdformulaConcepto")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EstructuraConcepto");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdConcepto");

                    b.Property<long?>("Idformula");

                    b.Property<string>("NombreConcepto");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdformulaConcepto");

                    b.ToTable("FormulasConcepto");
                });

            modelBuilder.Entity("ERPAPI.Models.GoodsDelivered", b =>
                {
                    b.Property<long>("GoodsDeliveredId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<string>("Comments");

                    b.Property<double>("Currency");

                    b.Property<int>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<string>("Estado");

                    b.Property<long>("ExitTicket");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Marca");

                    b.Property<string>("Name");

                    b.Property<DateTime>("OrderDate");

                    b.Property<double>("PesoBruto");

                    b.Property<double>("PesoNeto");

                    b.Property<double>("PesoNeto2");

                    b.Property<string>("Placa");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<string>("Reference");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<double>("TaraTransporte");

                    b.Property<double>("TaraUnidadMedida");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<int>("WarehouseId");

                    b.Property<string>("WarehouseName");

                    b.Property<long>("WeightBallot");

                    b.HasKey("GoodsDeliveredId");

                    b.ToTable("GoodsDelivered");
                });

            modelBuilder.Entity("ERPAPI.Models.GoodsDeliveredLine", b =>
                {
                    b.Property<long>("GoodsDeliveredLinedId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CenterCostId");

                    b.Property<long>("ControlPalletsId");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long>("GoodsDeliveredId");

                    b.Property<double>("Price");

                    b.Property<long>("ProducId");

                    b.Property<string>("ProductName");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuantitySacos");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<double>("Total");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<long>("WareHouseId");

                    b.Property<string>("WareHouseName");

                    b.HasKey("GoodsDeliveredLinedId");

                    b.HasIndex("GoodsDeliveredId");

                    b.ToTable("GoodsDeliveredLine");
                });

            modelBuilder.Entity("ERPAPI.Models.GoodsDeliveryAuthorization", b =>
                {
                    b.Property<long>("GoodsDeliveryAuthorizationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AuthorizationDate");

                    b.Property<string>("AuthorizationName");

                    b.Property<long>("BankId");

                    b.Property<string>("BankName");

                    b.Property<long>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<long>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<string>("Name");

                    b.Property<long>("NoCD");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<double>("TotalCertificado");

                    b.Property<double>("TotalFinanciado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<long>("WareHouseId");

                    b.Property<string>("WareHouseName");

                    b.HasKey("GoodsDeliveryAuthorizationId");

                    b.ToTable("GoodsDeliveryAuthorization");
                });

            modelBuilder.Entity("ERPAPI.Models.GoodsDeliveryAuthorizationLine", b =>
                {
                    b.Property<long>("GoodsDeliveryAuthorizationLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<long>("GoodsDeliveryAuthorizationId");

                    b.Property<long>("NoCertificadoDeposito");

                    b.Property<double>("Quantity");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<long>("WarehouseId");

                    b.Property<string>("WarehouseName");

                    b.Property<double>("valorcertificado");

                    b.Property<double>("valorfinanciado");

                    b.HasKey("GoodsDeliveryAuthorizationLineId");

                    b.HasIndex("GoodsDeliveryAuthorizationId");

                    b.ToTable("GoodsDeliveryAuthorizationLine");
                });

            modelBuilder.Entity("ERPAPI.Models.GoodsReceived", b =>
                {
                    b.Property<long>("GoodsReceivedId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<string>("Comments");

                    b.Property<double>("Currency");

                    b.Property<int>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<string>("Estado");

                    b.Property<long>("ExitTicket");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Marca");

                    b.Property<string>("Name");

                    b.Property<DateTime>("OrderDate");

                    b.Property<double>("PesoBruto");

                    b.Property<double>("PesoNeto");

                    b.Property<double>("PesoNeto2");

                    b.Property<string>("Placa");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<string>("Reference");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<double>("TaraTransporte");

                    b.Property<double>("TaraUnidadMedida");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<int>("WarehouseId");

                    b.Property<string>("WarehouseName");

                    b.Property<long>("WeightBallot");

                    b.HasKey("GoodsReceivedId");

                    b.ToTable("GoodsReceived");
                });

            modelBuilder.Entity("ERPAPI.Models.GoodsReceivedLine", b =>
                {
                    b.Property<long>("GoodsReceiveLinedId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CenterCostId");

                    b.Property<long>("ControlPalletsId");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long>("GoodsReceivedId");

                    b.Property<double>("Price");

                    b.Property<long>("ProducId");

                    b.Property<string>("ProductName");

                    b.Property<int>("Quantity");

                    b.Property<int>("QuantitySacos");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<double>("Total");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<long>("WareHouseId");

                    b.Property<string>("WareHouseName");

                    b.HasKey("GoodsReceiveLinedId");

                    b.HasIndex("GoodsReceivedId");

                    b.ToTable("GoodsReceivedLine");
                });

            modelBuilder.Entity("ERPAPI.Models.GrupoConfiguracion", b =>
                {
                    b.Property<long>("IdConfiguracion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long?>("IdConfiguraciondestino");

                    b.Property<long?>("IdConfiguracionorigen");

                    b.Property<long>("IdZona");

                    b.Property<string>("Nombreconfiguracion");

                    b.Property<string>("Tipoconfiguracion");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdConfiguracion");

                    b.ToTable("GrupoConfiguracion");
                });

            modelBuilder.Entity("ERPAPI.Models.HoursWorked", b =>
                {
                    b.Property<long>("IdHorastrabajadas")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("EsFeriado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaEntrada");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdEmpleado");

                    b.Property<decimal?>("MultiplicaHoras");

                    b.Property<string>("NombreEmpleado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdHorastrabajadas");

                    b.ToTable("HoursWorked");
                });

            modelBuilder.Entity("ERPAPI.Models.HoursWorkedDetail", b =>
                {
                    b.Property<long>("IdDetallehorastrabajadas")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<DateTime?>("Horaentrada");

                    b.Property<DateTime?>("Horasalida");

                    b.Property<long?>("IdHorasTrabajadas");

                    b.Property<decimal?>("Multiplicahoras");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdDetallehorastrabajadas");

                    b.HasIndex("IdHorasTrabajadas");

                    b.ToTable("HoursWorkedDetail");
                });

            modelBuilder.Entity("ERPAPI.Models.Incapacidades", b =>
                {
                    b.Property<long>("Idincapacidad")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionIncapacidad");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaFin");

                    b.Property<DateTime?>("FechaInicio");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdEmpleado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Idincapacidad");

                    b.ToTable("Incapacidades");
                });

            modelBuilder.Entity("ERPAPI.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<int>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<string>("CAI");

                    b.Property<string>("Caja");

                    b.Property<long>("CertificadoDepositoId");

                    b.Property<string>("Correo");

                    b.Property<double>("Currency");

                    b.Property<int>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<int>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("CustomerRefNumber");

                    b.Property<DateTime>("DeliveryDate");

                    b.Property<string>("Direccion");

                    b.Property<double>("Discount");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaLimiteEmision");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<double>("Freight");

                    b.Property<long>("IdEstado");

                    b.Property<DateTime>("InvoiceDate");

                    b.Property<DateTime>("InvoiceDueDate");

                    b.Property<string>("InvoiceName");

                    b.Property<int>("InvoiceTypeId");

                    b.Property<string>("NoConstanciadeRegistro");

                    b.Property<string>("NoFin");

                    b.Property<string>("NoInicio");

                    b.Property<string>("NoOCExenta");

                    b.Property<string>("NoSAG");

                    b.Property<int>("NumeroDEI");

                    b.Property<DateTime>("OrderDate");

                    b.Property<int>("OrderId");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<string>("RTN");

                    b.Property<string>("Remarks");

                    b.Property<long>("SalesOrderId");

                    b.Property<int>("SalesTypeId");

                    b.Property<int>("ShipmentId");

                    b.Property<double>("SubTotal");

                    b.Property<string>("Sucursal");

                    b.Property<double>("Tax");

                    b.Property<double>("Tax18");

                    b.Property<string>("Tefono");

                    b.Property<string>("TipoDocumento");

                    b.Property<double>("Total");

                    b.Property<double>("TotalExento");

                    b.Property<double>("TotalExonerado");

                    b.Property<double>("TotalGravado");

                    b.Property<double>("TotalGravado18");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("InvoiceId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("ERPAPI.Models.InvoiceLine", b =>
                {
                    b.Property<long>("InvoiceLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<long>("CenterCostId");

                    b.Property<string>("CenterCostName");

                    b.Property<string>("Description");

                    b.Property<double>("DiscountAmount");

                    b.Property<double>("DiscountPercentage");

                    b.Property<int>("InvoiceId");

                    b.Property<double>("Price");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<double>("Quantity");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<double>("SubTotal");

                    b.Property<double>("TaxAmount");

                    b.Property<string>("TaxCode");

                    b.Property<double>("TaxPercentage");

                    b.Property<double>("Total");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<long>("WareHouseId");

                    b.HasKey("InvoiceLineId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceLine");
                });

            modelBuilder.Entity("ERPAPI.Models.Kardex", b =>
                {
                    b.Property<long>("KardexId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Currency");

                    b.Property<int>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<string>("DocName");

                    b.Property<long>("DocType");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<long>("DocumentId");

                    b.Property<string>("DocumentName");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<DateTime>("KardexDate");

                    b.Property<int>("TypeOperationId");

                    b.Property<string>("TypeOperationName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("KardexId");

                    b.ToTable("Kardex");
                });

            modelBuilder.Entity("ERPAPI.Models.KardexLine", b =>
                {
                    b.Property<long>("KardexLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<long>("CenterCostId");

                    b.Property<string>("CenterCostName");

                    b.Property<long>("ControlEstibaId");

                    b.Property<string>("ControlEstibaName");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<long>("GoodsReceivedId");

                    b.Property<DateTime>("KardexDate");

                    b.Property<long>("KardexId");

                    b.Property<long>("ProducId");

                    b.Property<string>("ProductName");

                    b.Property<double>("QuantityEntry");

                    b.Property<double>("QuantityOut");

                    b.Property<long>("SubProducId");

                    b.Property<string>("SubProductName");

                    b.Property<double>("Total");

                    b.Property<int>("TypeOperationId");

                    b.Property<string>("TypeOperationName");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<long>("WareHouseId");

                    b.Property<string>("WareHouseName");

                    b.HasKey("KardexLineId");

                    b.HasIndex("KardexId");

                    b.ToTable("KardexLine");
                });

            modelBuilder.Entity("ERPAPI.Models.NumeracionSAR", b =>
                {
                    b.Property<long>("IdNumeracion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantidadOtorgada");

                    b.Property<string>("DocSubType");

                    b.Property<long>("DocSubTypeId");

                    b.Property<string>("DocType");

                    b.Property<long>("DocTypeId");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaLimite");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdCAI");

                    b.Property<long>("IdEstado");

                    b.Property<long>("IdPuntoEmision");

                    b.Property<string>("NoFin");

                    b.Property<string>("NoInicio");

                    b.Property<string>("PuntoEmision");

                    b.Property<string>("SiguienteNumero");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdNumeracion");

                    b.ToTable("NumeracionSAR");
                });

            modelBuilder.Entity("ERPAPI.Models.OrdenFormula", b =>
                {
                    b.Property<long>("Idordenformula")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<long?>("IdPlanilla");

                    b.Property<long?>("Idformula");

                    b.Property<int?>("Orden");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Idordenformula");

                    b.ToTable("OrdenFormula");
                });

            modelBuilder.Entity("ERPAPI.Models.PEPS", b =>
                {
                    b.Property<long>("PEPSId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cargo");

                    b.Property<string>("Departamento");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("Funcionario");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Municipio");

                    b.Property<string>("Observacion");

                    b.Property<string>("Official");

                    b.Property<string>("Pais");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("PEPSId");

                    b.ToTable("PEPS");
                });

            modelBuilder.Entity("ERPAPI.Models.Payroll", b =>
                {
                    b.Property<long>("IdPlanilla")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionPlanilla");

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("NombrePlanilla");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdPlanilla");

                    b.ToTable("Payroll");
                });

            modelBuilder.Entity("ERPAPI.Models.PayrollEmployee", b =>
                {
                    b.Property<long>("IdPlanillaempleado")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaIngreso");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdEmpleado");

                    b.Property<long?>("IdEstado");

                    b.Property<long?>("IdPlanilla");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdPlanillaempleado");

                    b.ToTable("PayrollEmployee");
                });

            modelBuilder.Entity("ERPAPI.Models.Policy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.Property<string>("type")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Policy");
                });

            modelBuilder.Entity("ERPAPI.Models.PolicyClaims", b =>
                {
                    b.Property<int>("idroleclaim");

                    b.Property<Guid>("IdPolicy");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("idroleclaim", "IdPolicy");

                    b.HasAlternateKey("IdPolicy", "idroleclaim");

                    b.ToTable("PolicyClaims");
                });

            modelBuilder.Entity("ERPAPI.Models.PolicyRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Estado");

                    b.Property<long>("IdEstado");

                    b.Property<Guid>("IdPolicy");

                    b.Property<Guid>("IdRol");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("PolicyRoles");
                });

            modelBuilder.Entity("ERPAPI.Models.Product", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Barcode");

                    b.Property<int>("BranchId");

                    b.Property<int>("CurrencyId");

                    b.Property<double>("DefaultBuyingPrice");

                    b.Property<double>("DefaultSellingPrice");

                    b.Property<string>("Description");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("ProductCode");

                    b.Property<string>("ProductImageUrl");

                    b.Property<string>("ProductName")
                        .IsRequired();

                    b.Property<int>("UnitOfMeasureId");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("ProductId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ERPAPI.Models.ProductRelation", b =>
                {
                    b.Property<long>("RelationProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<long>("ProductId");

                    b.Property<long>("SubProductId");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("RelationProductId");

                    b.ToTable("ProductRelation");
                });

            modelBuilder.Entity("ERPAPI.Models.ProductType", b =>
                {
                    b.Property<long>("ProductTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Estado");

                    b.Property<long>("IdEstado");

                    b.Property<string>("ProductTypeName")
                        .IsRequired();

                    b.HasKey("ProductTypeId");

                    b.ToTable("ProductType");
                });

            modelBuilder.Entity("ERPAPI.Models.ProformaInvoice", b =>
                {
                    b.Property<int>("ProformaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<int>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<long>("CertificadoDepositoId");

                    b.Property<string>("Correo");

                    b.Property<double>("Currency");

                    b.Property<int>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<int>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("CustomerRefNumber");

                    b.Property<DateTime>("DeliveryDate");

                    b.Property<string>("Direccion");

                    b.Property<double>("Discount");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<double>("Freight");

                    b.Property<long>("IdEstado");

                    b.Property<DateTime>("OrderDate");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<string>("ProformaName");

                    b.Property<string>("RTN");

                    b.Property<string>("Remarks");

                    b.Property<long>("SalesOrderId");

                    b.Property<int>("SalesTypeId");

                    b.Property<double>("SubTotal");

                    b.Property<double>("Tax");

                    b.Property<double>("Tax18");

                    b.Property<string>("Tefono");

                    b.Property<double>("Total");

                    b.Property<double>("TotalExento");

                    b.Property<double>("TotalExonerado");

                    b.Property<double>("TotalGravado");

                    b.Property<double>("TotalGravado18");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("ProformaId");

                    b.ToTable("ProformaInvoice");
                });

            modelBuilder.Entity("ERPAPI.Models.ProformaInvoiceLine", b =>
                {
                    b.Property<long>("ProformaLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<long>("CenterCostId");

                    b.Property<string>("CenterCostName");

                    b.Property<string>("Description");

                    b.Property<double>("DiscountAmount");

                    b.Property<double>("DiscountPercentage");

                    b.Property<double>("Price");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<int>("ProformaInvoiceId");

                    b.Property<double>("Quantity");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<double>("SubTotal");

                    b.Property<double>("TaxAmount");

                    b.Property<string>("TaxCode");

                    b.Property<double>("TaxPercentage");

                    b.Property<double>("Total");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<long>("WareHouseId");

                    b.HasKey("ProformaLineId");

                    b.HasIndex("ProformaInvoiceId");

                    b.ToTable("ProformaInvoiceLine");
                });

            modelBuilder.Entity("ERPAPI.Models.Puesto", b =>
                {
                    b.Property<long>("IdPuesto")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdDepartamento");

                    b.Property<string>("NombreDepartamento");

                    b.Property<string>("NombrePuesto");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("IdPuesto");

                    b.ToTable("Puesto");
                });

            modelBuilder.Entity("ERPAPI.Models.PuntoEmision", b =>
                {
                    b.Property<long>("IdPuntoEmision")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("PuntoEmisionCod");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdPuntoEmision");

                    b.ToTable("PuntoEmision");
                });

            modelBuilder.Entity("ERPAPI.Models.RecibosCertificado", b =>
                {
                    b.Property<long>("IdReciboCertificado")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("IdCD");

                    b.Property<long>("IdRecibo");

                    b.Property<long>("UnitMeasureId");

                    b.Property<double>("productocantidadbultos");

                    b.Property<double>("productorecibolempiras");

                    b.Property<double>("productounidad");

                    b.HasKey("IdReciboCertificado");

                    b.ToTable("RecibosCertificado");
                });

            modelBuilder.Entity("ERPAPI.Models.Reconciliacion", b =>
                {
                    b.Property<long>("IdReconciliacion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionReconciliacion");

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaAplicacion");

                    b.Property<DateTime?>("FechaFinReconciliacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<DateTime?>("FechaReconciliacion");

                    b.Property<DateTime?>("Fechacreacion");

                    b.Property<long?>("IdCalculoplanilla");

                    b.Property<long>("IdEstado");

                    b.Property<decimal?>("SaldoEmpleado");

                    b.Property<decimal?>("Tasacambio");

                    b.Property<decimal?>("TotalReconciliacion");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("IdReconciliacion");

                    b.ToTable("Reconciliacion");
                });

            modelBuilder.Entity("ERPAPI.Models.ReconciliacionDetalle", b =>
                {
                    b.Property<long>("IdDetallereconciliacion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Bonos");

                    b.Property<decimal?>("CatorceSalarioProporcional");

                    b.Property<decimal?>("Deducciones");

                    b.Property<string>("Descripcion");

                    b.Property<int?>("Dia");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<decimal?>("Horasextras");

                    b.Property<long?>("IdEmpleado");

                    b.Property<long?>("IdPlanilla");

                    b.Property<long?>("IdReconciliacion");

                    b.Property<int?>("Month");

                    b.Property<decimal?>("OtrosIngresos");

                    b.Property<decimal?>("Quincesalarioproporcional");

                    b.Property<decimal?>("Salario");

                    b.Property<decimal?>("SalarioRecibido");

                    b.Property<decimal?>("TrecesalarioProporcional");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<int?>("Year");

                    b.HasKey("IdDetallereconciliacion");

                    b.ToTable("ReconciliacionDetalle");
                });

            modelBuilder.Entity("ERPAPI.Models.ReconciliacionEscala", b =>
                {
                    b.Property<long>("IdEscalareconciliacion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionEscala");

                    b.Property<decimal?>("DiferenciaPorretener");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdConcepto");

                    b.Property<long?>("IdEmpleado");

                    b.Property<long?>("IdEscala");

                    b.Property<long?>("IdPlanilla");

                    b.Property<long?>("IdReconciliacion");

                    b.Property<int?>("MesesEjecutados");

                    b.Property<int?>("MesesRestantes");

                    b.Property<decimal?>("MontoEscala");

                    b.Property<decimal?>("Montocatorcesalario");

                    b.Property<decimal?>("Montoquincesalario");

                    b.Property<decimal?>("Montoretenido");

                    b.Property<decimal?>("Montotrecesalario");

                    b.Property<string>("NombreConcepto");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdEscalareconciliacion");

                    b.ToTable("ReconciliacionEscala");
                });

            modelBuilder.Entity("ERPAPI.Models.ReconciliacionGasto", b =>
                {
                    b.Property<long>("Idreconciliaciongasto")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripciongasto");

                    b.Property<DateTime?>("Fechaaplicacion");

                    b.Property<DateTime?>("Fechacreacion");

                    b.Property<DateTime?>("Fechamodificacion");

                    b.Property<long?>("IdEmpleado");

                    b.Property<long?>("IdPlanilla");

                    b.Property<long?>("Idreconciliacion");

                    b.Property<decimal?>("Montogasto");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("Idreconciliaciongasto");

                    b.ToTable("ReconciliacionGasto");
                });

            modelBuilder.Entity("ERPAPI.Models.SalesOrder", b =>
                {
                    b.Property<int>("SalesOrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<int>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<string>("Correo");

                    b.Property<double>("Currency");

                    b.Property<int>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<int>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("CustomerRefNumber");

                    b.Property<DateTime>("DeliveryDate");

                    b.Property<string>("Direccion");

                    b.Property<double>("Discount");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<double>("Freight");

                    b.Property<long>("IdEstado");

                    b.Property<string>("NameContract");

                    b.Property<DateTime>("OrderDate");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<string>("RTN");

                    b.Property<string>("Remarks");

                    b.Property<string>("SalesOrderName");

                    b.Property<int>("SalesTypeId");

                    b.Property<double>("SubTotal");

                    b.Property<double>("Tax");

                    b.Property<double>("Tax18");

                    b.Property<string>("Tefono");

                    b.Property<double>("Total");

                    b.Property<double>("TotalExento");

                    b.Property<double>("TotalExonerado");

                    b.Property<double>("TotalGravado");

                    b.Property<double>("TotalGravado18");

                    b.Property<long>("TypeContractId");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("SalesOrderId");

                    b.ToTable("SalesOrder");
                });

            modelBuilder.Entity("ERPAPI.Models.SalesOrderLine", b =>
                {
                    b.Property<long>("SalesOrderLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<string>("Description");

                    b.Property<double>("DiscountAmount");

                    b.Property<double>("DiscountPercentage");

                    b.Property<int?>("InvoiceId");

                    b.Property<double>("Price");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<double>("Quantity");

                    b.Property<int>("SalesOrderId");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<double>("SubTotal");

                    b.Property<double>("TaxAmount");

                    b.Property<string>("TaxCode");

                    b.Property<double>("TaxPercentage");

                    b.Property<double>("Total");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.HasKey("SalesOrderLineId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("SalesOrderId");

                    b.ToTable("SalesOrderLine");
                });

            modelBuilder.Entity("ERPAPI.Models.SalesType", b =>
                {
                    b.Property<int>("SalesTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("SalesTypeName")
                        .IsRequired();

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("SalesTypeId");

                    b.ToTable("SalesType");
                });

            modelBuilder.Entity("ERPAPI.Models.Shipment", b =>
                {
                    b.Property<int>("ShipmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsFullShipment");

                    b.Property<int>("SalesOrderId");

                    b.Property<DateTime>("ShipmentDate");

                    b.Property<string>("ShipmentName");

                    b.Property<int>("ShipmentTypeId");

                    b.Property<int>("WarehouseId");

                    b.HasKey("ShipmentId");

                    b.ToTable("Shipment");
                });

            modelBuilder.Entity("ERPAPI.Models.ShipmentType", b =>
                {
                    b.Property<int>("ShipmentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("ShipmentTypeName")
                        .IsRequired();

                    b.HasKey("ShipmentTypeId");

                    b.ToTable("ShipmentType");
                });

            modelBuilder.Entity("ERPAPI.Models.SolicitudCertificadoDeposito", b =>
                {
                    b.Property<long>("IdCD")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Almacenaje");

                    b.Property<long>("BankId");

                    b.Property<string>("BankName");

                    b.Property<long>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("Direccion");

                    b.Property<string>("EmpresaSeguro");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCertificado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaFirma");

                    b.Property<DateTime>("FechaInicioComputo");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<DateTime>("FechaPagoBanco");

                    b.Property<DateTime>("FechaVencimiento");

                    b.Property<DateTime>("FechaVencimientoDeposito");

                    b.Property<long>("IdEstado");

                    b.Property<string>("LugarFirma");

                    b.Property<double>("MontoGarantia");

                    b.Property<long>("NoCD");

                    b.Property<string>("NoPoliza");

                    b.Property<long>("NoTraslado");

                    b.Property<string>("NombreEmpresa");

                    b.Property<string>("NombrePrestatario");

                    b.Property<string>("OtrosCargos");

                    b.Property<double>("PorcentajeInteresesInsolutos");

                    b.Property<double>("Quantitysum");

                    b.Property<string>("Seguro");

                    b.Property<long>("ServicioId");

                    b.Property<string>("ServicioName");

                    b.Property<double>("SujetasAPago");

                    b.Property<double>("Total");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<long>("WarehouseId");

                    b.Property<string>("WarehouseName");

                    b.HasKey("IdCD");

                    b.ToTable("SolicitudCertificadoDeposito");
                });

            modelBuilder.Entity("ERPAPI.Models.SolicitudCertificadoLine", b =>
                {
                    b.Property<long>("CertificadoLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<string>("Description");

                    b.Property<long>("IdCD");

                    b.Property<double>("Price");

                    b.Property<double>("Quantity");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<double>("TotalCantidad");

                    b.Property<string>("UnitMeasurName");

                    b.Property<long>("UnitMeasureId");

                    b.HasKey("CertificadoLineId");

                    b.HasIndex("IdCD");

                    b.ToTable("SolicitudCertificadoLine");
                });

            modelBuilder.Entity("ERPAPI.Models.SubProduct", b =>
                {
                    b.Property<long>("SubproductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Barcode");

                    b.Property<string>("Description");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("ProductCode");

                    b.Property<string>("ProductName");

                    b.Property<long>("ProductTypeId");

                    b.Property<string>("ProductTypeName");

                    b.Property<int?>("UnitOfMeasureId");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("SubproductId");

                    b.ToTable("SubProduct");
                });

            modelBuilder.Entity("ERPAPI.Models.Tax", b =>
                {
                    b.Property<long>("TaxId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("TaxCode");

                    b.Property<double>("TaxPercentage");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("TaxId");

                    b.ToTable("Tax");
                });

            modelBuilder.Entity("ERPAPI.Models.TipoContrato", b =>
                {
                    b.Property<long>("IdTipoContrato")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdEstado");

                    b.Property<string>("NombreTipoContrato");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("IdTipoContrato");

                    b.ToTable("TipoContrato");
                });

            modelBuilder.Entity("ERPAPI.Models.TipoDocumento", b =>
                {
                    b.Property<long>("IdTipoDocumento")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdEstado");

                    b.Property<string>("NombreTipoDocumento");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("IdTipoDocumento");

                    b.ToTable("TipoDocumento");
                });

            modelBuilder.Entity("ERPAPI.Models.TiposDocumento", b =>
                {
                    b.Property<long>("IdTipoDocumento")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo");

                    b.Property<string>("Descripcion");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdTipoDocumento");

                    b.ToTable("TiposDocumento");
                });

            modelBuilder.Entity("ERPAPI.Models.UnitOfMeasure", b =>
                {
                    b.Property<int>("UnitOfMeasureId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("UnitOfMeasureName")
                        .IsRequired();

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("UnitOfMeasureId");

                    b.ToTable("UnitOfMeasure");
                });

            modelBuilder.Entity("ERPAPI.Models.Vendor", b =>
                {
                    b.Property<long>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("ContactPerson");

                    b.Property<string>("Email");

                    b.Property<string>("Phone");

                    b.Property<string>("State");

                    b.Property<string>("VendorName")
                        .IsRequired();

                    b.Property<int>("VendorTypeId");

                    b.Property<string>("ZipCode");

                    b.HasKey("VendorId");

                    b.ToTable("Vendor");
                });

            modelBuilder.Entity("ERPAPI.Models.VendorOfCustomer", b =>
                {
                    b.Property<long>("VendorOfId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("ContactPerson");

                    b.Property<long?>("CustomerId");

                    b.Property<string>("Email");

                    b.Property<string>("Phone");

                    b.Property<string>("State");

                    b.Property<long>("VendorId");

                    b.Property<string>("VendorName")
                        .IsRequired();

                    b.Property<int>("VendorTypeId");

                    b.Property<string>("ZipCode");

                    b.HasKey("VendorOfId");

                    b.HasIndex("CustomerId");

                    b.ToTable("VendorOfCustomer");
                });

            modelBuilder.Entity("ERPAPI.Models.VendorType", b =>
                {
                    b.Property<long>("VendorTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("VendorTypeName")
                        .IsRequired();

                    b.HasKey("VendorTypeId");

                    b.ToTable("VendorType");
                });

            modelBuilder.Entity("ERPAPI.Models.Warehouse", b =>
                {
                    b.Property<int>("WarehouseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId");

                    b.Property<string>("Description");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.Property<string>("WarehouseName")
                        .IsRequired();

                    b.HasKey("WarehouseId");

                    b.ToTable("Warehouse");
                });

            modelBuilder.Entity("OFAC.sdnListM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("publshInformationId");

                    b.Property<int>("sdnListPublshInformationId");

                    b.HasKey("Id");

                    b.HasIndex("publshInformationId");

                    b.ToTable("sdnList");
                });

            modelBuilder.Entity("OFAC.sdnListPublshInformationM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Publish_Date");

                    b.Property<int>("Record_Count");

                    b.Property<bool>("Record_CountSpecified");

                    b.HasKey("Id");

                    b.ToTable("sdnListPublshInformation");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryAddressM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address1");

                    b.Property<string>("address2");

                    b.Property<string>("address3");

                    b.Property<string>("city");

                    b.Property<string>("country");

                    b.Property<string>("postalCode");

                    b.Property<int>("sdnListSdnEntryMId");

                    b.Property<string>("stateOrProvince");

                    b.Property<int>("uid");

                    b.HasKey("Id");

                    b.HasIndex("sdnListSdnEntryMId");

                    b.ToTable("sdnListSdnEntryAddress");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryAkaM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("category");

                    b.Property<string>("firstName");

                    b.Property<string>("lastName");

                    b.Property<int>("sdnListSdnEntryMId");

                    b.Property<string>("type");

                    b.Property<int>("uid");

                    b.HasKey("Id");

                    b.HasIndex("sdnListSdnEntryMId");

                    b.ToTable("sdnListSdnEntryAka");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryCitizenshipM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("country");

                    b.Property<bool>("mainEntry");

                    b.Property<int>("sdnListSdnEntryMId");

                    b.Property<int>("uid");

                    b.HasKey("Id");

                    b.HasIndex("sdnListSdnEntryMId");

                    b.ToTable("sdnListSdnEntryCitizenship");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryDateOfBirthItemM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("dateOfBirth");

                    b.Property<bool>("mainEntry");

                    b.Property<int>("sdnListSdnEntryMId");

                    b.Property<int>("uid");

                    b.HasKey("Id");

                    b.HasIndex("sdnListSdnEntryMId");

                    b.ToTable("sdnListSdnEntryDateOfBirthItem");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryIDM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("expirationDate");

                    b.Property<string>("idCountry");

                    b.Property<string>("idNumber");

                    b.Property<string>("idType");

                    b.Property<string>("issueDate");

                    b.Property<int>("sdnListSdnEntryMId");

                    b.Property<int>("uid");

                    b.HasKey("Id");

                    b.HasIndex("sdnListSdnEntryMId");

                    b.ToTable("sdnListSdnEntryID");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("firstName");

                    b.Property<string>("lastName");

                    b.Property<string>("programList");

                    b.Property<string>("remarks");

                    b.Property<int?>("sdnListMId");

                    b.Property<string>("sdnType");

                    b.Property<string>("title");

                    b.Property<int>("uid");

                    b.Property<int?>("vesselInfoId");

                    b.HasKey("Id");

                    b.HasIndex("sdnListMId");

                    b.HasIndex("vesselInfoId");

                    b.ToTable("sdnListSdnEntry");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryNationalityM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("country");

                    b.Property<bool>("mainEntry");

                    b.Property<int>("sdnListSdnEntryMId");

                    b.Property<int>("uid");

                    b.HasKey("Id");

                    b.HasIndex("sdnListSdnEntryMId");

                    b.ToTable("sdnListSdnEntryNationality");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryPlaceOfBirthItemM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("mainEntry");

                    b.Property<string>("placeOfBirth");

                    b.Property<int>("sdnListSdnEntryMId");

                    b.Property<int>("uid");

                    b.HasKey("Id");

                    b.HasIndex("sdnListSdnEntryMId");

                    b.ToTable("sdnListSdnEntryPlaceOfBirthItem");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryVesselInfoM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("callSign");

                    b.Property<int>("grossRegisteredTonnage");

                    b.Property<bool>("grossRegisteredTonnageSpecified");

                    b.Property<int>("tonnage");

                    b.Property<bool>("tonnageSpecified");

                    b.Property<string>("vesselFlag");

                    b.Property<string>("vesselOwner");

                    b.Property<string>("vesselType");

                    b.HasKey("Id");

                    b.ToTable("sdnListSdnEntryVesselInfo");
                });

            modelBuilder.Entity("ERPAPI.Models.ApplicationUserClaim", b =>
                {
                    b.HasOne("ERPAPI.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.ApplicationUserRole", b =>
                {
                    b.HasOne("ERPAPI.Models.ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.AspNetRoleClaims", b =>
                {
                    b.HasOne("ERPAPI.Models.ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.AspNetUserLogins", b =>
                {
                    b.HasOne("ERPAPI.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.AspNetUserTokens", b =>
                {
                    b.HasOne("ERPAPI.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.CertificadoLine", b =>
                {
                    b.HasOne("ERPAPI.Models.CertificadoDeposito")
                        .WithMany("_CertificadoLine")
                        .HasForeignKey("IdCD")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.ControlPalletsLine", b =>
                {
                    b.HasOne("ERPAPI.Models.ControlPallets")
                        .WithMany("_ControlPalletsLine")
                        .HasForeignKey("ControlPalletsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.CustomersOfCustomer", b =>
                {
                    b.HasOne("ERPAPI.Models.Customer")
                        .WithMany("_Customers")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.GoodsDeliveredLine", b =>
                {
                    b.HasOne("ERPAPI.Models.GoodsDelivered")
                        .WithMany("_GoodsDeliveredLine")
                        .HasForeignKey("GoodsDeliveredId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.GoodsDeliveryAuthorizationLine", b =>
                {
                    b.HasOne("ERPAPI.Models.GoodsDeliveryAuthorization")
                        .WithMany("GoodsDeliveryAuthorizationLine")
                        .HasForeignKey("GoodsDeliveryAuthorizationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.GoodsReceivedLine", b =>
                {
                    b.HasOne("ERPAPI.Models.GoodsReceived")
                        .WithMany("_GoodsReceivedLine")
                        .HasForeignKey("GoodsReceivedId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.HoursWorkedDetail", b =>
                {
                    b.HasOne("ERPAPI.Models.HoursWorked")
                        .WithMany("idhorastrabajadasconstrains")
                        .HasForeignKey("IdHorasTrabajadas");
                });

            modelBuilder.Entity("ERPAPI.Models.InvoiceLine", b =>
                {
                    b.HasOne("ERPAPI.Models.Invoice", "SalesOrder")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.KardexLine", b =>
                {
                    b.HasOne("ERPAPI.Models.Kardex")
                        .WithMany("_KardexLine")
                        .HasForeignKey("KardexId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.ProformaInvoiceLine", b =>
                {
                    b.HasOne("ERPAPI.Models.ProformaInvoice", "ProformaInvoice")
                        .WithMany("ProformaInvoiceLine")
                        .HasForeignKey("ProformaInvoiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.SalesOrderLine", b =>
                {
                    b.HasOne("ERPAPI.Models.Invoice")
                        .WithMany("SalesOrderLines")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("ERPAPI.Models.SalesOrder", "SalesOrder")
                        .WithMany("SalesOrderLines")
                        .HasForeignKey("SalesOrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.SolicitudCertificadoLine", b =>
                {
                    b.HasOne("ERPAPI.Models.SolicitudCertificadoDeposito")
                        .WithMany("_SolicitudCertificadoLine")
                        .HasForeignKey("IdCD")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.VendorOfCustomer", b =>
                {
                    b.HasOne("ERPAPI.Models.Customer")
                        .WithMany("_Vendor")
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("OFAC.sdnListM", b =>
                {
                    b.HasOne("OFAC.sdnListPublshInformationM", "publshInformation")
                        .WithMany()
                        .HasForeignKey("publshInformationId");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryAddressM", b =>
                {
                    b.HasOne("OFAC.sdnListSdnEntryM")
                        .WithMany("addressList")
                        .HasForeignKey("sdnListSdnEntryMId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryAkaM", b =>
                {
                    b.HasOne("OFAC.sdnListSdnEntryM")
                        .WithMany("akaList")
                        .HasForeignKey("sdnListSdnEntryMId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryCitizenshipM", b =>
                {
                    b.HasOne("OFAC.sdnListSdnEntryM")
                        .WithMany("citizenshipList")
                        .HasForeignKey("sdnListSdnEntryMId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryDateOfBirthItemM", b =>
                {
                    b.HasOne("OFAC.sdnListSdnEntryM")
                        .WithMany("dateOfBirthList")
                        .HasForeignKey("sdnListSdnEntryMId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryIDM", b =>
                {
                    b.HasOne("OFAC.sdnListSdnEntryM")
                        .WithMany("idList")
                        .HasForeignKey("sdnListSdnEntryMId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryM", b =>
                {
                    b.HasOne("OFAC.sdnListM")
                        .WithMany("sdnEntry")
                        .HasForeignKey("sdnListMId");

                    b.HasOne("OFAC.sdnListSdnEntryVesselInfoM", "vesselInfo")
                        .WithMany()
                        .HasForeignKey("vesselInfoId");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryNationalityM", b =>
                {
                    b.HasOne("OFAC.sdnListSdnEntryM")
                        .WithMany("nationalityList")
                        .HasForeignKey("sdnListSdnEntryMId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryPlaceOfBirthItemM", b =>
                {
                    b.HasOne("OFAC.sdnListSdnEntryM")
                        .WithMany("placeOfBirthList")
                        .HasForeignKey("sdnListSdnEntryMId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
