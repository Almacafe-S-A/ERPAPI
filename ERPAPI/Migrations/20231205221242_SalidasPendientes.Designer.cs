// <auto-generated />
using System;
using ERP.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ERPAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231205221242_SalidasPendientes")]
    partial class SalidasPendientes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ERPAPI.Models.AccountManagement", b =>
                {
                    b.Property<long>("AccountManagementId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.Property<string>("AccountNumber");

                    b.Property<string>("AccountType")
                        .IsRequired();

                    b.Property<long>("BankId");

                    b.Property<string>("BankName");

                    b.Property<int>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<string>("Description");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<DateTime>("OpeningDate");

                    b.Property<string>("Status");

                    b.Property<long?>("TypeAccountId");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("AccountManagementId");

                    b.HasIndex("AccountId");

                    b.HasIndex("TypeAccountId");

                    b.ToTable("AccountManagement");
                });

            modelBuilder.Entity("ERPAPI.Models.Accounting", b =>
                {
                    b.Property<long>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AccountBalance")
                        .HasColumnType("Money");

                    b.Property<string>("AccountCode")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<bool?>("AceptaNegativo");

                    b.Property<bool>("BlockedInJournal");

                    b.Property<long>("CompanyInfoId");

                    b.Property<string>("Description")
                        .HasMaxLength(5000);

                    b.Property<string>("DeudoraAcreedora");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("HierarchyAccount");

                    b.Property<long?>("IdEstado");

                    b.Property<bool>("IsCash");

                    b.Property<long?>("ParentAccountAccountId");

                    b.Property<int?>("ParentAccountId");

                    b.Property<bool>("Totaliza");

                    b.Property<long>("TypeAccountId");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("AccountId");

                    b.HasIndex("CompanyInfoId");

                    b.HasIndex("ParentAccountAccountId");

                    b.ToTable("Accounting");
                });

            modelBuilder.Entity("ERPAPI.Models.Alert", b =>
                {
                    b.Property<long>("AlertId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ActionTakenId");

                    b.Property<string>("ActionTakenName");

                    b.Property<string>("AlertName");

                    b.Property<string>("AlertType");

                    b.Property<DateTime?>("CloseDate");

                    b.Property<string>("Code");

                    b.Property<string>("Description");

                    b.Property<string>("DescriptionAlert");

                    b.Property<long>("DocumentId");

                    b.Property<string>("DocumentName");

                    b.Property<string>("Estado");

                    b.Property<bool>("FalsoPositivo");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("NivelRiesgoCliente");

                    b.Property<string>("Observacion");

                    b.Property<string>("PersonName");

                    b.Property<bool>("SujetaARos");

                    b.Property<string>("Type");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("AlertId");

                    b.ToTable("Alert");
                });

            modelBuilder.Entity("ERPAPI.Models.ApplicationRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Description");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("ERPAPI.Models.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<DateTimeOffset?>("AwayBlockEnd");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<bool?>("IsEnabled");

                    b.Property<DateTime>("LastPasswordChangedDate");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("ERPAPI.Models.ApplicationUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("PolicyId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("ERPAPI.Models.ApplicationUserRole", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<Guid>("RoleId");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("RoleName");

                    b.Property<string>("UserName");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("ERPAPI.Models.AspNetRoleClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("ERPAPI.Models.AspNetUserLogins", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<Guid>("UserId");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("ERPAPI.Models.AspNetUserTokens", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("ERPAPI.Models.Auditoria", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accion")
                        .HasMaxLength(10);

                    b.Property<string>("Entidad")
                        .HasMaxLength(200);

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Llave")
                        .HasMaxLength(200);

                    b.Property<string>("Usuario")
                        .HasMaxLength(100);

                    b.Property<string>("ValoresAntiguos")
                        .HasMaxLength(2147483647);

                    b.Property<string>("ValoresNuevos")
                        .HasMaxLength(2147483647);

                    b.HasKey("Id");

                    b.ToTable("Auditoria");
                });

            modelBuilder.Entity("ERPAPI.Models.Bank", b =>
                {
                    b.Property<long>("BankId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankName");

                    b.Property<string>("Description");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<int>("IdEstado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("BankId");

                    b.ToTable("Bank");
                });

            modelBuilder.Entity("ERPAPI.Models.BankAccountTransfers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("DestinationAccountManagementId");

                    b.Property<decimal>("DestinationAmount")
                        .HasColumnType("Money");

                    b.Property<long>("EstadoId");

                    b.Property<long?>("ExchangeRateId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("JournalEntryId");

                    b.Property<string>("Notes");

                    b.Property<decimal>("Rate")
                        .HasColumnType("Money");

                    b.Property<long>("SourceAccountManagementId");

                    b.Property<decimal>("SourceAmount")
                        .HasColumnType("Money");

                    b.Property<string>("SourceBank");

                    b.Property<string>("SourceCurrency");

                    b.Property<string>("TargetBank");

                    b.Property<string>("TargetCurrency");

                    b.Property<DateTime>("TransactionDate");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Id");

                    b.HasIndex("DestinationAccountManagementId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("ExchangeRateId");

                    b.HasIndex("JournalEntryId");

                    b.HasIndex("SourceAccountManagementId");

                    b.ToTable("BankAccountTransfers");
                });

            modelBuilder.Entity("ERPAPI.Models.Biometrico", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Observacion")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("IdEstado");

                    b.ToTable("Biometricos");
                });

            modelBuilder.Entity("ERPAPI.Models.Bitacora", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accion");

                    b.Property<string>("ClaseInicial");

                    b.Property<string>("Descripcion");

                    b.Property<string>("DocType");

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<DateTime?>("HoraFin");

                    b.Property<DateTime?>("HoraInicio");

                    b.Property<long>("IdEstado");

                    b.Property<long?>("IdOperacion");

                    b.Property<string>("NoReferencia");

                    b.Property<string>("QueryEjecuto");

                    b.Property<string>("ResultadoSerializado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioEjecucion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Id");

                    b.ToTable("Bitacora");
                });

            modelBuilder.Entity("ERPAPI.Models.BitacoraCierreContable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Anio");

                    b.Property<string>("Estatus");

                    b.Property<long>("EstatusId");

                    b.Property<DateTime?>("FechaCierre");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("Mensaje");

                    b.Property<int?>("Mes");

                    b.Property<int?>("PeriodoId");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Id");

                    b.HasIndex("PeriodoId");

                    b.ToTable("BitacoraCierreContable");
                });

            modelBuilder.Entity("ERPAPI.Models.BitacoraCierreProcesos", b =>
                {
                    b.Property<int>("IdProceso")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Asientos");

                    b.Property<string>("Estatus");

                    b.Property<DateTime?>("FechaCierre");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<int>("IdBitacoraCierre");

                    b.Property<string>("Mensaje");

                    b.Property<int>("PasoCierre");

                    b.Property<string>("Proceso");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdProceso");

                    b.HasIndex("IdBitacoraCierre");

                    b.ToTable("BitacoraCierreProceso");
                });

            modelBuilder.Entity("ERPAPI.Models.BlackListCustomers", b =>
                {
                    b.Property<long>("BlackListId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias");

                    b.Property<long>("CityId");

                    b.Property<string>("CityName");

                    b.Property<string>("Comments");

                    b.Property<long>("CountryId");

                    b.Property<string>("CountryName");

                    b.Property<string>("CustomerReference");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Identidad");

                    b.Property<string>("Nombre");

                    b.Property<string>("Origen");

                    b.Property<string>("RTN");

                    b.Property<string>("Referencia");

                    b.Property<long>("StateId");

                    b.Property<string>("StateName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("BlackListId");

                    b.ToTable("BlackListCustomers");
                });

            modelBuilder.Entity("ERPAPI.Models.BoletaDeSalida", b =>
                {
                    b.Property<long>("BoletaDeSalidaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ARNo");

                    b.Property<string>("Barco");

                    b.Property<long>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<long>("CargadoId");

                    b.Property<string>("Cargadoname");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("DNIMotorista");

                    b.Property<string>("DireccionDestion");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<int>("DocumentoId");

                    b.Property<string>("DocumentoTipo");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaIngreso");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<DateTime?>("FechaSalida");

                    b.Property<string>("GuiRemisionNo");

                    b.Property<int?>("GuiaRemisionId");

                    b.Property<string>("Marca");

                    b.Property<string>("Motorista");

                    b.Property<string>("Observaciones");

                    b.Property<string>("OrdenNo");

                    b.Property<decimal>("PNInglesas");

                    b.Property<decimal>("PesoBruto");

                    b.Property<string>("Placa");

                    b.Property<string>("PlacaContenedor");

                    b.Property<string>("ProductName");

                    b.Property<long?>("Producto");

                    b.Property<decimal>("QQInglesas");

                    b.Property<decimal>("QQPuerto");

                    b.Property<decimal>("Quantity");

                    b.Property<string>("RTNTransportista");

                    b.Property<long?>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<decimal>("Tara");

                    b.Property<decimal>("TonPuerto");

                    b.Property<string>("Transportista");

                    b.Property<long?>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<string>("Vigilante");

                    b.Property<long>("VigilanteId");

                    b.Property<long?>("WeightBallot");

                    b.HasKey("BoletaDeSalidaId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("Producto");

                    b.ToTable("BoletaDeSalida");
                });

            modelBuilder.Entity("ERPAPI.Models.BoletaDeSalidaLine", b =>
                {
                    b.Property<int>("BoletaSalidaLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BoletaSalidaId");

                    b.Property<decimal>("Quantity");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<int?>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<string>("WarehouseName");

                    b.Property<int?>("Warehouseid");

                    b.HasKey("BoletaSalidaLineId");

                    b.HasIndex("BoletaSalidaId");

                    b.HasIndex("SubProductId");

                    b.HasIndex("UnitOfMeasureId");

                    b.HasIndex("Warehouseid");

                    b.ToTable("BoletaDeSalidaLines");
                });

            modelBuilder.Entity("ERPAPI.Models.Boleto_Ent", b =>
                {
                    b.Property<long>("clave_e");

                    b.Property<string>("Barco");

                    b.Property<bool>("CapturaAutomatica");

                    b.Property<long?>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("DNIConductor");

                    b.Property<string>("Destino");

                    b.Property<bool?>("Ingreso");

                    b.Property<string>("MarcaVehiculo");

                    b.Property<string>("Orden");

                    b.Property<decimal>("PesoKG");

                    b.Property<decimal>("PesoKGI");

                    b.Property<decimal>("PesoLBS");

                    b.Property<decimal>("PesoLBSI");

                    b.Property<decimal>("PesoPuerto");

                    b.Property<decimal>("PesoQQ");

                    b.Property<decimal>("PesoQQI");

                    b.Property<decimal>("PesoTM")
                        .HasColumnType("Money");

                    b.Property<decimal>("PesoTMI")
                        .HasColumnType("Money");

                    b.Property<string>("PlacaContenedor");

                    b.Property<string>("RTNTransportista");

                    b.Property<long?>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<string>("Tranportista");

                    b.Property<string>("bascula_e");

                    b.Property<string>("clave_C");

                    b.Property<string>("clave_p");

                    b.Property<string>("clave_u");

                    b.Property<bool>("completo");

                    b.Property<string>("conductor");

                    b.Property<DateTime>("fecha_e");

                    b.Property<string>("hora_e");

                    b.Property<string>("observa_e");

                    b.Property<int>("peso_e");

                    b.Property<string>("placas");

                    b.Property<int>("t_entrada");

                    b.Property<string>("turno_oe");

                    b.Property<string>("unidad_e");

                    b.HasKey("clave_e");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SubProductId");

                    b.ToTable("Boleto_Ent");
                });

            modelBuilder.Entity("ERPAPI.Models.Boleto_Sal", b =>
                {
                    b.Property<long>("clave_e");

                    b.Property<string>("UsuarioSegundaPesada");

                    b.Property<string>("bascula_s");

                    b.Property<bool?>("completo");

                    b.Property<DateTime>("fecha_s");

                    b.Property<string>("hora_s");

                    b.Property<double>("peso_n");

                    b.Property<double>("peso_s");

                    b.Property<bool>("s_manual");

                    b.Property<string>("turno_s");

                    b.HasKey("clave_e");

                    b.ToTable("Boleto_Sal");
                });

            modelBuilder.Entity("ERPAPI.Models.Bonificacion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cantidad");

                    b.Property<long>("EmpleadoId");

                    b.Property<long>("EstadoId");

                    b.Property<DateTime>("FechaBono");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<double>("Monto");

                    b.Property<string>("NombreQuincena");

                    b.Property<long>("Quincena");

                    b.Property<long>("TipoId");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("TipoId");

                    b.ToTable("Bonificaciones");
                });

            modelBuilder.Entity("ERPAPI.Models.Branch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("BranchCode");

                    b.Property<string>("BranchName")
                        .IsRequired();

                    b.Property<string>("City");

                    b.Property<long>("CityId");

                    b.Property<string>("ContactPerson");

                    b.Property<long>("CountryId");

                    b.Property<string>("CountryName");

                    b.Property<int>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<long?>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("Description");

                    b.Property<string>("Email");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<decimal?>("LimitCNBS");

                    b.Property<int>("Numero");

                    b.Property<string>("Observation");

                    b.Property<string>("Phone");

                    b.Property<string>("State");

                    b.Property<long>("StateId");

                    b.Property<string>("URL");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.Property<string>("ZipCode");

                    b.HasKey("BranchId");

                    b.HasIndex("BranchCode")
                        .IsUnique()
                        .HasFilter("[BranchCode] IS NOT NULL");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("IdEstado");

                    b.HasIndex("StateId");

                    b.ToTable("Branch");
                });

            modelBuilder.Entity("ERPAPI.Models.BranchPorDepartamento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdDepartamento");

                    b.Property<string>("NombreDepartamento");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Id");

                    b.ToTable("BranchPorDepartamento");
                });

            modelBuilder.Entity("ERPAPI.Models.CAI", b =>
                {
                    b.Property<long>("IdCAI")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaLimiteEmision");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<DateTime>("FechaRecepcion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<string>("_cai");

                    b.HasKey("IdCAI");

                    b.ToTable("CAI");
                });

            modelBuilder.Entity("ERPAPI.Models.CalculoPlanilla", b =>
                {
                    b.Property<long>("Idcalculo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<DateTime?>("Fechafin");

                    b.Property<DateTime?>("Fechainicio");

                    b.Property<long>("IdEstado");

                    b.Property<long?>("IdPlanilla");

                    b.Property<decimal?>("TasaCambio");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Idcalculo");

                    b.ToTable("CalculoPlanilla");
                });

            modelBuilder.Entity("ERPAPI.Models.CalculoPlanillaDetalle", b =>
                {
                    b.Property<long>("Iddetallecalculo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<DateTime?>("Fechacreacion");

                    b.Property<string>("FormulaEjecutada");

                    b.Property<long?>("IdCalculo");

                    b.Property<long?>("IdFormula");

                    b.Property<long?>("IdOrdenFormula");

                    b.Property<long?>("IdPuesto");

                    b.Property<long?>("Idempleado");

                    b.Property<int?>("IdtipoFormula");

                    b.Property<string>("NombreFormula");

                    b.Property<string>("NombreTipoFormula");

                    b.Property<string>("Nombreempleado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<decimal?>("ValorFormula");

                    b.HasKey("Iddetallecalculo");

                    b.ToTable("CalculoPlanillaDetalle");
                });

            modelBuilder.Entity("ERPAPI.Models.CancelledDocuments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<int>("IdDocumento");

                    b.Property<long>("IdTipoDocumento");

                    b.Property<long>("JournalEntryId");

                    b.Property<string>("TipoDocumento");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoDocumento");

                    b.HasIndex("JournalEntryId");

                    b.ToTable("CancelledDocuments");
                });

            modelBuilder.Entity("ERPAPI.Models.CategoriaPlanilla", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("CategoriasPlanillas");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Nombre = "NOMINA"
                        },
                        new
                        {
                            Id = 2L,
                            Nombre = "NOMINA CONFIDENCIAL"
                        },
                        new
                        {
                            Id = 3L,
                            Nombre = "NOMINA EXTRAORDINARIA"
                        },
                        new
                        {
                            Id = 4L,
                            Nombre = "OTRO"
                        });
                });

            modelBuilder.Entity("ERPAPI.Models.CertificadoDeposito", b =>
                {
                    b.Property<long>("IdCD")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aduana");

                    b.Property<string>("Almacenaje");

                    b.Property<int>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<string>("Comentario");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("Direccion");

                    b.Property<string>("EmpresaSeguro");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCertificado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<DateTime?>("FechaVencimientoCertificado");

                    b.Property<DateTime>("FechaVencimientoDeposito");

                    b.Property<long?>("IdEstado");

                    b.Property<int>("Impresiones");

                    b.Property<string>("Impreso");

                    b.Property<int?>("InsuranceId");

                    b.Property<long?>("InsurancePolicyId");

                    b.Property<string>("ManifiestoNo");

                    b.Property<string>("Mensaje");

                    b.Property<string>("NoCD");

                    b.Property<string>("NoPoliza");

                    b.Property<string>("NoTraslado");

                    b.Property<string>("NombreEmpresa");

                    b.Property<string>("OtrosCargos");

                    b.Property<bool?>("PendienteAutorizar");

                    b.Property<bool?>("PolizaPropia");

                    b.Property<decimal>("PorcentajeDeudas");

                    b.Property<int?>("PrecioCafeId");

                    b.Property<string>("Producto");

                    b.Property<decimal>("Quantitysum");

                    b.Property<string>("Recibos");

                    b.Property<string>("Seguro");

                    b.Property<long>("ServicioId");

                    b.Property<string>("ServicioName");

                    b.Property<string>("SituadoEn");

                    b.Property<int>("SolicitudCertificadoId");

                    b.Property<decimal?>("SujetasAPago");

                    b.Property<decimal>("Total");

                    b.Property<decimal?>("TotalDerechos");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<int>("impresionesTalon");

                    b.HasKey("IdCD");

                    b.HasIndex("BranchId");

                    b.HasIndex("InsuranceId");

                    b.HasIndex("InsurancePolicyId");

                    b.HasIndex("PrecioCafeId");

                    b.HasIndex("ServicioId");

                    b.ToTable("CertificadoDeposito");
                });

            modelBuilder.Entity("ERPAPI.Models.CertificadoLine", b =>
                {
                    b.Property<long>("CertificadoLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("Money");

                    b.Property<decimal?>("CantidadDisponible");

                    b.Property<decimal?>("CantidadDisponibleAutorizar");

                    b.Property<decimal?>("DerechosFiscales");

                    b.Property<string>("Description");

                    b.Property<long?>("GoodsReceivedLineId");

                    b.Property<long>("IdCD");

                    b.Property<decimal?>("Merma");

                    b.Property<string>("Observaciones");

                    b.Property<int?>("PdaNo");

                    b.Property<decimal>("Price")
                        .HasColumnType("Money");

                    b.Property<decimal>("Quantity");

                    b.Property<int?>("ReciboId");

                    b.Property<decimal?>("Saldo");

                    b.Property<decimal>("SaldoEndoso");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<decimal>("TotalCantidad");

                    b.Property<string>("UnitMeasurName");

                    b.Property<long>("UnitMeasureId");

                    b.Property<decimal?>("ValorUnitarioDerechos");

                    b.Property<int>("WarehouseId");

                    b.Property<string>("WarehouseName");

                    b.HasKey("CertificadoLineId");

                    b.HasIndex("GoodsReceivedLineId");

                    b.HasIndex("IdCD");

                    b.HasIndex("SubProductId");

                    b.ToTable("CertificadoLine");
                });

            modelBuilder.Entity("ERPAPI.Models.CheckAccount", b =>
                {
                    b.Property<long>("CheckAccountId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountManagementId");

                    b.Property<string>("AssociatedAccountNumber");

                    b.Property<long>("BankId");

                    b.Property<string>("BankName");

                    b.Property<string>("CheckAccountNo");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaIngreso");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long?>("IdEstado");

                    b.Property<string>("NoFinal");

                    b.Property<string>("NoInicial");

                    b.Property<string>("NumeroActual");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("CheckAccountId");

                    b.HasIndex("AccountManagementId");

                    b.HasIndex("CheckAccountNo")
                        .IsUnique()
                        .HasFilter("[CheckAccountNo] IS NOT NULL");

                    b.HasIndex("IdEstado");

                    b.ToTable("CheckAccount");
                });

            modelBuilder.Entity("ERPAPI.Models.CheckAccountLines", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<decimal>("Ammount")
                        .HasColumnType("Money");

                    b.Property<string>("AmountWords");

                    b.Property<long>("CheckAccountId");

                    b.Property<string>("CheckNumber");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<bool?>("Impreso");

                    b.Property<long?>("JournalEntrId");

                    b.Property<int?>("PartyId");

                    b.Property<int?>("PartyTypeId");

                    b.Property<string>("PaytoOrderOf");

                    b.Property<string>("Place");

                    b.Property<string>("RTN");

                    b.Property<int?>("RetencionId");

                    b.Property<string>("Sinopsis");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Id");

                    b.HasIndex("CheckAccountId");

                    b.HasIndex("IdEstado");

                    b.HasIndex("JournalEntrId");

                    b.HasIndex("RetencionId");

                    b.ToTable("CheckAccountLines");
                });

            modelBuilder.Entity("ERPAPI.Models.CierresAccounting", b =>
                {
                    b.Property<int>("CierreAccountingId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AccountBalance");

                    b.Property<string>("AccountCode")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<long>("AccountId");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("BitacoraCierreContableId");

                    b.Property<bool>("BlockedInJournal");

                    b.Property<long>("CompanyInfoId");

                    b.Property<string>("Description")
                        .HasMaxLength(5000);

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCierre");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("HierarchyAccount");

                    b.Property<long?>("IdEstado");

                    b.Property<bool>("IsCash");

                    b.Property<long?>("ParentAccountAccountId");

                    b.Property<int?>("ParentAccountId");

                    b.Property<long>("TypeAccountId");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("CierreAccountingId");

                    b.HasIndex("BitacoraCierreContableId");

                    b.HasIndex("CompanyInfoId");

                    b.HasIndex("ParentAccountAccountId");

                    b.ToTable("CierresAccounting");
                });

            modelBuilder.Entity("ERPAPI.Models.CierresJournal", b =>
                {
                    b.Property<long>("CierresJournalEntryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedBy");

                    b.Property<int>("BitacoraCierreContableId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .IsRequired();

                    b.Property<DateTime>("Date");

                    b.Property<DateTime>("DatePosted");

                    b.Property<long>("DocumentId");

                    b.Property<long?>("EstadoId");

                    b.Property<string>("EstadoName");

                    b.Property<DateTime>("FechaCierre");

                    b.Property<int?>("GeneralLedgerHeaderId");

                    b.Property<long?>("GeneralLedgerHeaderId1");

                    b.Property<int>("IdPaymentCode");

                    b.Property<int>("IdTypeofPayment");

                    b.Property<long>("JournalEntryId");

                    b.Property<string>("Memo");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifiedUser")
                        .IsRequired();

                    b.Property<int?>("PartyId");

                    b.Property<long?>("PartyId1");

                    b.Property<int>("PartyTypeId");

                    b.Property<string>("PartyTypeName");

                    b.Property<bool?>("Posted");

                    b.Property<string>("ReferenceNo");

                    b.Property<decimal>("TotalCredit");

                    b.Property<decimal>("TotalDebit");

                    b.Property<string>("TypeJournalName");

                    b.Property<int>("TypeOfAdjustmentId");

                    b.Property<string>("TypeOfAdjustmentName");

                    b.Property<int?>("VoucherType");

                    b.HasKey("CierresJournalEntryId");

                    b.HasIndex("BitacoraCierreContableId");

                    b.HasIndex("GeneralLedgerHeaderId1");

                    b.HasIndex("PartyId1");

                    b.ToTable("CierresJournal");
                });

            modelBuilder.Entity("ERPAPI.Models.CierresJournalEntryLine", b =>
                {
                    b.Property<long>("CierresJournalEntryLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId");

                    b.Property<string>("AccountName");

                    b.Property<int>("BitacoraCierreContableId");

                    b.Property<long?>("CierresJournalEntryId");

                    b.Property<long>("CostCenterId")
                        .HasMaxLength(30);

                    b.Property<string>("CostCenterName");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .IsRequired();

                    b.Property<decimal>("Credit");

                    b.Property<decimal>("CreditME");

                    b.Property<decimal>("CreditSy");

                    b.Property<decimal>("Debit");

                    b.Property<decimal>("DebitME");

                    b.Property<decimal>("DebitSy");

                    b.Property<string>("Description")
                        .HasMaxLength(60);

                    b.Property<DateTime>("FechaCierre");

                    b.Property<long>("JournalEntryId");

                    b.Property<long>("JournalEntryLineId");

                    b.Property<string>("Memo");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifiedUser")
                        .IsRequired();

                    b.HasKey("CierresJournalEntryLineId");

                    b.HasIndex("BitacoraCierreContableId");

                    b.HasIndex("CierresJournalEntryId");

                    b.ToTable("CierresJournalEntryLine");
                });

            modelBuilder.Entity("ERPAPI.Models.City", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<long?>("CountryId");

                    b.Property<string>("Description");

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdEstado");

                    b.Property<string>("Name");

                    b.Property<long?>("StateId");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Id");

                    b.HasIndex("IdEstado");

                    b.HasIndex("StateId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("ERPAPI.Models.Comision", b =>
                {
                    b.Property<long>("ComisionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<long>("EstadoId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("TipoComision");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("ComisionId");

                    b.ToTable("Comision");
                });

            modelBuilder.Entity("ERPAPI.Models.CompanyInfo", b =>
                {
                    b.Property<long>("CompanyInfoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("CodigoInstitucion");

                    b.Property<string>("Company_Name");

                    b.Property<long>("CountryId");

                    b.Property<string>("CountryName");

                    b.Property<string>("Email");

                    b.Property<string>("Estado");

                    b.Property<string>("Fax");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long?>("IdEstado");

                    b.Property<string>("Manager");

                    b.Property<string>("MobilePhone");

                    b.Property<string>("Phone");

                    b.Property<string>("PostalCode");

                    b.Property<string>("PrintHeader");

                    b.Property<string>("RTN");

                    b.Property<string>("RTNMANAGER");

                    b.Property<string>("RevOffice");

                    b.Property<string>("SocialNetworks");

                    b.Property<string>("Tax_Id");

                    b.Property<string>("TipoInstitucion");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<string>("WebPage");

                    b.Property<string>("image");

                    b.Property<string>("imageDir");

                    b.HasKey("CompanyInfoId");

                    b.ToTable("CompanyInfo");
                });

            modelBuilder.Entity("ERPAPI.Models.Concept", b =>
                {
                    b.Property<long>("ConceptId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Calculation");

                    b.Property<string>("ConceptName");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long>("TypeId");

                    b.Property<string>("TypeName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<double>("Value");

                    b.HasKey("ConceptId");

                    b.ToTable("Concept");
                });

            modelBuilder.Entity("ERPAPI.Models.Conciliacion", b =>
                {
                    b.Property<int>("ConciliacionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.Property<long>("BankId");

                    b.Property<string>("BankName")
                        .IsRequired();

                    b.Property<long>("CheckAccountId");

                    b.Property<DateTime>("DateBeginReconciled");

                    b.Property<DateTime>("DateEndReconciled");

                    b.Property<string>("Estado");

                    b.Property<long>("EstadoId");

                    b.Property<DateTime>("FechaConciliacion");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<decimal>("SaldoBanco");

                    b.Property<double>("SaldoConciliado");

                    b.Property<decimal>("SaldoLibro");

                    b.Property<decimal>("SaldoLibroInicial");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("ConciliacionId");

                    b.HasIndex("EstadoId");

                    b.ToTable("Conciliacion");
                });

            modelBuilder.Entity("ERPAPI.Models.ConciliacionLinea", b =>
                {
                    b.Property<int>("ConciliacionLineaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CheknumberId");

                    b.Property<int>("ConciliacionId");

                    b.Property<double>("Credit");

                    b.Property<int>("CurrencyId");

                    b.Property<double>("Debit");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long?>("JournalEntryId");

                    b.Property<long?>("JournalEntryLineId");

                    b.Property<string>("MonedaName")
                        .IsRequired();

                    b.Property<double>("Monto");

                    b.Property<long?>("MotivoId");

                    b.Property<long?>("NumeroDocumento");

                    b.Property<string>("PartyName");

                    b.Property<bool>("Reconciled");

                    b.Property<string>("ReferenceTrans");

                    b.Property<string>("ReferenciaBancaria");

                    b.Property<string>("TipoDocumento");

                    b.Property<DateTime>("TransDate");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion");

                    b.Property<long?>("VoucherTypeId");

                    b.HasKey("ConciliacionLineaId");

                    b.HasIndex("ConciliacionId");

                    b.ToTable("ConciliacionLinea");
                });

            modelBuilder.Entity("ERPAPI.Models.Conditions", b =>
                {
                    b.Property<long>("ConditionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConditionName");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("ConditionId");

                    b.ToTable("Conditions");
                });

            modelBuilder.Entity("ERPAPI.Models.ConfiguracionVacaciones", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Antiguedad");

                    b.Property<int>("DiasVacaciones");

                    b.Property<long>("EstadoId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.ToTable("ConfiguracionVacaciones");
                });

            modelBuilder.Entity("ERPAPI.Models.ConfigurationVendor", b =>
                {
                    b.Property<long>("ConfigurationVendorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .IsRequired();

                    b.Property<string>("Estado");

                    b.Property<long>("IdEstado");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifiedUser")
                        .IsRequired();

                    b.Property<double>("QtyMonth");

                    b.HasKey("ConfigurationVendorId");

                    b.ToTable("ConfigurationVendor");
                });

            modelBuilder.Entity("ERPAPI.Models.ContactPerson", b =>
                {
                    b.Property<long>("ContactPersonId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactPersonCity");

                    b.Property<int>("ContactPersonCityId");

                    b.Property<string>("ContactPersonEmail");

                    b.Property<string>("ContactPersonEstado");

                    b.Property<long>("ContactPersonIdEstado");

                    b.Property<string>("ContactPersonIdentity");

                    b.Property<string>("ContactPersonName");

                    b.Property<string>("ContactPersonPhone");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatedUser");

                    b.Property<long>("CustomerId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifiedUser");

                    b.Property<long>("VendorId");

                    b.HasKey("ContactPersonId");

                    b.ToTable("ContactPerson");
                });

            modelBuilder.Entity("ERPAPI.Models.ContextoRiesgo", b =>
                {
                    b.Property<long>("IdContextoRiesgo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("TipoContexto");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdContextoRiesgo");

                    b.ToTable("ContextoRiesgo");
                });

            modelBuilder.Entity("ERPAPI.Models.Contrato", b =>
                {
                    b.Property<long>("ContratoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BranchId");

                    b.Property<int>("Cuotas_pagadas");

                    b.Property<int>("Cuotas_pendiente");

                    b.Property<long>("CustomerId");

                    b.Property<int>("Dias_mora");

                    b.Property<int>("Estado");

                    b.Property<DateTime>("Fecha");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<string>("FechaModificacion")
                        .IsRequired();

                    b.Property<DateTime>("Fecha_de_vencimiento");

                    b.Property<DateTime>("Fecha_inicio");

                    b.Property<int>("Plazo");

                    b.Property<DateTime>("Proxima_fecha_de_pago");

                    b.Property<double>("Saldo_Contrato");

                    b.Property<double>("Tasa_de_Interes");

                    b.Property<DateTime>("Ultima_fecha_de_pago");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.Property<double>("Valor_Contrato");

                    b.Property<double>("Valor_cuota");

                    b.Property<double>("Valor_prima");

                    b.HasKey("ContratoId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Contrato");
                });

            modelBuilder.Entity("ERPAPI.Models.Contrato_detalle", b =>
                {
                    b.Property<long>("Contrato_detalleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cantidad");

                    b.Property<long>("ContratoId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Modelo")
                        .HasMaxLength(100);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<double>("Monto");

                    b.Property<double>("Precio");

                    b.Property<long>("ProductId");

                    b.Property<string>("Serie")
                        .HasMaxLength(100);

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("Contrato_detalleId");

                    b.HasIndex("ContratoId");

                    b.ToTable("Contrato_detalle");
                });

            modelBuilder.Entity("ERPAPI.Models.Contrato_movimientos", b =>
                {
                    b.Property<long>("Contrato_movimientosId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BranchId");

                    b.Property<long>("ContratoId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<long?>("EmployeesId");

                    b.Property<DateTime>("Fechamovimiento");

                    b.Property<int>("Forma_pago");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.Property<double>("Valorcapital");

                    b.Property<int>("tipo_movimiento");

                    b.HasKey("Contrato_movimientosId");

                    b.HasIndex("BranchId");

                    b.HasIndex("ContratoId");

                    b.HasIndex("EmployeesId");

                    b.ToTable("Contrato_movimientos");
                });

            modelBuilder.Entity("ERPAPI.Models.Contrato_plan_pagos", b =>
                {
                    b.Property<long>("Nro_cuota")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ContratoId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<short>("Estadocuota");

                    b.Property<DateTime>("Fechacuota");

                    b.Property<DateTime>("Fechapago");

                    b.Property<double>("Interesesmoratorios");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Recibopago");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.Property<double>("Valorcapital");

                    b.Property<double>("Valorintereses");

                    b.Property<double>("Valorotroscargos");

                    b.Property<double>("Valorpagado");

                    b.Property<double>("Valorseguros");

                    b.HasKey("Nro_cuota", "ContratoId");

                    b.HasAlternateKey("ContratoId", "Nro_cuota");

                    b.ToTable("Contrato_plan_pagos");
                });

            modelBuilder.Entity("ERPAPI.Models.ControlAsistencias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Dia");

                    b.Property<DateTime>("Fecha");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEmpleado");

                    b.Property<bool>("Revisado");

                    b.Property<long?>("TipoAsistencia");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpleado");

                    b.ToTable("ControlAsistencias");
                });

            modelBuilder.Entity("ERPAPI.Models.ControlPallets", b =>
                {
                    b.Property<long>("ControlPalletsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("DescriptionProduct");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<int>("EsIngreso");

                    b.Property<int>("EsSalida");

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long>("GoodsDeliveryAuthorizationId");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Impreso");

                    b.Property<string>("Marca");

                    b.Property<string>("Motorista");

                    b.Property<string>("Observaciones");

                    b.Property<int>("PalletId");

                    b.Property<string>("Placa");

                    b.Property<long?>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<bool?>("ProductoPesado");

                    b.Property<double>("QQPesoBruto");

                    b.Property<double>("QQPesoFinal");

                    b.Property<double>("QQPesoNeto");

                    b.Property<int>("SacosDevueltos");

                    b.Property<long?>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<int>("SubTotal");

                    b.Property<double>("Tara");

                    b.Property<double>("TotalSacos");

                    b.Property<int>("TotalSacosPolietileno");

                    b.Property<int>("TotalSacosYute");

                    b.Property<int?>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<int?>("WarehouseId");

                    b.Property<string>("WarehouseName");

                    b.Property<long>("WeightBallot");

                    b.HasKey("ControlPalletsId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SubProductId");

                    b.HasIndex("UnitOfMeasureId");

                    b.ToTable("ControlPallets");
                });

            modelBuilder.Entity("ERPAPI.Models.ControlPalletsLine", b =>
                {
                    b.Property<long>("ControlPalletsLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Alto");

                    b.Property<int>("Ancho");

                    b.Property<long>("CenterCostId");

                    b.Property<string>("CenterCostName");

                    b.Property<long>("ControlPalletsId");

                    b.Property<int>("Estiba");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<int?>("Linea");

                    b.Property<string>("Observacion");

                    b.Property<int>("Otros");

                    b.Property<decimal?>("Qty");

                    b.Property<long?>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<double>("Totallinea");

                    b.Property<int?>("UnitofMeasureId");

                    b.Property<string>("UnitofMeasureName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<int?>("WarehouseId");

                    b.Property<string>("WarehouseName");

                    b.Property<int>("cantidadPoliEtileno");

                    b.Property<int>("cantidadYute");

                    b.HasKey("ControlPalletsLineId");

                    b.HasIndex("ControlPalletsId");

                    b.HasIndex("SubProductId");

                    b.HasIndex("UnitofMeasureId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("ControlPalletsLine");
                });

            modelBuilder.Entity("ERPAPI.Models.CostCenter", b =>
                {
                    b.Property<long>("CostCenterId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<string>("CostCenterName")
                        .IsRequired();

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("CostCenterId");

                    b.ToTable("CostCenter");
                });

            modelBuilder.Entity("ERPAPI.Models.CostListItem", b =>
                {
                    b.Property<long>("CostListItemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ConRealBagValueInside");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .IsRequired();

                    b.Property<DateTime>("DayofCalcule");

                    b.Property<double>("DifferencyPriceBagValue");

                    b.Property<double>("EscrowExpenses");

                    b.Property<long>("ExchangeRateId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifiedUser")
                        .IsRequired();

                    b.Property<double>("PCRealBagValueInside");

                    b.Property<double>("PermiseExportExpenses");

                    b.Property<double>("PorcentagePriceBagValue");

                    b.Property<double>("PriceBagValue");

                    b.Property<double>("PriceBagValueCurrency");

                    b.Property<double>("RealBagValueCurrency");

                    b.Property<double>("RealBagValueInside");

                    b.Property<double>("RecipientExpenses");

                    b.Property<long>("SubproductId");

                    b.Property<double>("TaxesExpenses");

                    b.Property<double>("TotalExpenses");

                    b.Property<double>("TotalExpensesCurrency");

                    b.Property<double>("TotalIncomes");

                    b.Property<double>("TotalPriceBagValue");

                    b.Property<double>("UtilityExpenses");

                    b.HasKey("CostListItemId");

                    b.ToTable("CostListItem");
                });

            modelBuilder.Entity("ERPAPI.Models.Country", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccionId");

                    b.Property<string>("AccionName");

                    b.Property<DateTime>("Actualizacion");

                    b.Property<string>("Code");

                    b.Property<string>("Comments");

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<bool>("GAFI");

                    b.Property<long>("IdEstado");

                    b.Property<int>("ListaId");

                    b.Property<string>("ListaName");

                    b.Property<string>("Name");

                    b.Property<int>("NivelRiesgo");

                    b.Property<string>("NivelRiesgoName");

                    b.Property<int?>("PhoneCode");

                    b.Property<int>("SeguimientoId");

                    b.Property<string>("SeguimientoName");

                    b.Property<string>("SortName");

                    b.Property<int>("TipoAlertaId");

                    b.Property<string>("TipoAlertaName");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("ERPAPI.Models.CreditNote", b =>
                {
                    b.Property<int>("CreditNoteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("Money");

                    b.Property<DateTime?>("AprobadoEl");

                    b.Property<string>("AprobadoPor");

                    b.Property<int>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<string>("CAI");

                    b.Property<long>("CertificadoDepositoId");

                    b.Property<string>("Correo");

                    b.Property<DateTime>("CreditNoteDate");

                    b.Property<string>("CreditNoteName");

                    b.Property<int>("CreditNoteTypeId");

                    b.Property<int>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("Direccion");

                    b.Property<decimal>("Discount")
                        .HasColumnType("Money");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaLimiteEmision");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<bool>("Fiscal");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Impreso");

                    b.Property<long?>("InvoiceId");

                    b.Property<long?>("JournalEntryId");

                    b.Property<string>("NoConstanciadeRegistro");

                    b.Property<string>("NoFin");

                    b.Property<string>("NoInicio");

                    b.Property<string>("NoOCExenta");

                    b.Property<string>("NoSAG");

                    b.Property<string>("NumeroDEI");

                    b.Property<string>("NumeroDEIDocumentoAsociado");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<string>("RTN");

                    b.Property<string>("RangoAutorizado");

                    b.Property<string>("Remarks");

                    b.Property<DateTime?>("RevisadoEl");

                    b.Property<string>("RevisadoPor");

                    b.Property<int>("SalesTypeId");

                    b.Property<int>("ShipmentId");

                    b.Property<long?>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("Money");

                    b.Property<string>("Sucursal");

                    b.Property<decimal>("Tax")
                        .HasColumnType("Money");

                    b.Property<string>("Tefono");

                    b.Property<string>("TipoDocumento");

                    b.Property<decimal>("Total")
                        .HasColumnType("Money");

                    b.Property<decimal>("TotalExento")
                        .HasColumnType("Money");

                    b.Property<decimal>("TotalExonerado")
                        .HasColumnType("Money");

                    b.Property<decimal>("TotalGravado")
                        .HasColumnType("Money");

                    b.Property<string>("TotalLetras");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("CreditNoteId");

                    b.HasIndex("JournalEntryId");

                    b.ToTable("CreditNote");
                });

            modelBuilder.Entity("ERPAPI.Models.CreditNoteLine", b =>
                {
                    b.Property<long>("CreditNoteLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.Property<string>("AccountName");

                    b.Property<decimal>("Amount")
                        .HasColumnType("Money");

                    b.Property<long>("CostCenterId");

                    b.Property<string>("CostCenterName");

                    b.Property<int>("CreditNoteId");

                    b.Property<decimal>("CreditValue");

                    b.Property<string>("Description");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("Money");

                    b.Property<decimal>("DiscountPercentage");

                    b.Property<decimal>("Price")
                        .HasColumnType("Money");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<double>("Quantity");

                    b.Property<decimal>("SaldoPendiente");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("Money");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("Money");

                    b.Property<string>("TaxCode");

                    b.Property<long>("TaxId");

                    b.Property<decimal>("TaxPercentage");

                    b.Property<decimal>("Total")
                        .HasColumnType("Money");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<long>("WareHouseId");

                    b.HasKey("CreditNoteLineId");

                    b.HasIndex("CreditNoteId");

                    b.ToTable("CreditNoteLine");
                });

            modelBuilder.Entity("ERPAPI.Models.CuentaBancoEmpleados", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BankId");

                    b.Property<string>("BankName");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long>("IdEmpleado");

                    b.Property<string>("NombreEmpleado");

                    b.Property<string>("NumeroCuenta");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("Id");

                    b.ToTable("CuentaBancoEmpleados");
                });

            modelBuilder.Entity("ERPAPI.Models.Currency", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CurrencyCode")
                        .IsRequired();

                    b.Property<string>("CurrencyName")
                        .IsRequired();

                    b.Property<string>("Description");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("CurrencyId");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("ERPAPI.Models.Customer", b =>
                {
                    b.Property<long>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AFND");

                    b.Property<long?>("ActividadEconomicaId");

                    b.Property<string>("Address");

                    b.Property<bool?>("CargosPublicos");

                    b.Property<string>("City");

                    b.Property<long?>("CityId");

                    b.Property<bool?>("ClienteRecoger");

                    b.Property<bool?>("ConfirmacionCorreo");

                    b.Property<string>("ContactPerson");

                    b.Property<string>("Conyugue");

                    b.Property<long?>("CountryId");

                    b.Property<string>("CountryName");

                    b.Property<string>("CustomerName");

                    b.Property<string>("CustomerRefNumber");

                    b.Property<long?>("CustomerTypeId");

                    b.Property<string>("CustomerTypeName");

                    b.Property<string>("Denominacion");

                    b.Property<string>("DireccionEmpresaPN");

                    b.Property<string>("DireccionEnvio");

                    b.Property<int?>("Edad");

                    b.Property<string>("Email");

                    b.Property<bool?>("EnviarlaMensajero");

                    b.Property<bool?>("EsExonerado");

                    b.Property<string>("Estado");

                    b.Property<int?>("EstadoCivil");

                    b.Property<bool>("Exonerado");

                    b.Property<string>("Familiares");

                    b.Property<string>("Fax");

                    b.Property<DateTime?>("FechaBaja");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<DateTime?>("FechaNacimiento");

                    b.Property<string>("FirmaAuditoriaExterna");

                    b.Property<long?>("GeneroId");

                    b.Property<string>("GiroActividadNegocio");

                    b.Property<string>("GrupoEconomico");

                    b.Property<long?>("GrupoEconomicoId");

                    b.Property<long?>("IdEstado");

                    b.Property<string>("IdentidadApoderado");

                    b.Property<bool?>("InstitucionSupervisada");

                    b.Property<string>("LugarNacimiento");

                    b.Property<double?>("MontoActivos");

                    b.Property<double>("MontoIngresosAnuales");

                    b.Property<string>("Nacionalidad");

                    b.Property<string>("NombreApoderado");

                    b.Property<string>("NombreEmpresaPN");

                    b.Property<string>("NombreFuncionario");

                    b.Property<string>("Observaciones");

                    b.Property<bool>("PEP");

                    b.Property<string>("PerteneceEmpresa");

                    b.Property<string>("Phone");

                    b.Property<long?>("ProductTypeId");

                    b.Property<long?>("ProfesionId");

                    b.Property<string>("ProfesionOficio");

                    b.Property<string>("Proveedor1");

                    b.Property<string>("Proveedor2");

                    b.Property<string>("RTN")
                        .IsRequired();

                    b.Property<string>("RTNGerenteGeneral");

                    b.Property<string>("SolicitadoPor");

                    b.Property<string>("State");

                    b.Property<long?>("StateId");

                    b.Property<long?>("TaxId");

                    b.Property<string>("TelefonoEmpresaPN");

                    b.Property<int?>("UnitOfMeasurePreference");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<double?>("ValorSeveridadRiesgo");

                    b.Property<string>("WorkPhone");

                    b.Property<string>("ZipCode");

                    b.HasKey("CustomerId");

                    b.HasIndex("ActividadEconomicaId");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CustomerTypeId");

                    b.HasIndex("GeneroId");

                    b.HasIndex("IdEstado");

                    b.HasIndex("ProductTypeId");

                    b.HasIndex("ProfesionId");

                    b.HasIndex("RTN")
                        .IsUnique();

                    b.HasIndex("StateId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerAcccountStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Credito");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<decimal>("Debito");

                    b.Property<long>("DocumentoId");

                    b.Property<DateTime>("Fecha");

                    b.Property<int?>("InvoiceId");

                    b.Property<int?>("InvoicePaymentId");

                    b.Property<string>("NoDocumento");

                    b.Property<decimal>("Saldo");

                    b.Property<string>("Sinopsis");

                    b.Property<string>("TipoDocumento");

                    b.Property<long?>("TipoDocumentoId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("InvoicePaymentId");

                    b.HasIndex("TipoDocumentoId");

                    b.ToTable("CustomerAcccountStatus");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerArea", b =>
                {
                    b.Property<long>("CustomerAreaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Alto");

                    b.Property<double>("Ancho");

                    b.Property<long>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<bool>("Cerrado");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("Impreso");

                    b.Property<int?>("InvoiceId");

                    b.Property<double>("Largo");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<long>("TypeId");

                    b.Property<string>("TypeName");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<double>("UsedArea");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<long>("WareHouseId");

                    b.Property<string>("WareHouseName");

                    b.HasKey("CustomerAreaId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("CustomerArea");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerAreaProduct", b =>
                {
                    b.Property<long>("CustomerAreaProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CustomerAreaId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaMoficacion");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.HasKey("CustomerAreaProductId");

                    b.HasIndex("CustomerAreaId");

                    b.ToTable("CustomerAreaProduct");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerAuthorizedSignature", b =>
                {
                    b.Property<long>("CustomerAuthorizedSignatureId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Correo");

                    b.Property<long>("CustomerId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("Listados");

                    b.Property<string>("Nombre");

                    b.Property<string>("RTN");

                    b.Property<string>("Telefono");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("CustomerAuthorizedSignatureId");

                    b.ToTable("CustomerAuthorizedSignature");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerConditions", b =>
                {
                    b.Property<long>("CustomerConditionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ConditionId");

                    b.Property<string>("CustomerConditionName");

                    b.Property<long>("CustomerId");

                    b.Property<string>("Description");

                    b.Property<long>("DocumentId");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<long>("IdTipoDocumento");

                    b.Property<string>("LogicalCondition");

                    b.Property<long>("LogicalConditionId");

                    b.Property<long>("ProductId");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<decimal>("ValueDecimal");

                    b.Property<string>("ValueString");

                    b.Property<string>("ValueToEvaluate");

                    b.HasKey("CustomerConditionId");

                    b.ToTable("CustomerConditions");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerContract", b =>
                {
                    b.Property<long>("CustomerContractId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdendumNo");

                    b.Property<int>("BranchId");

                    b.Property<decimal?>("ComisionMax");

                    b.Property<decimal?>("ComisionMin");

                    b.Property<string>("ContitucionAlmacafe");

                    b.Property<string>("Correo1");

                    b.Property<string>("CustomerConstitution");

                    b.Property<long?>("CustomerContractId_Source");

                    b.Property<int?>("CustomerContractType");

                    b.Property<string>("CustomerContractTypeName");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerManager");

                    b.Property<string>("CustomerManagerProfesionNacionalidad");

                    b.Property<string>("CustomerName");

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaContrato");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime?>("FechaInicioContrato");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<DateTime?>("FechaVencimiento");

                    b.Property<long?>("IdEstado");

                    b.Property<decimal?>("IncrementoAnual");

                    b.Property<string>("Manager");

                    b.Property<string>("NameContract");

                    b.Property<string>("Observcion");

                    b.Property<double>("Papeleria");

                    b.Property<decimal?>("Plazo");

                    b.Property<bool?>("PolizaPropia");

                    b.Property<decimal?>("PrecioBaseProducto");

                    b.Property<decimal?>("PrecioServicio");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<string>("RTNCustomerManager");

                    b.Property<string>("RTNMANAGER");

                    b.Property<string>("RelacionPartes");

                    b.Property<long>("SalesOrderId");

                    b.Property<string>("StorageTime");

                    b.Property<long>("TypeContractId");

                    b.Property<string>("TypeContractName");

                    b.Property<long>("TypeInvoiceId");

                    b.Property<string>("TypeInvoiceName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<string>("WareHouses");

                    b.HasKey("CustomerContractId");

                    b.HasIndex("CustomerContractId_Source");

                    b.HasIndex("IdEstado");

                    b.ToTable("CustomerContract");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerContractLines", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CustomerContractId");

                    b.Property<string>("Description");

                    b.Property<decimal>("PeriodoCobro");

                    b.Property<decimal?>("Porcentaje");

                    b.Property<decimal>("Price");

                    b.Property<decimal>("Quantity");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<long?>("TipoCobroId");

                    b.Property<string>("TipoCobroName");

                    b.Property<long?>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<decimal?>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("CustomerContractId");

                    b.HasIndex("SubProductId");

                    b.HasIndex("TipoCobroId");

                    b.ToTable("CustomerContractLines");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerContractLinesTerms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContractTermId");

                    b.Property<long>("CustomerContractId");

                    b.Property<int>("Position");

                    b.Property<string>("Term");

                    b.Property<string>("TermTitle");

                    b.HasKey("Id");

                    b.HasIndex("ContractTermId");

                    b.HasIndex("CustomerContractId");

                    b.ToTable("CustomerContractLinesTerms");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerContractTerms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerContractType");

                    b.Property<string>("CustomerContractTypeName");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<int>("Position");

                    b.Property<long>("ProductId");

                    b.Property<string>("Servicio");

                    b.Property<string>("Term");

                    b.Property<string>("TermTitle");

                    b.Property<long>("TypeInvoiceId");

                    b.Property<string>("TypeInvoiceName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("Position", "ProductId", "TypeInvoiceId", "CustomerContractType")
                        .IsUnique()
                        .HasFilter("[CustomerContractType] IS NOT NULL");

                    b.ToTable("CustomerContractTerms");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerContractWareHouse", b =>
                {
                    b.Property<long>("CustomerContractWareHouseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CustomerContractId");

                    b.Property<string>("EdificioName");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<long>("WareHouseId");

                    b.Property<string>("WareHouseName");

                    b.HasKey("CustomerContractWareHouseId");

                    b.HasIndex("CustomerContractId");

                    b.ToTable("CustomerContractWareHouse");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerDocument", b =>
                {
                    b.Property<long>("CustomerDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CustomerId");

                    b.Property<string>("DocumentName");

                    b.Property<long>("DocumentTypeId");

                    b.Property<string>("DocumentTypeName");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<string>("Path");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("CustomerDocumentId");

                    b.ToTable("CustomerDocument");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerPartners", b =>
                {
                    b.Property<long>("PartnerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CargoPublico");

                    b.Property<string>("Correo");

                    b.Property<long>("CustomerId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<bool>("FuncionarioPublico");

                    b.Property<string>("Identidad");

                    b.Property<string>("Listados");

                    b.Property<string>("PartnerName");

                    b.Property<string>("RTN");

                    b.Property<string>("Telefono");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("PartnerId");

                    b.ToTable("CustomerPartners");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerPhones", b =>
                {
                    b.Property<long>("CustomerPhoneId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<string>("Phone");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("CustomerPhoneId");

                    b.ToTable("CustomerPhones");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerProduct", b =>
                {
                    b.Property<long>("CustomerProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<double>("SaldoProductoCertificado");

                    b.Property<double>("SaldoProductoSacos");

                    b.Property<double>("SaldoProductoTotal");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("CustomerProductId");

                    b.ToTable("CustomerProduct");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerType", b =>
                {
                    b.Property<long>("CustomerTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerTypeName")
                        .IsRequired();

                    b.Property<string>("Description");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("CustomerTypeId");

                    b.ToTable("CustomerType");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomersOfCustomer", b =>
                {
                    b.Property<long>("CustomerOfId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("ContactPerson");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName")
                        .IsRequired();

                    b.Property<int>("CustomerTypeId");

                    b.Property<string>("Email");

                    b.Property<string>("Identidad")
                        .IsRequired();

                    b.Property<string>("Phone");

                    b.Property<string>("RTN")
                        .IsRequired();

                    b.Property<string>("State");

                    b.Property<string>("ZipCode");

                    b.HasKey("CustomerOfId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomersOfCustomer");
                });

            modelBuilder.Entity("ERPAPI.Models.DebitNote", b =>
                {
                    b.Property<long>("DebitNoteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("Money");

                    b.Property<DateTime?>("AprobadoEl");

                    b.Property<string>("AprobadoPor");

                    b.Property<long>("Bank");

                    b.Property<string>("BankName");

                    b.Property<int>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<string>("CAI");

                    b.Property<string>("Correo");

                    b.Property<string>("CuentaBancaria");

                    b.Property<long?>("CuentaBancariaId");

                    b.Property<long?>("CuentaContableDebitoId");

                    b.Property<string>("CuentaContableDebitoNombre");

                    b.Property<long?>("CuentaContableIngresosId");

                    b.Property<string>("CuentaContableIngresosNombre");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<DateTime>("DebitNoteDate");

                    b.Property<DateTime?>("DebitNoteDueDate");

                    b.Property<string>("DebitNoteName");

                    b.Property<string>("Descripcion");

                    b.Property<int>("DiasVencimiento");

                    b.Property<string>("Direccion");

                    b.Property<decimal>("Discount")
                        .HasColumnType("Money");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaLimiteEmision");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<bool>("Fiscal");

                    b.Property<long>("IdEstado");

                    b.Property<long>("IdPuntoEmision");

                    b.Property<int?>("InvoiceId");

                    b.Property<long?>("JournalEntryId");

                    b.Property<string>("NoConstanciadeRegistro");

                    b.Property<string>("NoFin");

                    b.Property<string>("NoInicio");

                    b.Property<string>("NoOCExenta");

                    b.Property<string>("NoSAG");

                    b.Property<string>("NumeroDEI");

                    b.Property<string>("NumeroDEIString");

                    b.Property<string>("RTN");

                    b.Property<string>("RangoAutorizado");

                    b.Property<string>("Remarks");

                    b.Property<DateTime?>("RevisadoEl");

                    b.Property<string>("RevisadoPor");

                    b.Property<decimal>("Saldo");

                    b.Property<int>("SalesTypeId");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("Money");

                    b.Property<string>("Sucursal");

                    b.Property<decimal>("Tax")
                        .HasColumnType("Money");

                    b.Property<string>("Tefono");

                    b.Property<string>("TipoDocumento");

                    b.Property<decimal>("Total")
                        .HasColumnType("Money");

                    b.Property<string>("TotalLetras");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("DebitNoteId");

                    b.HasIndex("CuentaBancariaId");

                    b.HasIndex("CuentaContableDebitoId");

                    b.HasIndex("CuentaContableIngresosId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("JournalEntryId");

                    b.ToTable("DebitNote");
                });

            modelBuilder.Entity("ERPAPI.Models.DebitNoteLine", b =>
                {
                    b.Property<long>("DebitNoteLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.Property<string>("AccountName");

                    b.Property<decimal>("Amount")
                        .HasColumnType("Money");

                    b.Property<long>("CostCenterId");

                    b.Property<string>("CostCenterName");

                    b.Property<long>("DebitNoteId");

                    b.Property<string>("Description");

                    b.Property<decimal>("DiscountAmount");

                    b.Property<decimal>("DiscountPercentage");

                    b.Property<decimal>("Price")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 38, scale: 17)))
                        .HasColumnType("Money");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<double>("Quantity");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("Money");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("Money");

                    b.Property<string>("TaxCode");

                    b.Property<long>("TaxId");

                    b.Property<decimal>("TaxPercentage");

                    b.Property<decimal>("Total")
                        .HasColumnType("Money");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<long>("WareHouseId");

                    b.HasKey("DebitNoteLineId");

                    b.HasIndex("DebitNoteId");

                    b.ToTable("DebitNoteLine");
                });

            modelBuilder.Entity("ERPAPI.Models.DeduccionEmpleado", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantidadCuotas");

                    b.Property<long>("DeductionId");

                    b.Property<long>("EmpleadoId");

                    b.Property<int>("EstadoId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<float>("Monto");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<DateTime>("VigenciaFinaliza");

                    b.Property<DateTime>("VigenciaInicio");

                    b.HasKey("Id");

                    b.HasIndex("DeductionId");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("DeduccionesEmpleados");
                });

            modelBuilder.Entity("ERPAPI.Models.DeduccionPlanilla", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("DeduccionId");

                    b.Property<long>("DetallePlanillaId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<float>("Monto");

                    b.Property<string>("NombreDeduccion")
                        .IsRequired();

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("DetallePlanillaId");

                    b.ToTable("DeduccionesPlanilla");
                });

            modelBuilder.Entity("ERPAPI.Models.Deduction", b =>
                {
                    b.Property<long>("DeductionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cantidad");

                    b.Property<string>("DeductionType");

                    b.Property<long>("DeductionTypeId");

                    b.Property<string>("Description");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<double>("Fortnight");

                    b.Property<long>("IdEstado");

                    b.Property<string>("NombreEstado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("DeductionId");

                    b.HasIndex("IdEstado");

                    b.ToTable("Deduction");
                });

            modelBuilder.Entity("ERPAPI.Models.DeductionQty", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("DeductionId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<double>("Fortnight");

                    b.Property<int>("No");

                    b.Property<double>("Porcentaje");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Id");

                    b.HasIndex("DeductionId");

                    b.ToTable("DeductionQties");
                });

            modelBuilder.Entity("ERPAPI.Models.Departamento", b =>
                {
                    b.Property<long>("IdDepartamento")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AplicaComision");

                    b.Property<long?>("ComisionId");

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdEstado");

                    b.Property<string>("NombreDepartamento");

                    b.Property<long?>("PeridicidadId");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("IdDepartamento");

                    b.HasIndex("NombreDepartamento")
                        .IsUnique()
                        .HasFilter("[NombreDepartamento] IS NOT NULL");

                    b.ToTable("Departamento");
                });

            modelBuilder.Entity("ERPAPI.Models.Dependientes", b =>
                {
                    b.Property<long>("IdDependientes")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DireccionDependientes");

                    b.Property<int?>("Edad");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<DateTime?>("FechaNacimiento");

                    b.Property<long?>("IdEmpleado");

                    b.Property<string>("NombreDependientes");

                    b.Property<string>("Parentezco");

                    b.Property<string>("TelefonoDependientes");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("IdDependientes");

                    b.ToTable("Dependientes");
                });

            modelBuilder.Entity("ERPAPI.Models.DepreciationFixedAsset", b =>
                {
                    b.Property<long>("DepreciationFixedAssetId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("April")
                        .HasColumnType("Money");

                    b.Property<decimal>("August")
                        .HasColumnType("Money");

                    b.Property<decimal>("December")
                        .HasColumnType("Money");

                    b.Property<decimal>("February")
                        .HasColumnType("Money");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("FixedAssetId");

                    b.Property<decimal>("January")
                        .HasColumnType("Money");

                    b.Property<decimal>("July")
                        .HasColumnType("Money");

                    b.Property<decimal>("June")
                        .HasColumnType("Money");

                    b.Property<decimal>("March")
                        .HasColumnType("Money");

                    b.Property<decimal>("May")
                        .HasColumnType("Money");

                    b.Property<decimal>("November")
                        .HasColumnType("Money");

                    b.Property<decimal>("October")
                        .HasColumnType("Money");

                    b.Property<decimal>("September")
                        .HasColumnType("Money");

                    b.Property<decimal>("TotalDepreciated")
                        .HasColumnType("Money");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<int>("Year");

                    b.HasKey("DepreciationFixedAssetId");

                    b.ToTable("DepreciationFixedAsset");
                });

            modelBuilder.Entity("ERPAPI.Models.DetalleBiometrico", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaHora");

                    b.Property<long>("IdBiometrico");

                    b.Property<long>("IdEmpleado");

                    b.Property<long>("IdHorario");

                    b.Property<bool>("SalidaPendiente");

                    b.Property<string>("Tipo")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("IdBiometrico");

                    b.HasIndex("IdEmpleado");

                    b.ToTable("DetallesBiometricos");
                });

            modelBuilder.Entity("ERPAPI.Models.DetallePlanilla", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("EmpleadoId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<double>("MontoBruto");

                    b.Property<double>("MontoNeto");

                    b.Property<long>("PlanillaId");

                    b.Property<double>("TotalDeducciones");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("PlanillaId");

                    b.ToTable("DetallePlanillas");
                });

            modelBuilder.Entity("ERPAPI.Models.Dimensions", b =>
                {
                    b.Property<string>("Num")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30);

                    b.Property<string>("Description")
                        .HasMaxLength(60);

                    b.Property<int>("DimCode");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("Num");

                    b.ToTable("Dimensions");
                });

            modelBuilder.Entity("ERPAPI.Models.Doc_CP", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.Property<double>("Amount");

                    b.Property<string>("AnnulationReason");

                    b.Property<double>("Balance");

                    b.Property<double>("Balance_Mon");

                    b.Property<bool>("Base");

                    b.Property<int>("CurrencyId");

                    b.Property<int>("DayTerms");

                    b.Property<string>("Description");

                    b.Property<DateTime>("DocDate");

                    b.Property<string>("DocNumber");

                    b.Property<string>("DocPaymentNumber");

                    b.Property<long?>("DocTipoId");

                    b.Property<int>("DocTypeId");

                    b.Property<DateTime>("DueDate");

                    b.Property<double>("LatePaymentAmount");

                    b.Property<double>("LatePaymentInterest");

                    b.Property<double>("PartialAmount");

                    b.Property<bool>("Payed");

                    b.Property<string>("PaymentNumber");

                    b.Property<int>("PaymentQty");

                    b.Property<string>("PaymentReference");

                    b.Property<int>("PaymentTerm");

                    b.Property<long>("PaymentTypeId");

                    b.Property<string>("Remarks");

                    b.Property<long>("TaxId");

                    b.Property<string>("VendorDocumentId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DocTipoId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("TaxId");

                    b.ToTable("Doc_CP");
                });

            modelBuilder.Entity("ERPAPI.Models.ElementoConfiguracion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<string>("Formula");

                    b.Property<long>("IdEstado");

                    b.Property<long?>("Idconfiguracion");

                    b.Property<string>("Nombre");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<double?>("Valordecimal");

                    b.Property<string>("Valorstring");

                    b.Property<string>("Valorstring2");

                    b.HasKey("Id");

                    b.HasIndex("Idconfiguracion");

                    b.ToTable("ElementoConfiguracion");
                });

            modelBuilder.Entity("ERPAPI.Models.EmpleadoBiometrico", b =>
                {
                    b.Property<long>("EmpleadoId");

                    b.Property<long>("BiometricoId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("EmpleadoId");

                    b.ToTable("EmpleadosBiometrico");
                });

            modelBuilder.Entity("ERPAPI.Models.EmpleadoHorario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("EmpleadoId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("HorarioId");

                    b.Property<long>("IdEstado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("HorarioId");

                    b.HasIndex("IdEstado");

                    b.ToTable("EmpleadoHorarios");
                });

            modelBuilder.Entity("ERPAPI.Models.EmployeeAbsence", b =>
                {
                    b.Property<long>("EmployeeAbsenceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AbsenceTypeId");

                    b.Property<string>("AbsenceTypeName");

                    b.Property<string>("DeductionIndicator");

                    b.Property<long>("EmployeeId");

                    b.Property<string>("EmployeeName");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaFinal");

                    b.Property<DateTime>("FechaInicial");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<double>("QuantityDays");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("EmployeeAbsenceId");

                    b.ToTable("EmployeeAbsence");
                });

            modelBuilder.Entity("ERPAPI.Models.EmployeeDocument", b =>
                {
                    b.Property<long>("EmployeeDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DocumentName");

                    b.Property<long>("DocumentTypeId");

                    b.Property<string>("DocumentTypeName");

                    b.Property<long>("EmployeeId");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime>("FechaIngreso");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<DateTime?>("FechaVencimiento");

                    b.Property<string>("Path");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("EmployeeDocumentId");

                    b.ToTable("EmployeeDocument");
                });

            modelBuilder.Entity("ERPAPI.Models.EmployeeExtraHours", b =>
                {
                    b.Property<long>("EmployeeExtraHoursId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<long>("EmployeeId");

                    b.Property<string>("EmployeeName");

                    b.Property<DateTime>("EndTime");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<decimal>("HourlySalary");

                    b.Property<string>("Motivo");

                    b.Property<decimal>("QuantityHours");

                    b.Property<DateTime>("StartTime");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<DateTime>("WorkDate");

                    b.HasKey("EmployeeExtraHoursId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeExtraHours");
                });

            modelBuilder.Entity("ERPAPI.Models.EmployeeExtraHoursDetail", b =>
                {
                    b.Property<long>("EmployeeExtraHoursDetailId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<long>("EmployeeExtraHoursId");

                    b.Property<DateTime>("EndTime");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<decimal>("HourlySalary");

                    b.Property<decimal>("QuantityHours");

                    b.Property<DateTime>("StartTime");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("EmployeeExtraHoursDetailId");

                    b.ToTable("EmployeeExtraHoursDetail");
                });

            modelBuilder.Entity("ERPAPI.Models.EmployeeSalary", b =>
                {
                    b.Property<long>("EmployeeSalaryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .IsRequired();

                    b.Property<DateTime>("DayApplication");

                    b.Property<string>("Estado");

                    b.Property<long>("IdEmpleado");

                    b.Property<long>("IdEstado");

                    b.Property<long>("IdFrequency");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifiedUser")
                        .IsRequired();

                    b.Property<decimal?>("QtySalary")
                        .IsRequired();

                    b.HasKey("EmployeeSalaryId");

                    b.HasIndex("IdEmpleado");

                    b.ToTable("EmployeeSalary");
                });

            modelBuilder.Entity("ERPAPI.Models.Employees", b =>
                {
                    b.Property<long>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("ApplicationUserId");

                    b.Property<bool>("ApplyCommission");

                    b.Property<string>("BirthPlace");

                    b.Property<long>("ComisionId");

                    b.Property<string>("CommissionName");

                    b.Property<string>("Correo");

                    b.Property<string>("CuentaBanco");

                    b.Property<string>("Direccion");

                    b.Property<int?>("Extension");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaEgreso");

                    b.Property<DateTime?>("FechaFinContrato");

                    b.Property<DateTime?>("FechaIngreso");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<DateTime?>("FechaNacimiento");

                    b.Property<string>("Foto");

                    b.Property<string>("Genero");

                    b.Property<bool?>("HorasExtra");

                    b.Property<long?>("IdActivoinactivo");

                    b.Property<long>("IdBank");

                    b.Property<int>("IdBranch");

                    b.Property<long>("IdCity");

                    b.Property<long>("IdCountry");

                    b.Property<int>("IdCurrency");

                    b.Property<long>("IdDepartamento");

                    b.Property<long>("IdEstado");

                    b.Property<long>("IdPuesto");

                    b.Property<long>("IdState");

                    b.Property<long>("IdTipoContrato");

                    b.Property<long?>("IdTipoPlanilla");

                    b.Property<string>("Identidad");

                    b.Property<string>("NombreContacto");

                    b.Property<string>("NombreEmpleado");

                    b.Property<string>("Notas");

                    b.Property<long>("PeriodicidadId");

                    b.Property<string>("PeriodicityName");

                    b.Property<string>("Profesion");

                    b.Property<string>("RTN");

                    b.Property<decimal?>("Salario");

                    b.Property<string>("Telefono");

                    b.Property<string>("TelefonoContacto");

                    b.Property<string>("TipoSangre");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("IdEmpleado");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("IdBank");

                    b.HasIndex("IdBranch");

                    b.HasIndex("IdCity");

                    b.HasIndex("IdCountry");

                    b.HasIndex("IdCurrency");

                    b.HasIndex("IdDepartamento");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdPuesto");

                    b.HasIndex("IdState");

                    b.HasIndex("IdTipoContrato");

                    b.HasIndex("IdTipoPlanilla");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ERPAPI.Models.EndososBono", b =>
                {
                    b.Property<long>("EndososBonoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BankId");

                    b.Property<string>("BankName");

                    b.Property<double>("CantidadEndosar");

                    b.Property<long>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<DateTime>("FechaOtorgado");

                    b.Property<string>("FirmadoEn");

                    b.Property<long>("IdCD");

                    b.Property<string>("Impreso");

                    b.Property<long>("NoCD");

                    b.Property<string>("NombreEndoso");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<double>("TasaDeInteres");

                    b.Property<long>("TipoEndoso");

                    b.Property<long>("TipoEndosoId");

                    b.Property<string>("TipoEndosoName");

                    b.Property<double>("TotalEndoso");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<double>("ValorEndosar");

                    b.HasKey("EndososBonoId");

                    b.ToTable("EndososBono");
                });

            modelBuilder.Entity("ERPAPI.Models.EndososBonoLine", b =>
                {
                    b.Property<long>("EndososBonoLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CertificadoLineId");

                    b.Property<long>("EndososBonoId");

                    b.Property<double>("Price");

                    b.Property<double>("Quantity");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<double>("ValorEndoso");

                    b.HasKey("EndososBonoLineId");

                    b.HasIndex("EndososBonoId");

                    b.ToTable("EndososBonoLine");
                });

            modelBuilder.Entity("ERPAPI.Models.EndososCertificados", b =>
                {
                    b.Property<long>("EndososCertificadosId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BankId");

                    b.Property<string>("BankName");

                    b.Property<decimal>("CantidadEndosar");

                    b.Property<long>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<string>("Estado");

                    b.Property<int>("EstadoId");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<DateTime?>("FechaCancelacion");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime?>("FechaLiberacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<DateTime>("FechaOtorgado");

                    b.Property<string>("FirmadoEn");

                    b.Property<long>("IdCD");

                    b.Property<string>("Impreso");

                    b.Property<long>("NoCD");

                    b.Property<string>("NombreEndoso");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<string>("ProductoEndosado");

                    b.Property<decimal>("Saldo");

                    b.Property<decimal>("TasaDeInteres");

                    b.Property<long>("TipoEndoso");

                    b.Property<decimal>("TotalEndoso");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<decimal>("ValorEndosar");

                    b.HasKey("EndososCertificadosId");

                    b.HasIndex("IdCD");

                    b.ToTable("EndososCertificados");
                });

            modelBuilder.Entity("ERPAPI.Models.EndososCertificadosLine", b =>
                {
                    b.Property<long>("EndososCertificadosLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CertificadoLineId");

                    b.Property<decimal?>("DerechosFiscales");

                    b.Property<long>("EndososCertificadosId");

                    b.Property<int>("Pda");

                    b.Property<decimal>("Price");

                    b.Property<decimal>("Quantity");

                    b.Property<decimal>("Saldo");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<decimal>("ValorEndoso");

                    b.Property<decimal?>("ValorUnitarioDerechos");

                    b.HasKey("EndososCertificadosLineId");

                    b.HasIndex("EndososCertificadosId");

                    b.ToTable("EndososCertificadosLine");
                });

            modelBuilder.Entity("ERPAPI.Models.EndososLiberacion", b =>
                {
                    b.Property<long>("EndososLiberacionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("EndososId");

                    b.Property<long>("EndososLineId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaLiberacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<int>("Pda");

                    b.Property<decimal>("Quantity");

                    b.Property<decimal>("Saldo");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<string>("TipoEndoso");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("EndososLiberacionId");

                    b.HasIndex("EndososLineId");

                    b.ToTable("EndososLiberacion");
                });

            modelBuilder.Entity("ERPAPI.Models.EndososTalon", b =>
                {
                    b.Property<long>("EndososTalonId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BankId");

                    b.Property<string>("BankName");

                    b.Property<double>("CantidadEndosar");

                    b.Property<long>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<DateTime>("FechaOtorgado");

                    b.Property<string>("FirmadoEn");

                    b.Property<long>("IdCD");

                    b.Property<string>("Impreso");

                    b.Property<long>("NoCD");

                    b.Property<string>("NombreEndoso");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<double>("TasaDeInteres");

                    b.Property<long>("TipoEndoso");

                    b.Property<long>("TipoEndosoId");

                    b.Property<string>("TipoEndosoName");

                    b.Property<double>("TotalEndoso");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<double>("ValorEndosar");

                    b.HasKey("EndososTalonId");

                    b.ToTable("EndososTalon");
                });

            modelBuilder.Entity("ERPAPI.Models.EndososTalonLine", b =>
                {
                    b.Property<long>("EndososTalonLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CertificadoLineId");

                    b.Property<long>("EndososTalonId");

                    b.Property<double>("Price");

                    b.Property<double>("Quantity");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<double>("ValorEndoso");

                    b.HasKey("EndososTalonLineId");

                    b.HasIndex("EndososTalonId");

                    b.ToTable("EndososTalonLine");
                });

            modelBuilder.Entity("ERPAPI.Models.Escala", b =>
                {
                    b.Property<long>("IdEscala")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionEscala");

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdEstado");

                    b.Property<long?>("Idpadre");

                    b.Property<string>("NombreEscala");

                    b.Property<decimal?>("Porcentaje");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.Property<decimal?>("ValorCalculo");

                    b.Property<decimal?>("ValorFinal");

                    b.Property<decimal?>("ValorInicial");

                    b.HasKey("IdEscala");

                    b.ToTable("Escala");
                });

            modelBuilder.Entity("ERPAPI.Models.Estados", b =>
                {
                    b.Property<long>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionEstado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdGrupoEstado");

                    b.Property<string>("NombreEstado")
                        .IsRequired();

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("IdEstado");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("ERPAPI.Models.ExchangeRate", b =>
                {
                    b.Property<long>("ExchangeRateId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatedUser");

                    b.Property<int>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<DateTime>("DayofRate");

                    b.Property<decimal>("ExchangeRateValue")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("ExchangeRateValueCompra")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifiedUser");

                    b.HasKey("ExchangeRateId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("ExchangeRate");
                });

            modelBuilder.Entity("ERPAPI.Models.ExistenciaBodegaHabilitada", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("DisponibleCertificar");

                    b.Property<decimal>("ExistenciaTotal");

                    b.Property<decimal>("IngresandoHoy");

                    b.Property<int>("InventarioFisicoId");

                    b.Property<bool>("Max");

                    b.Property<decimal>("RetencionesCafeInferiores");

                    b.Property<decimal>("RetencionesMerma");

                    b.Property<long>("SubProductId");

                    b.Property<decimal>("Subtotal");

                    b.Property<decimal>("TotalCertificado");

                    b.HasKey("Id");

                    b.HasIndex("InventarioFisicoId");

                    b.HasIndex("SubProductId");

                    b.ToTable("ExistenciaBodegaHabilitadas");
                });

            modelBuilder.Entity("ERPAPI.Models.Feriado", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaFin");

                    b.Property<DateTime>("FechaInicio");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Nombre");

                    b.Property<int>("PeriodoId");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Id");

                    b.HasIndex("IdEstado");

                    b.HasIndex("PeriodoId");

                    b.ToTable("Feriados");
                });

            modelBuilder.Entity("ERPAPI.Models.FixedAsset", b =>
                {
                    b.Property<long>("FixedAssetId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AccumulatedDepreciation")
                        .HasColumnType("Money");

                    b.Property<decimal>("ActiveTotalCost")
                        .HasColumnType("Money");

                    b.Property<decimal>("Amount")
                        .HasColumnType("Money");

                    b.Property<DateTime>("AssetDate");

                    b.Property<long>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<long>("CenterCostId");

                    b.Property<string>("CenterCostName");

                    b.Property<string>("Codigo");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("Money");

                    b.Property<decimal>("DepreciacionMensualNIIF");

                    b.Property<DateTime?>("DepreciatedDate");

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaBaja");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<decimal>("FixedActiveLife");

                    b.Property<string>("FixedAssetCode");

                    b.Property<long>("FixedAssetGroupId");

                    b.Property<string>("FixedAssetName");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Marca");

                    b.Property<string>("Modelo");

                    b.Property<decimal>("NetValue")
                        .HasColumnType("Money");

                    b.Property<decimal>("ResidualValue")
                        .HasColumnType("Money");

                    b.Property<decimal>("ResidualValuePercent");

                    b.Property<string>("Serie");

                    b.Property<decimal>("ToDepreciate")
                        .HasColumnType("Money");

                    b.Property<decimal>("TotalDepreciated")
                        .HasColumnType("Money");

                    b.Property<decimal>("TotalaDepreciarNIIF");

                    b.Property<string>("Ubicacion");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<decimal>("VidaUtilNIIF");

                    b.Property<long>("WareHouseId");

                    b.Property<string>("WareHouseName");

                    b.HasKey("FixedAssetId");

                    b.HasIndex("FixedAssetGroupId");

                    b.ToTable("FixedAsset");
                });

            modelBuilder.Entity("ERPAPI.Models.FixedAssetGroup", b =>
                {
                    b.Property<long>("FixedAssetGroupId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccumulatedDepreciationAccountingId");

                    b.Property<long?>("DepreciationAccountingId");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long?>("FixedAssetAccountingId");

                    b.Property<string>("FixedAssetGroupDescription");

                    b.Property<string>("FixedAssetGroupName");

                    b.Property<string>("FixedGroupCode");

                    b.Property<long>("IdEstado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("FixedAssetGroupId");

                    b.HasIndex("AccumulatedDepreciationAccountingId");

                    b.HasIndex("DepreciationAccountingId");

                    b.HasIndex("FixedAssetAccountingId");

                    b.ToTable("FixedAssetGroup");
                });

            modelBuilder.Entity("ERPAPI.Models.Formula", b =>
                {
                    b.Property<long>("IdFormula")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CalculoFormula");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdEstado");

                    b.Property<int?>("IdTipoFormula");

                    b.Property<string>("NombreEstado");

                    b.Property<string>("NombreFormula");

                    b.Property<string>("NombreTipoformula");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdFormula");

                    b.ToTable("Formula");
                });

            modelBuilder.Entity("ERPAPI.Models.FormulasAplicadas", b =>
                {
                    b.Property<long>("IdFormulaAplicada")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<string>("FormulaEmpleada");

                    b.Property<long?>("IdCalculo");

                    b.Property<long?>("IdEmpleado");

                    b.Property<long?>("IdEstado");

                    b.Property<long?>("IdFormula");

                    b.Property<decimal?>("MultiplicarPor");

                    b.Property<string>("NombreFormula");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdFormulaAplicada");

                    b.ToTable("FormulasAplicadas");
                });

            modelBuilder.Entity("ERPAPI.Models.FormulasConFormulas", b =>
                {
                    b.Property<long>("IdFormulaconformula")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EstructuraConcepto");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("Fechamodificacion");

                    b.Property<long?>("IdFormula");

                    b.Property<long?>("IdFormulachild");

                    b.Property<string>("NombreFormulachild");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdFormulaconformula");

                    b.ToTable("FormulasConFormulas");
                });

            modelBuilder.Entity("ERPAPI.Models.FormulasConcepto", b =>
                {
                    b.Property<long>("IdformulaConcepto")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EstructuraConcepto");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdConcepto");

                    b.Property<long?>("Idformula");

                    b.Property<string>("NombreConcepto");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdformulaConcepto");

                    b.ToTable("FormulasConcepto");
                });

            modelBuilder.Entity("ERPAPI.Models.FundingInterestRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<int>("IdEstado");

                    b.Property<int>("Months");

                    b.Property<double>("Rate");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("FundingInterestRate");
                });

            modelBuilder.Entity("ERPAPI.Models.GarantiaBancaria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Ajuste");

                    b.Property<long>("CostCenterId");

                    b.Property<int>("CurrencyId");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaFianlVigencia");

                    b.Property<DateTime>("FechaInicioVigencia");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<decimal>("Monto");

                    b.Property<string>("NumeroCertificado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<string>("strign");

                    b.HasKey("Id");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("IdEstado");

                    b.ToTable("GarantiaBancaria");
                });

            modelBuilder.Entity("ERPAPI.Models.GeneralLedgerHeader", b =>
                {
                    b.Property<long>("GeneralLedgerHeaderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<int>("DocumentType");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("GeneralLedgerHeaderId");

                    b.ToTable("GeneralLedgerHeader");
                });

            modelBuilder.Entity("ERPAPI.Models.GoodsDelivered", b =>
                {
                    b.Property<long>("GoodsDeliveredId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Autorizaciones");

                    b.Property<int?>("BoletaPesoId");

                    b.Property<long>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<string>("Certificados");

                    b.Property<string>("Comments");

                    b.Property<long>("ControlId");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<string>("EntregadoA");

                    b.Property<string>("Estado");

                    b.Property<long>("ExitTicket");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Impreso");

                    b.Property<string>("Marca");

                    b.Property<string>("Motorista");

                    b.Property<DateTime>("OrderDate");

                    b.Property<decimal>("PesoBruto");

                    b.Property<decimal>("PesoNeto");

                    b.Property<decimal>("PesoNeto2");

                    b.Property<string>("Placa");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<string>("Reference");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<decimal>("TaraTransporte");

                    b.Property<decimal>("TaraUnidadMedida");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<long>("VigilanteId");

                    b.Property<string>("VigilanteName");

                    b.Property<string>("WarehouseName");

                    b.HasKey("GoodsDeliveredId");

                    b.ToTable("GoodsDelivered");
                });

            modelBuilder.Entity("ERPAPI.Models.GoodsDeliveredLine", b =>
                {
                    b.Property<long>("GoodsDeliveredLinedId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ControlPalletsId");

                    b.Property<string>("Description");

                    b.Property<long>("GoodsDeliveredId");

                    b.Property<long>("NoAR");

                    b.Property<long?>("NoARLineId");

                    b.Property<long>("NoCD");

                    b.Property<int>("Pda");

                    b.Property<double>("Price");

                    b.Property<decimal>("Quantity");

                    b.Property<decimal?>("QuantityAuthorized");

                    b.Property<int>("QuantitySacos");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<decimal>("Total");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<long>("WareHouseId");

                    b.Property<string>("WareHouseName");

                    b.HasKey("GoodsDeliveredLinedId");

                    b.HasIndex("GoodsDeliveredId");

                    b.ToTable("GoodsDeliveredLine");
                });

            modelBuilder.Entity("ERPAPI.Models.GoodsDeliveryAuthorization", b =>
                {
                    b.Property<long>("GoodsDeliveryAuthorizationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AuthorizationDate");

                    b.Property<string>("Autorizados");

                    b.Property<long?>("BankId");

                    b.Property<string>("BankName");

                    b.Property<long>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<string>("CartaRetiroDocName");

                    b.Property<string>("Certificados");

                    b.Property<string>("Comments");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("DelegadoFiscal");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<string>("Estado");

                    b.Property<int>("EstadoId");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("GoodsDeliveredId");

                    b.Property<string>("Impreso");

                    b.Property<string>("LiberacionEndosoDocName");

                    b.Property<long>("NoPolizaImportacion");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<string>("ProductoAutorizado");

                    b.Property<string>("RetiroAutorizadoA");

                    b.Property<decimal>("TotalAutorizado");

                    b.Property<decimal>("TotalCantidad");

                    b.Property<decimal>("TotalDerechos");

                    b.Property<string>("TotalUnidadesLetras");

                    b.Property<string>("URLCartaRetiro");

                    b.Property<string>("URLLiberacionEndoso");

                    b.Property<string>("UsuarioAprobacion");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<string>("UsuarioRevisor");

                    b.HasKey("GoodsDeliveryAuthorizationId");

                    b.HasIndex("GoodsDeliveredId");

                    b.ToTable("GoodsDeliveryAuthorization");
                });

            modelBuilder.Entity("ERPAPI.Models.GoodsDeliveryAuthorizationLine", b =>
                {
                    b.Property<long>("GoodsDeliveryAuthorizationLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CertificadoLineId");

                    b.Property<decimal?>("DerechosFiscales");

                    b.Property<long>("GoodsDeliveryAuthorizationId");

                    b.Property<long>("NoCertificadoDeposito");

                    b.Property<int?>("Pda");

                    b.Property<decimal>("Price");

                    b.Property<decimal>("Quantity");

                    b.Property<decimal>("Saldo");

                    b.Property<decimal>("SaldoProducto");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<decimal>("ValorImpuestos");

                    b.Property<decimal?>("ValorUnitarioDerechos");

                    b.Property<long>("WarehouseId");

                    b.Property<string>("WarehouseName");

                    b.Property<decimal>("valorcertificado");

                    b.HasKey("GoodsDeliveryAuthorizationLineId");

                    b.HasIndex("GoodsDeliveryAuthorizationId");

                    b.ToTable("GoodsDeliveryAuthorizationLine");
                });

            modelBuilder.Entity("ERPAPI.Models.GoodsDeliveryAuthorizedSignatures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CustomerAuthorizedSignatureId");

                    b.Property<long>("GoodsDeliveryAuthorizationId");

                    b.Property<string>("NombreAutorizado");

                    b.HasKey("Id");

                    b.HasIndex("CustomerAuthorizedSignatureId");

                    b.HasIndex("GoodsDeliveryAuthorizationId");

                    b.ToTable("goodsDeliveryAuthorizedSignatures");
                });

            modelBuilder.Entity("ERPAPI.Models.GoodsReceived", b =>
                {
                    b.Property<long>("GoodsReceivedId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BoletaSalidaId");

                    b.Property<long>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<string>("Comments");

                    b.Property<long>("ControlId");

                    b.Property<long>("CountryId");

                    b.Property<string>("CountryName");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("CustomerUnitOfMeasure");

                    b.Property<int?>("CustomerUnitOfMeasureId");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<string>("Marca");

                    b.Property<string>("Motorista");

                    b.Property<DateTime>("OrderDate");

                    b.Property<double?>("PesoBruto");

                    b.Property<double?>("PesoNeto");

                    b.Property<double?>("PesoNeto2");

                    b.Property<string>("Placa");

                    b.Property<bool?>("Porcertificar");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<long?>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<double?>("TaraCamion");

                    b.Property<double?>("TaraTransporte");

                    b.Property<double?>("TaraUnidadMedida");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<long>("VigilanteId");

                    b.Property<string>("VigilanteName");

                    b.Property<int?>("WarehouseId");

                    b.Property<string>("WarehouseName");

                    b.Property<long>("WeightBallot");

                    b.Property<bool?>("esCafe");

                    b.HasKey("GoodsReceivedId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("CustomerUnitOfMeasureId");

                    b.ToTable("GoodsReceived");
                });

            modelBuilder.Entity("ERPAPI.Models.GoodsReceivedLine", b =>
                {
                    b.Property<long>("GoodsReceiveLinedId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ControlPalletsId");

                    b.Property<long>("CostCenterId");

                    b.Property<string>("Description");

                    b.Property<int?>("Estiba");

                    b.Property<long>("GoodsReceivedId");

                    b.Property<long?>("MaxKardexId");

                    b.Property<decimal>("Price");

                    b.Property<decimal>("Quantity");

                    b.Property<decimal?>("QuantitySacos");

                    b.Property<decimal?>("SaldoFisico");

                    b.Property<decimal?>("SaldoFisicoSacos");

                    b.Property<decimal?>("SaldoporCertificar");

                    b.Property<long?>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<decimal>("Total");

                    b.Property<long?>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<long>("WareHouseId");

                    b.Property<string>("WareHouseName");

                    b.HasKey("GoodsReceiveLinedId");

                    b.HasIndex("GoodsReceivedId");

                    b.HasIndex("MaxKardexId");

                    b.HasIndex("SubProductId");

                    b.ToTable("GoodsReceivedLine");
                });

            modelBuilder.Entity("ERPAPI.Models.GrupoConfiguracion", b =>
                {
                    b.Property<long>("IdConfiguracion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long?>("IdConfiguraciondestino");

                    b.Property<long?>("IdConfiguracionorigen");

                    b.Property<long>("IdZona");

                    b.Property<string>("Nombreconfiguracion");

                    b.Property<string>("Tipoconfiguracion");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdConfiguracion");

                    b.ToTable("GrupoConfiguracion");
                });

            modelBuilder.Entity("ERPAPI.Models.GrupoEstado", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("Modulo");

                    b.Property<string>("Nombre");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Id");

                    b.ToTable("GrupoEstado");
                });

            modelBuilder.Entity("ERPAPI.Models.GuiaRemision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CAI");

                    b.Property<int>("CustomerId");

                    b.Property<long?>("CustomerId1");

                    b.Property<string>("CustomerName");

                    b.Property<string>("DNIMotorista");

                    b.Property<string>("Destino");

                    b.Property<DateTime>("Fecha");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime?>("FechaDocuemto");

                    b.Property<DateTime?>("FechaEntrada");

                    b.Property<DateTime>("FechaLimiteEmision");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<DateTime?>("FechaSalida");

                    b.Property<string>("Marca");

                    b.Property<string>("Motorista");

                    b.Property<string>("NumeroDocumento");

                    b.Property<string>("Observaciones");

                    b.Property<string>("OrdenNo");

                    b.Property<string>("Origen");

                    b.Property<string>("Placa");

                    b.Property<string>("PlacaContenedor");

                    b.Property<string>("RTNTransportista");

                    b.Property<string>("Rango");

                    b.Property<string>("Remitente");

                    b.Property<string>("Transportista");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<string>("Vigilante");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId1");

                    b.ToTable("GuiaRemision");
                });

            modelBuilder.Entity("ERPAPI.Models.GuiaRemisionLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GuiaRemisionId");

                    b.Property<decimal>("Quantity");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<long?>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.HasKey("Id");

                    b.HasIndex("GuiaRemisionId");

                    b.ToTable("GuiaRemisionLines");
                });

            modelBuilder.Entity("ERPAPI.Models.Horario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Almuerzo");

                    b.Property<bool>("Domingo");

                    b.Property<string>("Estado");

                    b.Property<string>("Factor");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("HoraFinal");

                    b.Property<string>("HoraInicio");

                    b.Property<long>("IdEstado");

                    b.Property<bool>("Jueves");

                    b.Property<bool>("Lunes");

                    b.Property<bool>("Martes");

                    b.Property<bool>("Miercoles");

                    b.Property<string>("Nombre");

                    b.Property<bool>("Sabado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<bool>("Viernes");

                    b.HasKey("Id");

                    b.HasIndex("IdEstado");

                    b.ToTable("Horarios");
                });

            modelBuilder.Entity("ERPAPI.Models.HorasExtraBiometrico", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estados");

                    b.Property<int>("HoraAlumerzo");

                    b.Property<string>("HoraEntrada");

                    b.Property<string>("HoraSalida");

                    b.Property<int>("Horas");

                    b.Property<long>("IdBiometrico");

                    b.Property<long>("IdEmpleado");

                    b.Property<long>("IdEstado");

                    b.Property<int>("Minutos");

                    b.Property<string>("Observaciones");

                    b.HasKey("Id");

                    b.HasIndex("IdBiometrico");

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdEstado");

                    b.ToTable("HorasExtrasBiometrico");
                });

            modelBuilder.Entity("ERPAPI.Models.HoursWorked", b =>
                {
                    b.Property<long>("IdHorastrabajadas")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("EsFeriado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaEntrada");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdEmpleado");

                    b.Property<decimal?>("MultiplicaHoras");

                    b.Property<string>("NombreEmpleado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdHorastrabajadas");

                    b.ToTable("HoursWorked");
                });

            modelBuilder.Entity("ERPAPI.Models.HoursWorkedDetail", b =>
                {
                    b.Property<long>("IdDetallehorastrabajadas")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<DateTime?>("Horaentrada");

                    b.Property<DateTime?>("Horasalida");

                    b.Property<long?>("IdHorasTrabajadas");

                    b.Property<decimal?>("Multiplicahoras");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdDetallehorastrabajadas");

                    b.HasIndex("IdHorasTrabajadas");

                    b.ToTable("HoursWorkedDetail");
                });

            modelBuilder.Entity("ERPAPI.Models.ISR", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("De");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<double>("Hasta");

                    b.Property<double>("Porcentaje");

                    b.Property<string>("Tramo")
                        .IsRequired();

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Id");

                    b.ToTable("ISRConfiguracion");
                });

            modelBuilder.Entity("ERPAPI.Models.ImpuestoVecinalConfiguracion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("De");

                    b.Property<decimal>("FactorMillar");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<decimal>("Hasta");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("ImpuestoVecinalConfiguraciones");
                });

            modelBuilder.Entity("ERPAPI.Models.Inasistencia", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("HoraLlegada");

                    b.Property<long>("IdEmpleado");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Observacion");

                    b.Property<long>("TipoInasistencia");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdEstado");

                    b.HasIndex("TipoInasistencia");

                    b.ToTable("Inasistencias");
                });

            modelBuilder.Entity("ERPAPI.Models.Incidencias", b =>
                {
                    b.Property<long>("IdIncidencia")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionIncidencia");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaFin");

                    b.Property<DateTime?>("FechaInicio");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdEmpleado");

                    b.Property<long?>("IdTipoIncidencia");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdIncidencia");

                    b.ToTable("Incidencias");
                });

            modelBuilder.Entity("ERPAPI.Models.IncomeAndExpenseAccountLine", b =>
                {
                    b.Property<long>("IncomeAndExpenseAccountLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<string>("DebitCredit");

                    b.Property<string>("Description");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<long>("DocumentId");

                    b.Property<long>("IncomeAndExpensesAccountId");

                    b.Property<long>("TypeDocument");

                    b.HasKey("IncomeAndExpenseAccountLineId");

                    b.ToTable("IncomeAndExpenseAccountLine");
                });

            modelBuilder.Entity("ERPAPI.Models.IncomeAndExpensesAccount", b =>
                {
                    b.Property<long>("IncomeAndExpensesAccountId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountDescription");

                    b.Property<long>("BankId");

                    b.Property<string>("BankName");

                    b.Property<long>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<long>("EstadoId");

                    b.Property<string>("EstadoName");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long>("TypeAccountId");

                    b.Property<string>("TypeAccountName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioEjecucion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IncomeAndExpensesAccountId");

                    b.ToTable("IncomeAndExpensesAccount");
                });

            modelBuilder.Entity("ERPAPI.Models.IngresoAnual", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("EmpleadoId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<decimal>("IngresoAcumulado");

                    b.Property<int>("Periodo");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("IngresosAnuales");
                });

            modelBuilder.Entity("ERPAPI.Models.InsuranceCertificate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<string>("AmountWords");

                    b.Property<int>("BranchId");

                    b.Property<string>("Code");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<DateTime>("Date");

                    b.Property<string>("DatePlace");

                    b.Property<DateTime>("DueDate");

                    b.Property<long>("EstadoId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<int>("InsuranceId");

                    b.Property<string>("InsuranceName");

                    b.Property<string>("InsurancePolicyNumber");

                    b.Property<long?>("ProductTypeId");

                    b.Property<string>("ProductTypes");

                    b.Property<long?>("ServicioId");

                    b.Property<string>("ServicioName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("InsuranceId");

                    b.HasIndex("ProductTypeId");

                    b.HasIndex("ServicioId");

                    b.ToTable("InsuranceCertificate");
                });

            modelBuilder.Entity("ERPAPI.Models.InsuranceCertificateLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<int>("InsuraceCertificateId");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<int>("WarehouseId");

                    b.HasKey("Id");

                    b.HasIndex("InsuraceCertificateId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("InsurancesCertificateLines");
                });

            modelBuilder.Entity("ERPAPI.Models.InsuranceEndorsement", b =>
                {
                    b.Property<int>("InsuranceEndorsementId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachementFileName");

                    b.Property<string>("AttachmentURL");

                    b.Property<long>("CostCenterId");

                    b.Property<DateTime>("DateGenerated");

                    b.Property<string>("Estado");

                    b.Property<long>("EstadoId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("InsurancePolicyId");

                    b.Property<string>("ProductName");

                    b.Property<long>("ProductdId");

                    b.Property<decimal>("TotalAmountDl");

                    b.Property<decimal>("TotalAmountLp");

                    b.Property<decimal?>("TotalAssuredDifernce");

                    b.Property<decimal?>("TotalCertificateBalalnce");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("InsuranceEndorsementId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("InsurancePolicyId");

                    b.HasIndex("ProductdId");

                    b.ToTable("InsuranceEndorsement");
                });

            modelBuilder.Entity("ERPAPI.Models.InsurancePolicy", b =>
                {
                    b.Property<long>("InsurancePolicyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachementFileName");

                    b.Property<string>("AttachmentURL");

                    b.Property<long?>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<decimal>("DollarAmount");

                    b.Property<string>("Estado");

                    b.Property<long?>("EstadoId");

                    b.Property<bool?>("ExchangeDifferential");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<int>("InsurancesId");

                    b.Property<string>("InsurancesName");

                    b.Property<decimal>("InsuredTotal");

                    b.Property<decimal>("LpsAmount");

                    b.Property<decimal>("MerchandiseRate");

                    b.Property<DateTime>("PolicyDate");

                    b.Property<DateTime>("PolicyDueDate");

                    b.Property<string>("PolicyNumber")
                        .IsRequired();

                    b.Property<bool>("Propias");

                    b.Property<decimal>("ReductibleRate");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("InsurancePolicyId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EstadoId");

                    b.ToTable("InsurancePolicy");
                });

            modelBuilder.Entity("ERPAPI.Models.Insurances", b =>
                {
                    b.Property<int>("InsurancesId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .IsRequired();

                    b.Property<string>("DocumentName");

                    b.Property<long>("DocumentTypeId");

                    b.Property<string>("DocumentTypeName");

                    b.Property<string>("Estado");

                    b.Property<long>("EstadoId");

                    b.Property<string>("InsurancesName");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifiedUser")
                        .IsRequired();

                    b.Property<string>("Path");

                    b.HasKey("InsurancesId");

                    b.HasIndex("EstadoId");

                    b.ToTable("Insurances");
                });

            modelBuilder.Entity("ERPAPI.Models.InsuredAssets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AssetDeductible");

                    b.Property<decimal>("AssetInsuredValue");

                    b.Property<string>("AssetName");

                    b.Property<int>("BranchId");

                    b.Property<long>("CategoryId");

                    b.Property<long>("EstadoId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("InsurancePolicyId");

                    b.Property<decimal>("MerchandiseDeductible");

                    b.Property<decimal>("MerchandiseInsuredValue");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<int?>("WarehouseId");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("InsurancePolicyId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("InsuredAssets");
                });

            modelBuilder.Entity("ERPAPI.Models.InventarioBodegaHabilitada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("Money");

                    b.Property<string>("Descripcion");

                    b.Property<string>("Estiba");

                    b.Property<decimal>("Factor")
                        .HasColumnType("Money");

                    b.Property<decimal?>("FactorPergamino")
                        .HasColumnType("Money");

                    b.Property<int>("InventarioFisicoId");

                    b.Property<int?>("No");

                    b.Property<string>("Observacion");

                    b.Property<long>("ProductoId");

                    b.Property<string>("ProductoNombre");

                    b.Property<decimal>("SaldoCertificado");

                    b.Property<decimal>("SaldoPendienteCertificar");

                    b.Property<int?>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<decimal>("Valor")
                        .HasColumnType("Money");

                    b.Property<decimal?>("ValorPergamino")
                        .HasColumnType("Money");

                    b.Property<int?>("WarehouseId");

                    b.Property<string>("WarehouseName");

                    b.HasKey("Id");

                    b.HasIndex("InventarioFisicoId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("UnitOfMeasureId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("InventarioBodegaHabilitada");
                });

            modelBuilder.Entity("ERPAPI.Models.InventarioFisico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AutorizadoPor");

                    b.Property<int?>("BranchId");

                    b.Property<string>("Cliente");

                    b.Property<string>("Comentarios");

                    b.Property<bool?>("Control");

                    b.Property<long?>("CustomerId");

                    b.Property<long?>("EstadoId");

                    b.Property<string>("EstadoName");

                    b.Property<DateTime>("Fecha");

                    b.Property<DateTime?>("FechaCompletado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificion");

                    b.Property<long?>("ProductId");

                    b.Property<string>("RevisadoPor");

                    b.Property<string>("Servicio");

                    b.Property<string>("Sucursal");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("ProductId");

                    b.ToTable("InventarioFisico");
                });

            modelBuilder.Entity("ERPAPI.Models.InventarioFisicoLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Diferencia");

                    b.Property<string>("Estiba");

                    b.Property<decimal?>("FactorSacos");

                    b.Property<decimal>("InventarioFisicoCantidad");

                    b.Property<int>("InventarioFisicoId");

                    b.Property<decimal?>("NSacos");

                    b.Property<int?>("No");

                    b.Property<string>("Observacion");

                    b.Property<long>("ProductoId");

                    b.Property<string>("ProductoNombre");

                    b.Property<decimal>("SaldoLibros");

                    b.Property<int?>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<int?>("WarehouseId");

                    b.Property<string>("WarehouseName");

                    b.HasKey("Id");

                    b.HasIndex("InventarioFisicoId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("UnitOfMeasureId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("InventarioFisicoLines");
                });

            modelBuilder.Entity("ERPAPI.Models.InventoryTransfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CAI");

                    b.Property<long>("CarriedByEmployeeId");

                    b.Property<int>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<DateTime>("DateGenerated");

                    b.Property<DateTime>("DateReceived");

                    b.Property<DateTime>("DepartureDate");

                    b.Property<string>("Description");

                    b.Property<string>("Estado");

                    b.Property<long>("EstadoId");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long>("GeneratedbyEmployeeId");

                    b.Property<long>("NumeracionSARId");

                    b.Property<string>("NumeroSAR");

                    b.Property<string>("Rango");

                    b.Property<string>("Reason");

                    b.Property<int>("ReasonId");

                    b.Property<long>("ReceivedByEmployeeId");

                    b.Property<int>("SourceBranchId");

                    b.Property<int>("TargetBranchId");

                    b.Property<long>("TipoDocumentoId");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Id");

                    b.HasIndex("CarriedByEmployeeId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("GeneratedbyEmployeeId");

                    b.HasIndex("NumeracionSARId");

                    b.HasIndex("ReceivedByEmployeeId");

                    b.HasIndex("SourceBranchId");

                    b.HasIndex("TargetBranchId");

                    b.HasIndex("TipoDocumentoId");

                    b.ToTable("InventoryTransfer");
                });

            modelBuilder.Entity("ERPAPI.Models.InventoryTransferLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cost");

                    b.Property<int>("InventoryTransferId");

                    b.Property<decimal>("Price");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<decimal>("QtyIn");

                    b.Property<decimal>("QtyOut");

                    b.Property<decimal>("QtyStock");

                    b.Property<int>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.HasKey("Id");

                    b.HasIndex("InventoryTransferId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UnitOfMeasureId");

                    b.ToTable("InventoryTransferLine");
                });

            modelBuilder.Entity("ERPAPI.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<long>("Bank");

                    b.Property<string>("BankName");

                    b.Property<int>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<string>("CAI");

                    b.Property<string>("Caja");

                    b.Property<string>("Correo");

                    b.Property<string>("CuentaBancaria");

                    b.Property<long?>("CuentaBancariaId");

                    b.Property<decimal>("Currency");

                    b.Property<int?>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<long?>("CustomerContractId");

                    b.Property<int>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("CustomerRefNumber");

                    b.Property<DateTime>("DeliveryDate");

                    b.Property<int>("DiasVencimiento");

                    b.Property<string>("Direccion");

                    b.Property<decimal>("Discount");

                    b.Property<string>("Estado");

                    b.Property<bool>("Exento");

                    b.Property<bool>("Exonerado");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaLimiteEmision");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<decimal>("Freight")
                        .HasColumnType("Money");

                    b.Property<long?>("IdEstado");

                    b.Property<long>("IdPuntoEmision");

                    b.Property<string>("Impreso");

                    b.Property<DateTime>("InvoiceDate");

                    b.Property<DateTime>("InvoiceDueDate");

                    b.Property<string>("InvoiceName");

                    b.Property<int>("InvoiceTypeId");

                    b.Property<long?>("JournalEntryId");

                    b.Property<string>("NoConstanciadeRegistro");

                    b.Property<string>("NoFin");

                    b.Property<string>("NoInicio");

                    b.Property<string>("NoOCExenta");

                    b.Property<string>("NoSAG");

                    b.Property<string>("NumeroDEI");

                    b.Property<DateTime>("OrderDate");

                    b.Property<int>("OrderId");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<string>("RTN");

                    b.Property<string>("Rango");

                    b.Property<string>("Remarks");

                    b.Property<decimal>("Saldo");

                    b.Property<decimal>("SaldoImpuesto");

                    b.Property<int>("SalesTypeId");

                    b.Property<int>("ShipmentId");

                    b.Property<string>("Sinopsis");

                    b.Property<decimal>("SubTotal");

                    b.Property<string>("Sucursal");

                    b.Property<decimal>("Tax");

                    b.Property<decimal>("Tax18");

                    b.Property<string>("Tefono");

                    b.Property<string>("TipoDocumento");

                    b.Property<decimal>("Total")
                        .HasColumnType("Money");

                    b.Property<decimal>("TotalExento")
                        .HasColumnType("Money");

                    b.Property<decimal>("TotalExonerado")
                        .HasColumnType("Money");

                    b.Property<decimal>("TotalGravado")
                        .HasColumnType("Money");

                    b.Property<decimal>("TotalGravado18")
                        .HasColumnType("Money");

                    b.Property<string>("TotalLetras");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("InvoiceId");

                    b.HasIndex("CuentaBancariaId");

                    b.HasIndex("CustomerContractId");

                    b.HasIndex("JournalEntryId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("ERPAPI.Models.InvoiceCalculation", b =>
                {
                    b.Property<long>("InvoiceCalculationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<int>("Dias");

                    b.Property<int>("Dias2");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdCD");

                    b.Property<long>("IdEstado");

                    b.Property<Guid?>("Identificador");

                    b.Property<decimal>("IngresoMercadería");

                    b.Property<long>("InvoiceId");

                    b.Property<decimal>("MercaderiaCertificada");

                    b.Property<long>("NoCD");

                    b.Property<decimal>("PorcentajeMerma");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<long>("ProformaInvoiceId");

                    b.Property<decimal>("Quantity");

                    b.Property<decimal>("UnitPrice");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<decimal>("ValorAFacturarMerma");

                    b.Property<decimal>("ValorFacturar");

                    b.Property<decimal>("ValorLps");

                    b.Property<decimal>("ValorLpsMerma");

                    b.HasKey("InvoiceCalculationId");

                    b.ToTable("InvoiceCalculation");
                });

            modelBuilder.Entity("ERPAPI.Models.InvoiceLine", b =>
                {
                    b.Property<long>("InvoiceLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.Property<string>("AccountName");

                    b.Property<decimal>("Amount")
                        .HasColumnType("Money");

                    b.Property<long>("CostCenterId");

                    b.Property<string>("CostCenterName");

                    b.Property<long?>("CustomerAreaId");

                    b.Property<string>("Description");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("Money");

                    b.Property<decimal>("DiscountPercentage");

                    b.Property<int>("InvoiceId");

                    b.Property<decimal>("Price")
                        .HasColumnType("Money");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<decimal>("Quantity");

                    b.Property<decimal>("Saldo");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("Money");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("Money");

                    b.Property<string>("TaxCode");

                    b.Property<long>("TaxId");

                    b.Property<decimal>("TaxPercentage");

                    b.Property<decimal>("Total")
                        .HasColumnType("Money");

                    b.Property<int>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<long>("WareHouseId");

                    b.HasKey("InvoiceLineId");

                    b.HasIndex("CustomerAreaId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("SubProductId");

                    b.HasIndex("UnitOfMeasureId");

                    b.ToTable("InvoiceLine");
                });

            modelBuilder.Entity("ERPAPI.Models.InvoicePayments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Bank");

                    b.Property<string>("BankName");

                    b.Property<int>("BranchId");

                    b.Property<string>("CantidadenLetras");

                    b.Property<string>("CuentaBancaria");

                    b.Property<long?>("CuentaBancariaId");

                    b.Property<int>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("Depositante");

                    b.Property<string>("Estado");

                    b.Property<int>("EstadoId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<DateTime>("FechaPago");

                    b.Property<long?>("JournalId");

                    b.Property<decimal>("MontoAdeudaPrevio");

                    b.Property<decimal>("MontoAdeudado");

                    b.Property<decimal>("MontoPagado");

                    b.Property<string>("NoDocumentos");

                    b.Property<int>("NoPago");

                    b.Property<string>("Observaciones");

                    b.Property<string>("Referrencia");

                    b.Property<string>("Sinopsis");

                    b.Property<int>("TipoPago");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CuentaBancariaId");

                    b.HasIndex("JournalId");

                    b.ToTable("InvoicePayments");
                });

            modelBuilder.Entity("ERPAPI.Models.InvoicePaymentsLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DocumentId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<int>("InvoicePaymentId");

                    b.Property<int?>("InvoivceId");

                    b.Property<decimal>("MontoAdeudaPrevio");

                    b.Property<decimal>("MontoPagado");

                    b.Property<decimal>("MontoRestante");

                    b.Property<string>("NoDocumento");

                    b.Property<long?>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<int>("TipoDocumento");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<decimal>("ValorOriginal");

                    b.HasKey("Id");

                    b.HasIndex("InvoicePaymentId");

                    b.HasIndex("InvoivceId");

                    b.HasIndex("SubProductId");

                    b.ToTable("InvoicePaymentsLine");
                });

            modelBuilder.Entity("ERPAPI.Models.InvoiceTransReport", b =>
                {
                    b.Property<long>("IdInvoiceTransReport")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<int>("CustomerId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<DateTime>("InvoiceDate");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdInvoiceTransReport");

                    b.ToTable("InvoiceTransReport");
                });

            modelBuilder.Entity("ERPAPI.Models.JournalClosing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("JournalEntryId");

                    b.Property<int>("YearClosed");

                    b.HasKey("Id");

                    b.HasIndex("JournalEntryId");

                    b.ToTable("JournalClosings");
                });

            modelBuilder.Entity("ERPAPI.Models.JournalEntry", b =>
                {
                    b.Property<long>("JournalEntryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedBy");

                    b.Property<DateTime?>("ApprovedDate");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .IsRequired();

                    b.Property<DateTime>("Date");

                    b.Property<DateTime>("DatePosted");

                    b.Property<long>("DocumentId");

                    b.Property<long?>("EstadoId");

                    b.Property<string>("EstadoName");

                    b.Property<int>("IdPaymentCode");

                    b.Property<int>("IdTypeofPayment");

                    b.Property<string>("Memo");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifiedUser");

                    b.Property<int?>("PartyId");

                    b.Property<string>("PartyName");

                    b.Property<int>("PartyTypeId");

                    b.Property<string>("PartyTypeName");

                    b.Property<string>("Periodo");

                    b.Property<int?>("PeriodoId");

                    b.Property<bool?>("Posted");

                    b.Property<string>("ReferenceNo");

                    b.Property<decimal>("TotalCredit")
                        .HasColumnType("Money");

                    b.Property<decimal>("TotalDebit")
                        .HasColumnType("Money");

                    b.Property<string>("TypeJournalName");

                    b.Property<int>("TypeOfAdjustmentId");

                    b.Property<string>("TypeOfAdjustmentName");

                    b.Property<int?>("VoucherType");

                    b.HasKey("JournalEntryId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("PeriodoId");

                    b.ToTable("JournalEntry");
                });

            modelBuilder.Entity("ERPAPI.Models.JournalEntryCanceled", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CanceledJournalentryId");

                    b.Property<long>("DocumentId");

                    b.Property<int>("ReverseJournalEntryId");

                    b.Property<string>("TypeJournalName");

                    b.Property<int>("VoucherType");

                    b.HasKey("Id");

                    b.ToTable("JournalEntryCanceled");
                });

            modelBuilder.Entity("ERPAPI.Models.JournalEntryConfiguration", b =>
                {
                    b.Property<long>("JournalEntryConfigurationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<long>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<string>("Description");

                    b.Property<long>("EstadoId");

                    b.Property<string>("EstadoName");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<string>("Transaction");

                    b.Property<long>("TransactionId");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("JournalEntryConfigurationId");

                    b.ToTable("JournalEntryConfiguration");
                });

            modelBuilder.Entity("ERPAPI.Models.JournalEntryConfigurationLine", b =>
                {
                    b.Property<long>("JournalEntryConfigurationLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.Property<string>("AccountName");

                    b.Property<long>("CostCenterId");

                    b.Property<string>("CostCenterName");

                    b.Property<string>("DebitCredit");

                    b.Property<long>("DebitCreditId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("JournalEntryConfigurationId");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("JournalEntryConfigurationLineId");

                    b.HasIndex("JournalEntryConfigurationId");

                    b.ToTable("JournalEntryConfigurationLine");
                });

            modelBuilder.Entity("ERPAPI.Models.JournalEntryLine", b =>
                {
                    b.Property<long>("JournalEntryLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.Property<string>("AccountName");

                    b.Property<long>("CostCenterId");

                    b.Property<string>("CostCenterName");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .IsRequired();

                    b.Property<decimal>("Credit")
                        .HasColumnType("Money");

                    b.Property<decimal>("CreditME")
                        .HasColumnType("Money");

                    b.Property<decimal>("CreditSy")
                        .HasColumnType("Money");

                    b.Property<decimal>("Debit")
                        .HasColumnType("Money");

                    b.Property<decimal>("DebitME")
                        .HasColumnType("Money");

                    b.Property<decimal>("DebitSy")
                        .HasColumnType("Money");

                    b.Property<string>("Description");

                    b.Property<long>("JournalEntryId");

                    b.Property<string>("Memo");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifiedUser")
                        .IsRequired();

                    b.Property<int?>("PartyId");

                    b.Property<string>("PartyName");

                    b.Property<int>("PartyTypeId");

                    b.Property<string>("PartyTypeName");

                    b.HasKey("JournalEntryLineId");

                    b.HasIndex("AccountId");

                    b.HasIndex("JournalEntryId");

                    b.ToTable("JournalEntryLine");
                });

            modelBuilder.Entity("ERPAPI.Models.Kardex", b =>
                {
                    b.Property<long>("KardexId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<long>("DocType");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<long?>("DocumentId");

                    b.Property<int?>("DocumentLine");

                    b.Property<string>("DocumentName");

                    b.Property<long?>("Estiba");

                    b.Property<long?>("GoodsAuthorizationId");

                    b.Property<DateTime>("KardexDate");

                    b.Property<int>("KardexTypeId");

                    b.Property<bool>("MaxKardex");

                    b.Property<int?>("PdaNo");

                    b.Property<decimal?>("Precio");

                    b.Property<long?>("ProducId");

                    b.Property<string>("ProductName");

                    b.Property<decimal>("QuantityEntry");

                    b.Property<decimal>("QuantityEntryBags");

                    b.Property<decimal>("QuantityOut");

                    b.Property<decimal>("QuantityOutBags");

                    b.Property<decimal?>("SaldoAnterior");

                    b.Property<int?>("SourceDocumentId");

                    b.Property<int?>("SourceDocumentLine");

                    b.Property<string>("SourceDocumentName");

                    b.Property<long?>("SubProducId");

                    b.Property<string>("SubProductName");

                    b.Property<decimal>("Total");

                    b.Property<decimal>("TotalBags");

                    b.Property<int?>("TypeOperationId");

                    b.Property<string>("TypeOperationName");

                    b.Property<long?>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<decimal?>("ValorMovimiento");

                    b.Property<decimal?>("ValorTotal");

                    b.Property<long?>("WareHouseId");

                    b.Property<string>("WareHouseName");

                    b.HasKey("KardexId");

                    b.HasIndex("GoodsAuthorizationId");

                    b.ToTable("Kardex");
                });

            modelBuilder.Entity("ERPAPI.Models.KardexLine", b =>
                {
                    b.Property<long>("KardexLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<long>("ControlEstibaId");

                    b.Property<string>("ControlEstibaName");

                    b.Property<long>("CostCenterId");

                    b.Property<string>("CostCenterName");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<long>("GoodsReceivedId");

                    b.Property<DateTime>("KardexDate");

                    b.Property<long>("KardexId");

                    b.Property<decimal>("MinimumExistance");

                    b.Property<long>("ProducId");

                    b.Property<string>("ProductName");

                    b.Property<decimal>("QuantityEntry");

                    b.Property<decimal>("QuantityEntryBags");

                    b.Property<decimal>("QuantityEntryCD");

                    b.Property<decimal>("QuantityOut");

                    b.Property<decimal>("QuantityOutBags");

                    b.Property<decimal>("QuantityOutCD");

                    b.Property<decimal>("SaldoAnterior");

                    b.Property<long>("SubProducId");

                    b.Property<string>("SubProductName");

                    b.Property<decimal>("Total");

                    b.Property<decimal>("TotalBags");

                    b.Property<decimal>("TotalCD");

                    b.Property<int>("TypeOperationId");

                    b.Property<string>("TypeOperationName");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<long>("WareHouseId");

                    b.Property<string>("WareHouseName");

                    b.HasKey("KardexLineId");

                    b.ToTable("KardexLine");
                });

            modelBuilder.Entity("ERPAPI.Models.Liquidacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comentarios");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<decimal>("DerechosImportacion");

                    b.Property<long>("EstadoId");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime>("FechaLiquidacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<decimal>("Flete");

                    b.Property<bool?>("Importacion");

                    b.Property<decimal>("ImpuestoSobreVentas");

                    b.Property<string>("NoFactura");

                    b.Property<string>("NoPoliza");

                    b.Property<decimal>("Otros");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<string>("Recibos");

                    b.Property<decimal>("Seguro");

                    b.Property<decimal>("SelectivoConsumo");

                    b.Property<decimal>("TasaCambio")
                        .HasColumnType("money");

                    b.Property<decimal>("Total");

                    b.Property<decimal?>("TotalOtrosImpuestos")
                        .HasColumnType("money");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("ProductId");

                    b.ToTable("Liquidacion");
                });

            modelBuilder.Entity("ERPAPI.Models.LiquidacionLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cantidad");

                    b.Property<decimal?>("CantidadRecibida");

                    b.Property<long?>("GoodsReceivedLineId");

                    b.Property<int>("LiquidacionId");

                    b.Property<decimal>("OtrosImpuestos");

                    b.Property<decimal?>("PrecioUnitarioCIF");

                    b.Property<long?>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<decimal>("TasaCambio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalCIB")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalCIFDerechosImp");

                    b.Property<decimal>("TotalCIFLPS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalDerechos");

                    b.Property<decimal>("TotalDerechosmasImpuestos");

                    b.Property<decimal>("TotalFOB")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalFinal");

                    b.Property<decimal>("TotalImpuestoVentas");

                    b.Property<string>("UOM");

                    b.Property<decimal>("ValorDerechosImportacion");

                    b.Property<decimal>("ValorSelectivoConsumo");

                    b.Property<decimal?>("ValorTotalCIF");

                    b.Property<decimal?>("ValorTotalDerechos");

                    b.Property<decimal?>("ValorUnitarioDerechos");

                    b.HasKey("Id");

                    b.HasIndex("GoodsReceivedLineId");

                    b.HasIndex("LiquidacionId");

                    b.HasIndex("SubProductId");

                    b.ToTable("LiquidacionLine");
                });

            modelBuilder.Entity("ERPAPI.Models.LlegadasTardeBiometrico", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ControlAsistenciaId");

                    b.Property<int>("Dia");

                    b.Property<DateTime>("Fecha");

                    b.Property<string>("HoraLlegada");

                    b.Property<int>("Horas");

                    b.Property<long>("IdBiometrico");

                    b.Property<long>("IdEmpleado");

                    b.Property<long>("IdEstado");

                    b.Property<int>("Minutos");

                    b.HasKey("Id");

                    b.HasIndex("ControlAsistenciaId");

                    b.HasIndex("IdBiometrico");

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdEstado");

                    b.ToTable("LlegadasTardeBiometrico");
                });

            modelBuilder.Entity("ERPAPI.Models.MantenimientoImpacto", b =>
                {
                    b.Property<int>("MantenimientoImpactoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("NoImpacto");

                    b.Property<string>("Rango");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("MantenimientoImpactoId");

                    b.ToTable("MantenimientoImpacto");
                });

            modelBuilder.Entity("ERPAPI.Models.MatrizRiesgoCustomers", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Avance");

                    b.Property<int>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<string>("Controles");

                    b.Property<long>("CustomerId");

                    b.Property<string>("Efecto");

                    b.Property<bool>("Eficaz");

                    b.Property<string>("FactorRiesgo");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("FechaObjetvo");

                    b.Property<DateTime>("FechaRevision");

                    b.Property<long>("IdContextoRiesgo");

                    b.Property<long>("IdFactorRiesgo");

                    b.Property<long>("ProductId");

                    b.Property<string>("Responsable");

                    b.Property<string>("Riesgo");

                    b.Property<long>("RiesgoInicialCalificacion");

                    b.Property<string>("RiesgoInicialColorHexadecimal");

                    b.Property<long>("RiesgoInicialImpacto");

                    b.Property<string>("RiesgoInicialNivel");

                    b.Property<long>("RiesgoInicialProbabilidad");

                    b.Property<long>("RiesgoInicialValorSeveridad");

                    b.Property<long>("RiesgoResidualCalificacion");

                    b.Property<string>("RiesgoResidualColorHexadecimal");

                    b.Property<long>("RiesgoResidualImpacto");

                    b.Property<string>("RiesgoResidualNivel");

                    b.Property<long>("RiesgoResidualProbabilidad");

                    b.Property<long>("RiesgoResidualValorSeveridad");

                    b.Property<string>("Seguimiento");

                    b.Property<int>("TipodeAccionderiesgoId");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("IdContextoRiesgo");

                    b.HasIndex("ProductId");

                    b.HasIndex("TipodeAccionderiesgoId");

                    b.ToTable("MatrizRiesgoCustomers");
                });

            modelBuilder.Entity("ERPAPI.Models.Measure", b =>
                {
                    b.Property<long>("MeasurelId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .IsRequired();

                    b.Property<string>("Description");

                    b.Property<decimal?>("High");

                    b.Property<long?>("IdEstado");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifiedUser")
                        .IsRequired();

                    b.Property<decimal?>("faces");

                    b.Property<decimal?>("quantity");

                    b.Property<decimal?>("thickness");

                    b.Property<decimal?>("width");

                    b.HasKey("MeasurelId");

                    b.ToTable("Measure");
                });

            modelBuilder.Entity("ERPAPI.Models.MotivoConciliacion", b =>
                {
                    b.Property<long>("MotivoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("MotivoId");

                    b.ToTable("MotivoConciliacion");
                });

            modelBuilder.Entity("ERPAPI.Models.Notifications", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action");

                    b.Property<string>("Controller");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("FechaLectura");

                    b.Property<DateTime>("FechaNotificacion");

                    b.Property<string>("Icono");

                    b.Property<bool>("Leido");

                    b.Property<string>("Link");

                    b.Property<string>("ModuloInvocacion");

                    b.Property<string>("PermisoLectura");

                    b.Property<string>("Titulo");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioLectura");

                    b.HasKey("Id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("ERPAPI.Models.NumeracionSAR", b =>
                {
                    b.Property<long>("IdNumeracion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<int>("CantidadOtorgada");

                    b.Property<long?>("Correlativo");

                    b.Property<string>("DocType");

                    b.Property<long>("DocTypeId");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaLimite");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdCAI");

                    b.Property<long>("IdEstado");

                    b.Property<long>("IdPuntoEmision");

                    b.Property<long>("NoFin");

                    b.Property<long>("NoInicio");

                    b.Property<string>("PuntoEmision");

                    b.Property<string>("SiguienteNumero");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<string>("_cai");

                    b.HasKey("IdNumeracion");

                    b.ToTable("NumeracionSAR");
                });

            modelBuilder.Entity("ERPAPI.Models.OrdenFormula", b =>
                {
                    b.Property<long>("Idordenformula")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<long?>("IdPlanilla");

                    b.Property<long?>("Idformula");

                    b.Property<int?>("Orden");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Idordenformula");

                    b.ToTable("OrdenFormula");
                });

            modelBuilder.Entity("ERPAPI.Models.PEPS", b =>
                {
                    b.Property<long>("PEPSId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cargo");

                    b.Property<long>("CityId");

                    b.Property<string>("CityName");

                    b.Property<string>("Comments");

                    b.Property<long>("CountryId");

                    b.Property<string>("CountryName");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("Funcionario");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Identidad");

                    b.Property<string>("Official");

                    b.Property<long>("PartidoPoliticoId");

                    b.Property<string>("PartidoPoliticoName");

                    b.Property<string>("Periodo");

                    b.Property<long>("StateId");

                    b.Property<string>("StateName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("PEPSId");

                    b.ToTable("PEPS");
                });

            modelBuilder.Entity("ERPAPI.Models.PagoISR", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("EmpleadoId");

                    b.Property<long>("EstadoId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<double>("PagoAcumulado");

                    b.Property<long>("Periodo");

                    b.Property<double>("Saldo");

                    b.Property<double>("TotalAnual");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("EstadoId");

                    b.ToTable("PagosISR");
                });

            modelBuilder.Entity("ERPAPI.Models.Party", b =>
                {
                    b.Property<long>("PartyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Fax");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<int>("PartyType");

                    b.Property<string>("Phone");

                    b.Property<string>("Website");

                    b.HasKey("PartyId");

                    b.ToTable("Party");
                });

            modelBuilder.Entity("ERPAPI.Models.PasswordHistory", b =>
                {
                    b.Property<long>("PasswordHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("UserId");

                    b.Property<Guid?>("UserId1");

                    b.HasKey("PasswordHistoryId");

                    b.HasIndex("UserId1");

                    b.ToTable("PasswordHistory");
                });

            modelBuilder.Entity("ERPAPI.Models.PaymentScheduleRulesByCustomer", b =>
                {
                    b.Property<long>("PaymentScheduleRulesByCustomerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("ScheduleSubservicesId");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("PaymentScheduleRulesByCustomerId");

                    b.ToTable("PaymentScheduleRulesByCustomer");
                });

            modelBuilder.Entity("ERPAPI.Models.PaymentTerms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountingAccountId");

                    b.Property<double>("Amount");

                    b.Property<string>("ChekingAccount");

                    b.Property<string>("CustomerPayIn");

                    b.Property<int>("Days");

                    b.Property<int>("Default");

                    b.Property<string>("Description");

                    b.Property<double>("EarlyPaymentDiscount");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<int>("Fees");

                    b.Property<double>("FirstPayment");

                    b.Property<long>("PaymentTypesId");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Id");

                    b.HasIndex("AccountingAccountId");

                    b.HasIndex("PaymentTypesId");

                    b.ToTable("PaymentTerms");
                });

            modelBuilder.Entity("ERPAPI.Models.PaymentTypes", b =>
                {
                    b.Property<long>("PaymentTypesId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifiedUser")
                        .IsRequired();

                    b.Property<string>("PaymentTypesName");

                    b.HasKey("PaymentTypesId");

                    b.ToTable("PaymentTypes");
                });

            modelBuilder.Entity("ERPAPI.Models.Payroll", b =>
                {
                    b.Property<long>("IdPlanilla")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionPlanilla");

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("NombrePlanilla");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdPlanilla");

                    b.ToTable("Payroll");
                });

            modelBuilder.Entity("ERPAPI.Models.PayrollDeduction", b =>
                {
                    b.Property<long>("PayrollDeductionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<string>("ConceptName");

                    b.Property<DateTime>("EndDate");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<double>("Fees");

                    b.Property<long>("IdEmpleado");

                    b.Property<string>("NombreEmpleado");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("PayrollDeductionId");

                    b.ToTable("PayrollDeduction");
                });

            modelBuilder.Entity("ERPAPI.Models.PayrollEmployee", b =>
                {
                    b.Property<long>("IdPlanillaempleado")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaIngreso");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdEmpleado");

                    b.Property<long?>("IdEstado");

                    b.Property<long?>("IdPlanilla");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdPlanillaempleado");

                    b.ToTable("PayrollEmployee");
                });

            modelBuilder.Entity("ERPAPI.Models.PeriodicidadPago", b =>
                {
                    b.Property<long>("PeriodicidadId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<long>("EstadoId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("Nombre");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("PeriodicidadId");

                    b.ToTable("PeriodicidadPago");
                });

            modelBuilder.Entity("ERPAPI.Models.Periodo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Anio");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Mensaje");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Id");

                    b.HasIndex("IdEstado");

                    b.ToTable("Periodo");
                });

            modelBuilder.Entity("ERPAPI.Models.PhoneLines", b =>
                {
                    b.Property<long>("PhoneLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyPhone");

                    b.Property<double>("DueBalanceLps");

                    b.Property<double>("DueBalanceUS");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<int>("IdBranch");

                    b.Property<long>("IdEmpleado");

                    b.Property<long>("IdEstado");

                    b.Property<string>("NombreEmpleado");

                    b.Property<double>("PaymentLps");

                    b.Property<double>("PaymentUS");

                    b.Property<double>("TotalLps");

                    b.Property<double>("TotalUS");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("PhoneLineId");

                    b.HasIndex("IdBranch");

                    b.ToTable("PhoneLines");
                });

            modelBuilder.Entity("ERPAPI.Models.Planilla", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("EstadoId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<int>("Mes");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<int>("Periodo");

                    b.Property<long>("TipoPlanillaId");

                    b.Property<int>("TotalEmpleados");

                    b.Property<double>("TotalPlanilla");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.HasIndex("TipoPlanillaId");

                    b.ToTable("Planillas");
                });

            modelBuilder.Entity("ERPAPI.Models.Policy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.Property<string>("type")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Policy");
                });

            modelBuilder.Entity("ERPAPI.Models.PolicyClaims", b =>
                {
                    b.Property<int>("idroleclaim");

                    b.Property<Guid>("IdPolicy");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("idroleclaim", "IdPolicy");

                    b.HasAlternateKey("IdPolicy", "idroleclaim");

                    b.ToTable("PolicyClaims");
                });

            modelBuilder.Entity("ERPAPI.Models.PolicyRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Estado");

                    b.Property<long>("IdEstado");

                    b.Property<Guid>("IdPolicy");

                    b.Property<Guid>("IdRol");

                    b.Property<string>("PolicyName");

                    b.Property<string>("RolName");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("IdPolicy");

                    b.HasIndex("IdRol");

                    b.ToTable("PolicyRoles");
                });

            modelBuilder.Entity("ERPAPI.Models.PrecioCafe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BeneficiadoUSD");

                    b.Property<decimal>("BrutoLPSConsumoInterno")
                        .HasColumnType("Money");

                    b.Property<decimal?>("BrutoLPSIngreso")
                        .HasColumnType("Money");

                    b.Property<string>("Cosecha");

                    b.Property<long?>("CustomerId");

                    b.Property<long>("ExchangeRateId");

                    b.Property<decimal?>("ExchangeRateValue");

                    b.Property<DateTime>("Fecha");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<decimal>("FideicomisoUSD");

                    b.Property<string>("ImgName");

                    b.Property<string>("ImgPrecioCafe");

                    b.Property<decimal>("NetoLPSConsumoInterno")
                        .HasColumnType("Money");

                    b.Property<decimal?>("NetoLPSIngreso")
                        .HasColumnType("Money");

                    b.Property<decimal?>("Otros");

                    b.Property<decimal?>("PercioQQPergamino")
                        .HasColumnType("Money");

                    b.Property<decimal>("PermisoExportacionUSD");

                    b.Property<decimal>("PorcentajeConsumoInterno");

                    b.Property<decimal>("PorcentajeIngreso");

                    b.Property<decimal>("PrecioBolsaUSD");

                    b.Property<decimal?>("PrecioQQCalidadesInferiores")
                        .HasColumnType("Money");

                    b.Property<decimal?>("PrecioQQOro")
                        .HasColumnType("Money");

                    b.Property<decimal?>("TotalLPSEgreso")
                        .HasColumnType("Money");

                    b.Property<decimal?>("TotalLPSIngreso")
                        .HasColumnType("Money");

                    b.Property<decimal>("TotalUSDEgreso")
                        .HasColumnType("Money");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<decimal>("UtilidadUSD");

                    b.Property<bool?>("UtilizadaCertificado");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ExchangeRateId");

                    b.ToTable("PrecioCafe");
                });

            modelBuilder.Entity("ERPAPI.Models.Presupuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName");

                    b.Property<long>("AccountigId");

                    b.Property<long>("CostCenterId");

                    b.Property<decimal>("EjecucionAbril");

                    b.Property<decimal>("EjecucionAgosto");

                    b.Property<decimal>("EjecucionDiciembre");

                    b.Property<decimal>("EjecucionEnero");

                    b.Property<decimal>("EjecucionFebrero");

                    b.Property<decimal>("EjecucionJulio");

                    b.Property<decimal>("EjecucionJunio");

                    b.Property<decimal>("EjecucionMarzo");

                    b.Property<decimal>("EjecucionMayo");

                    b.Property<decimal>("EjecucionNoviembre");

                    b.Property<decimal>("EjecucionOctubre");

                    b.Property<decimal>("EjecucionSeptiembre");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<int>("PeriodoId");

                    b.Property<decimal>("PresupuestoAbril");

                    b.Property<decimal>("PresupuestoAgosto");

                    b.Property<decimal>("PresupuestoDiciembre");

                    b.Property<decimal>("PresupuestoEnero");

                    b.Property<decimal>("PresupuestoFebrero");

                    b.Property<decimal>("PresupuestoJulio");

                    b.Property<decimal>("PresupuestoJunio");

                    b.Property<decimal>("PresupuestoMarzo");

                    b.Property<decimal>("PresupuestoMayo");

                    b.Property<decimal>("PresupuestoNoviembre");

                    b.Property<decimal>("PresupuestoOctubre");

                    b.Property<decimal>("PresupuestoSeptiembre");

                    b.Property<decimal>("TotalMontoEjecucion");

                    b.Property<decimal>("TotalMontoPresupuesto");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Id");

                    b.HasIndex("AccountigId");

                    b.HasIndex("PeriodoId");

                    b.HasIndex("CostCenterId", "PeriodoId", "AccountigId")
                        .IsUnique();

                    b.ToTable("Presupuesto");
                });

            modelBuilder.Entity("ERPAPI.Models.ProbabilidadRiesgo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColorHexadecimal");

                    b.Property<string>("Descripcion");

                    b.Property<string>("Descriptor");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("Frecuencia");

                    b.Property<long>("Nivel");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("Id");

                    b.ToTable("ProbabilidadRiesgo");
                });

            modelBuilder.Entity("ERPAPI.Models.Product", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Barcode");

                    b.Property<int>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<string>("Correlative");

                    b.Property<int>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<double>("DefaultBuyingPrice");

                    b.Property<double>("DefaultSellingPrice");

                    b.Property<string>("Description");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<int?>("FundingInterestRateId");

                    b.Property<long>("IdEstado");

                    b.Property<decimal?>("Prima");

                    b.Property<string>("ProductCode");

                    b.Property<string>("ProductImageUrl");

                    b.Property<string>("ProductName")
                        .IsRequired();

                    b.Property<long?>("ProductTypeId");

                    b.Property<int?>("UnitOfMeasureId");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("ProductId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("FundingInterestRateId");

                    b.HasIndex("ProductCode")
                        .IsUnique()
                        .HasFilter("[ProductCode] IS NOT NULL");

                    b.HasIndex("ProductTypeId");

                    b.HasIndex("UnitOfMeasureId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ERPAPI.Models.ProductRelation", b =>
                {
                    b.Property<long>("RelationProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountId");

                    b.Property<long?>("AccountIdPorCobrar");

                    b.Property<long?>("CuentaContableIdPorCobrar");

                    b.Property<long?>("CuentaContableIngresosId");

                    b.Property<string>("CuentaContableIngresosNombre");

                    b.Property<string>("CuentaContablePorCobrarNombre");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<long>("ProductId");

                    b.Property<long>("SubProductId");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("RelationProductId");

                    b.HasIndex("AccountId");

                    b.HasIndex("AccountIdPorCobrar");

                    b.HasIndex("IdEstado");

                    b.HasIndex("SubProductId");

                    b.HasIndex("ProductId", "SubProductId")
                        .IsUnique();

                    b.ToTable("ProductRelation");
                });

            modelBuilder.Entity("ERPAPI.Models.ProductType", b =>
                {
                    b.Property<long>("ProductTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Estado");

                    b.Property<long>("IdEstado");

                    b.Property<string>("ProductTypeName")
                        .IsRequired();

                    b.HasKey("ProductTypeId");

                    b.ToTable("ProductType");
                });

            modelBuilder.Entity("ERPAPI.Models.ProductUserRelation", b =>
                {
                    b.Property<long>("ProductUserRelationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("DocType");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("ProductUserRelationId");

                    b.ToTable("ProductUserRelation");
                });

            modelBuilder.Entity("ERPAPI.Models.Puesto", b =>
                {
                    b.Property<long>("IdPuesto")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdDepartamento");

                    b.Property<long>("IdEstado");

                    b.Property<string>("NombreDepartamento");

                    b.Property<string>("NombrePuesto");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("IdPuesto");

                    b.ToTable("Puesto");
                });

            modelBuilder.Entity("ERPAPI.Models.PuntoEmision", b =>
                {
                    b.Property<long>("IdPuntoEmision")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("PuntoEmisionCod");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdPuntoEmision");

                    b.ToTable("PuntoEmision");
                });

            modelBuilder.Entity("ERPAPI.Models.PurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<int?>("BranchId");

                    b.Property<int?>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<DateTime>("DatePlaced");

                    b.Property<double>("Discount");

                    b.Property<long?>("EstadoId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<double?>("Freight");

                    b.Property<string>("PONumber");

                    b.Property<long?>("POTypeId");

                    b.Property<string>("Remarks");

                    b.Property<string>("Requisitioner");

                    b.Property<long?>("ShippingTypeId");

                    b.Property<string>("ShippingTypeName");

                    b.Property<double>("SubTotal");

                    b.Property<double>("Tax18");

                    b.Property<double>("TaxAmount");

                    b.Property<long?>("TaxId");

                    b.Property<string>("TaxName");

                    b.Property<decimal>("TaxRate");

                    b.Property<string>("Terms");

                    b.Property<string>("Title");

                    b.Property<double>("Total");

                    b.Property<double>("TotalExento");

                    b.Property<double>("TotalExonerado");

                    b.Property<double>("TotalGravado");

                    b.Property<double>("TotalGravado18");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<long?>("VendorId");

                    b.Property<string>("VendorName");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("ShippingTypeId");

                    b.HasIndex("TaxId");

                    b.HasIndex("VendorId");

                    b.ToTable("PurchaseOrder");
                });

            modelBuilder.Entity("ERPAPI.Models.PurchaseOrderLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<int>("DiscountAmount");

                    b.Property<int>("DiscountPercentage");

                    b.Property<int?>("LineNumber");

                    b.Property<decimal?>("Price");

                    b.Property<string>("ProductDescription");

                    b.Property<long?>("ProductId");

                    b.Property<int>("PurchaseOrderId");

                    b.Property<decimal?>("QtyOrdered");

                    b.Property<decimal?>("QtyReceived");

                    b.Property<decimal?>("QtyReceivedToDate");

                    b.Property<decimal>("SubTotal");

                    b.Property<decimal>("TaxAmount");

                    b.Property<long?>("TaxId");

                    b.Property<string>("TaxName");

                    b.Property<decimal>("TaxPercentage");

                    b.Property<decimal>("TaxRate");

                    b.Property<decimal>("Total");

                    b.Property<int>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseOrderId");

                    b.HasIndex("TaxId");

                    b.HasIndex("UnitOfMeasureId");

                    b.ToTable("PurchaseOrderLine");
                });

            modelBuilder.Entity("ERPAPI.Models.RecibosCertificado", b =>
                {
                    b.Property<long>("IdReciboCertificado")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("IdCD");

                    b.Property<long>("IdRecibo");

                    b.Property<long>("UnitMeasureId");

                    b.Property<double>("productocantidadbultos");

                    b.Property<double>("productorecibolempiras");

                    b.Property<double>("productounidad");

                    b.HasKey("IdReciboCertificado");

                    b.ToTable("RecibosCertificado");
                });

            modelBuilder.Entity("ERPAPI.Models.Reconciliacion", b =>
                {
                    b.Property<long>("IdReconciliacion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionReconciliacion");

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("FechaAplicacion");

                    b.Property<DateTime?>("FechaFinReconciliacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<DateTime?>("FechaReconciliacion");

                    b.Property<DateTime?>("Fechacreacion");

                    b.Property<long?>("IdCalculoplanilla");

                    b.Property<long>("IdEstado");

                    b.Property<decimal?>("SaldoEmpleado");

                    b.Property<decimal?>("Tasacambio");

                    b.Property<decimal?>("TotalReconciliacion");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("IdReconciliacion");

                    b.ToTable("Reconciliacion");
                });

            modelBuilder.Entity("ERPAPI.Models.ReconciliacionDetalle", b =>
                {
                    b.Property<long>("IdDetallereconciliacion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Bonos");

                    b.Property<decimal?>("CatorceSalarioProporcional");

                    b.Property<decimal?>("Deducciones");

                    b.Property<string>("Descripcion");

                    b.Property<int?>("Dia");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<decimal?>("Horasextras");

                    b.Property<long?>("IdEmpleado");

                    b.Property<long?>("IdPlanilla");

                    b.Property<long?>("IdReconciliacion");

                    b.Property<int?>("Month");

                    b.Property<decimal?>("OtrosIngresos");

                    b.Property<decimal?>("Quincesalarioproporcional");

                    b.Property<decimal?>("Salario");

                    b.Property<decimal?>("SalarioRecibido");

                    b.Property<decimal?>("TrecesalarioProporcional");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<int?>("Year");

                    b.HasKey("IdDetallereconciliacion");

                    b.ToTable("ReconciliacionDetalle");
                });

            modelBuilder.Entity("ERPAPI.Models.ReconciliacionEscala", b =>
                {
                    b.Property<long>("IdEscalareconciliacion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionEscala");

                    b.Property<decimal?>("DiferenciaPorretener");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdConcepto");

                    b.Property<long?>("IdEmpleado");

                    b.Property<long?>("IdEscala");

                    b.Property<long?>("IdPlanilla");

                    b.Property<long?>("IdReconciliacion");

                    b.Property<int?>("MesesEjecutados");

                    b.Property<int?>("MesesRestantes");

                    b.Property<decimal?>("MontoEscala");

                    b.Property<decimal?>("Montocatorcesalario");

                    b.Property<decimal?>("Montoquincesalario");

                    b.Property<decimal?>("Montoretenido");

                    b.Property<decimal?>("Montotrecesalario");

                    b.Property<string>("NombreConcepto");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdEscalareconciliacion");

                    b.ToTable("ReconciliacionEscala");
                });

            modelBuilder.Entity("ERPAPI.Models.ReconciliacionGasto", b =>
                {
                    b.Property<long>("Idreconciliaciongasto")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripciongasto");

                    b.Property<DateTime?>("Fechaaplicacion");

                    b.Property<DateTime?>("Fechacreacion");

                    b.Property<DateTime?>("Fechamodificacion");

                    b.Property<long?>("IdEmpleado");

                    b.Property<long?>("IdPlanilla");

                    b.Property<long?>("Idreconciliacion");

                    b.Property<decimal?>("Montogasto");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("Idreconciliaciongasto");

                    b.ToTable("ReconciliacionGasto");
                });

            modelBuilder.Entity("ERPAPI.Models.RetentionReceipt", b =>
                {
                    b.Property<int>("RetentionReceiptId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BranchCode");

                    b.Property<int>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<string>("CAI");

                    b.Property<string>("CAIDocumento");

                    b.Property<string>("CantidadLetras");

                    b.Property<int>("CustomerId");

                    b.Property<long>("DocumentId");

                    b.Property<DateTime>("DueDate");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaEmision");

                    b.Property<DateTime>("FechaLimiteDocumento");

                    b.Property<DateTime?>("FechaLimiteEmision");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<long>("IdTipoDocumento");

                    b.Property<int?>("Impreso");

                    b.Property<string>("NoCorrelativoDocumento");

                    b.Property<string>("NumeroDEI");

                    b.Property<double>("Percentage");

                    b.Property<string>("RTN");

                    b.Property<string>("RangoEmision");

                    b.Property<string>("RetentionTaxDescription");

                    b.Property<string>("TaxDescription");

                    b.Property<long?>("TaxId");

                    b.Property<double>("TaxableBase");

                    b.Property<double>("TotalAmount");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<long>("VendorId");

                    b.Property<string>("VendorInvoice");

                    b.Property<int>("VendorInvoiceId");

                    b.Property<string>("VendorName");

                    b.HasKey("RetentionReceiptId");

                    b.HasIndex("TaxId");

                    b.ToTable("RetentionReceipt");
                });

            modelBuilder.Entity("ERPAPI.Models.SalesOrder", b =>
                {
                    b.Property<int>("SalesOrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<string>("CargoContactoRepresentante");

                    b.Property<decimal?>("ComisionMax");

                    b.Property<decimal?>("ComisionMin");

                    b.Property<string>("Correo");

                    b.Property<string>("Customer");

                    b.Property<long?>("CustomerContractId_Source");

                    b.Property<int>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("CustomerRefNumber");

                    b.Property<string>("Direccion");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("FirmaAlmacafe");

                    b.Property<string>("FirmaAlmacafeCargo");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Impreso");

                    b.Property<decimal?>("IncrementoAnual");

                    b.Property<string>("NameContract");

                    b.Property<string>("Observacion");

                    b.Property<DateTime>("OrderDate");

                    b.Property<decimal?>("PlazoMeses");

                    b.Property<bool?>("PolizaPropia");

                    b.Property<decimal?>("PrecioBaseProducto");

                    b.Property<decimal?>("PrecioServicio");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<string>("RTN");

                    b.Property<string>("Remarks");

                    b.Property<string>("Representante");

                    b.Property<string>("SalesOrderName");

                    b.Property<int>("SalesTypeId");

                    b.Property<string>("Tefono");

                    b.Property<long>("TypeContractId");

                    b.Property<long>("TypeInvoiceId");

                    b.Property<string>("TypeInvoiceName");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("SalesOrderId");

                    b.HasIndex("CustomerContractId_Source");

                    b.ToTable("SalesOrder");
                });

            modelBuilder.Entity("ERPAPI.Models.SalesOrderLine", b =>
                {
                    b.Property<long>("SalesOrderLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<string>("Description");

                    b.Property<decimal>("DiscountAmount");

                    b.Property<decimal>("DiscountPercentage");

                    b.Property<decimal>("PeriodoCobro");

                    b.Property<decimal?>("Porcentaje");

                    b.Property<decimal>("Price");

                    b.Property<decimal>("Quantity");

                    b.Property<int>("SalesOrderId");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<decimal>("SubTotal");

                    b.Property<decimal>("TaxAmount");

                    b.Property<string>("TaxCode");

                    b.Property<long>("TaxId");

                    b.Property<decimal>("TaxPercentage");

                    b.Property<long?>("TipoCobroId");

                    b.Property<string>("TipoCobroName");

                    b.Property<decimal>("Total");

                    b.Property<long>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<decimal?>("Valor");

                    b.HasKey("SalesOrderLineId");

                    b.HasIndex("SalesOrderId");

                    b.HasIndex("SubProductId");

                    b.HasIndex("TipoCobroId");

                    b.ToTable("SalesOrderLine");
                });

            modelBuilder.Entity("ERPAPI.Models.SalesType", b =>
                {
                    b.Property<int>("SalesTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("SalesTypeName")
                        .IsRequired();

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.HasKey("SalesTypeId");

                    b.ToTable("SalesType");
                });

            modelBuilder.Entity("ERPAPI.Models.ScheduleSubservices", b =>
                {
                    b.Property<long>("ScheduleSubservicesId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Almuerzo");

                    b.Property<decimal>("Cena");

                    b.Property<string>("Condition");

                    b.Property<string>("Day");

                    b.Property<decimal>("Desayuno");

                    b.Property<string>("Description");

                    b.Property<DateTime>("EndTime");

                    b.Property<string>("Estado");

                    b.Property<decimal>("FactorHora");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<long>("LogicalConditionId");

                    b.Property<decimal>("QuantityHours");

                    b.Property<long>("ServiceId");

                    b.Property<string>("ServiceName");

                    b.Property<DateTime>("StartTime");

                    b.Property<long>("SubServiceId");

                    b.Property<string>("SubServiceName");

                    b.Property<bool>("Transport");

                    b.Property<decimal>("Transporte");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("ScheduleSubservicesId");

                    b.ToTable("ScheduleSubservices");
                });

            modelBuilder.Entity("ERPAPI.Models.SeveridadRiesgo", b =>
                {
                    b.Property<long>("IdSeveridad")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColorHexadecimal");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("Impacto");

                    b.Property<long>("LimeteCalidadSuperir");

                    b.Property<long>("LimiteCalidadInferior");

                    b.Property<string>("Nivel");

                    b.Property<long>("Probabilidad");

                    b.Property<double>("RangoInferiorSeveridad");

                    b.Property<double>("RangoSuperiorSeveridad");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdSeveridad");

                    b.ToTable("SeveridadRiesgo");
                });

            modelBuilder.Entity("ERPAPI.Models.Shipment", b =>
                {
                    b.Property<int>("ShipmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsFullShipment");

                    b.Property<int>("SalesOrderId");

                    b.Property<DateTime>("ShipmentDate");

                    b.Property<string>("ShipmentName");

                    b.Property<int>("ShipmentTypeId");

                    b.Property<int>("WarehouseId");

                    b.HasKey("ShipmentId");

                    b.ToTable("Shipment");
                });

            modelBuilder.Entity("ERPAPI.Models.ShipmentType", b =>
                {
                    b.Property<int>("ShipmentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("ShipmentTypeName")
                        .IsRequired();

                    b.HasKey("ShipmentTypeId");

                    b.ToTable("ShipmentType");
                });

            modelBuilder.Entity("ERPAPI.Models.SolicitudCertificadoDeposito", b =>
                {
                    b.Property<long>("IdSCD")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aduana");

                    b.Property<string>("Almacenaje");

                    b.Property<int?>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("Direccion");

                    b.Property<string>("EmpresaSeguro");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCertificado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<DateTime>("FechaVencimiento");

                    b.Property<DateTime?>("FechaVencimientoDeposito");

                    b.Property<long>("IdEstado");

                    b.Property<string>("ManifiestoNo");

                    b.Property<long>("NoCD");

                    b.Property<string>("NoPoliza");

                    b.Property<string>("NoTraslado");

                    b.Property<string>("NombreEmpresa");

                    b.Property<string>("NombrePrestatario");

                    b.Property<string>("OtrosCargos");

                    b.Property<decimal>("Quantitysum");

                    b.Property<string>("Seguro");

                    b.Property<long>("ServicioId");

                    b.Property<string>("ServicioName");

                    b.Property<string>("SituadoEn");

                    b.Property<double>("SujetasAPago");

                    b.Property<decimal>("Total");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdSCD");

                    b.HasIndex("BranchId");

                    b.ToTable("SolicitudCertificadoDeposito");
                });

            modelBuilder.Entity("ERPAPI.Models.SolicitudCertificadoLine", b =>
                {
                    b.Property<long>("CertificadoLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<string>("Description");

                    b.Property<long?>("GoodsReceivedLineId");

                    b.Property<long>("IdSCD");

                    b.Property<int>("Pda");

                    b.Property<decimal>("Price");

                    b.Property<decimal>("Quantity");

                    b.Property<int>("ReciboId");

                    b.Property<long>("SubProductId");

                    b.Property<string>("SubProductName");

                    b.Property<decimal>("TotalCantidad");

                    b.Property<string>("UnitMeasurName");

                    b.Property<long>("UnitMeasureId");

                    b.HasKey("CertificadoLineId");

                    b.HasIndex("GoodsReceivedLineId");

                    b.HasIndex("IdSCD");

                    b.HasIndex("SubProductId");

                    b.ToTable("SolicitudCertificadoLine");
                });

            modelBuilder.Entity("ERPAPI.Models.State", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<long>("CountryId");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<int?>("IdEstado");

                    b.Property<string>("Name");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("State");
                });

            modelBuilder.Entity("ERPAPI.Models.SubProduct", b =>
                {
                    b.Property<long>("SubproductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BagBalance");

                    b.Property<decimal>("Balance");

                    b.Property<string>("Barcode");

                    b.Property<bool>("CobroPorTiempo");

                    b.Property<string>("Description");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<decimal>("Merma");

                    b.Property<string>("ProductCode");

                    b.Property<string>("ProductName");

                    b.Property<long>("ProductTypeId");

                    b.Property<string>("ProductTypeName");

                    b.Property<int>("TipoCafe");

                    b.Property<long>("TipoProhibidoId");

                    b.Property<string>("TipoProhibidoName");

                    b.Property<int?>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("SubproductId");

                    b.ToTable("SubProduct");
                });

            modelBuilder.Entity("ERPAPI.Models.SubServicesWareHouse", b =>
                {
                    b.Property<long>("SubServicesWareHouseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<decimal?>("Cantidad");

                    b.Property<bool>("CobroPorTiempo");

                    b.Property<long>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<long?>("EmpleadoId");

                    b.Property<long>("EmployeeId");

                    b.Property<string>("EmployeeName");

                    b.Property<DateTime>("EndTime");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<int?>("InvoiceId");

                    b.Property<long?>("InvoiceLineId");

                    b.Property<string>("Motivo");

                    b.Property<decimal>("QuantityHours");

                    b.Property<long>("ServiceId");

                    b.Property<string>("ServiceName");

                    b.Property<string>("Solicitante");

                    b.Property<DateTime>("StartTime");

                    b.Property<long>("SubServiceId");

                    b.Property<string>("SubServiceName");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<long>("WareHouseId");

                    b.Property<string>("WareHouseName");

                    b.HasKey("SubServicesWareHouseId");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("InvoiceLineId");

                    b.ToTable("SubServicesWareHouse");
                });

            modelBuilder.Entity("ERPAPI.Models.Tax", b =>
                {
                    b.Property<long>("TaxId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CuentaContableIngresosId");

                    b.Property<string>("CuentaContableIngresosNombre");

                    b.Property<long?>("CuentaContablePorCobrarId");

                    b.Property<string>("CuentaContablePorCobrarNombre");

                    b.Property<long?>("CuentaImpuestoPagadoId");

                    b.Property<string>("CuentaImpuestoPagadoNombre");

                    b.Property<long?>("CuentaImpuestoporCobrarId");

                    b.Property<long?>("CuentaImpuestoporPagarId");

                    b.Property<string>("Description");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("TaxCode");

                    b.Property<decimal>("TaxPercentage");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("TaxId");

                    b.HasIndex("CuentaImpuestoPagadoId");

                    b.HasIndex("CuentaImpuestoporCobrarId");

                    b.HasIndex("CuentaImpuestoporPagarId");

                    b.ToTable("Tax");
                });

            modelBuilder.Entity("ERPAPI.Models.TipoBonificacion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("EstadoId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.Property<double>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.ToTable("TiposBonificaciones");
                });

            modelBuilder.Entity("ERPAPI.Models.TipoContrato", b =>
                {
                    b.Property<long>("IdTipoContrato")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdEstado");

                    b.Property<string>("NombreTipoContrato");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("IdTipoContrato");

                    b.ToTable("TipoContrato");
                });

            modelBuilder.Entity("ERPAPI.Models.TipoDocumento", b =>
                {
                    b.Property<long>("IdTipoDocumento")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<long?>("IdEstado");

                    b.Property<string>("NombreTipoDocumento");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("IdTipoDocumento");

                    b.ToTable("TipoDocumento");
                });

            modelBuilder.Entity("ERPAPI.Models.TipoPlanillas", b =>
                {
                    b.Property<long>("IdTipoPlanilla")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CategoriaId");

                    b.Property<string>("Descripcion");

                    b.Property<long>("EstadoId");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<string>("TipoPlanilla");

                    b.Property<string>("Usuariocreacion");

                    b.Property<string>("Usuariomodificacion");

                    b.HasKey("IdTipoPlanilla");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("EstadoId");

                    b.ToTable("TipoPlanillas");
                });

            modelBuilder.Entity("ERPAPI.Models.TipodeAccionderiesgo", b =>
                {
                    b.Property<int>("TipodeAccionderiesgoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("Tipodeaccion");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("TipodeAccionderiesgoId");

                    b.ToTable("TipodeAccionderiesgo");
                });

            modelBuilder.Entity("ERPAPI.Models.TiposDocumento", b =>
                {
                    b.Property<long>("IdTipoDocumento")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo");

                    b.Property<string>("Descripcion");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("IdTipoDocumento");

                    b.ToTable("TiposDocumento");
                });

            modelBuilder.Entity("ERPAPI.Models.TypeAccount", b =>
                {
                    b.Property<long>("TypeAccountId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .IsRequired();

                    b.Property<string>("DeudoraAcreedora")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifiedUser")
                        .IsRequired();

                    b.Property<string>("TypeAccountName");

                    b.HasKey("TypeAccountId");

                    b.ToTable("TypeAccount");
                });

            modelBuilder.Entity("ERPAPI.Models.TypeJournal", b =>
                {
                    b.Property<long>("TypeJournalId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifiedUser")
                        .IsRequired();

                    b.Property<string>("TypeJournalName");

                    b.HasKey("TypeJournalId");

                    b.ToTable("TypeJournal");
                });

            modelBuilder.Entity("ERPAPI.Models.UnitOfMeasure", b =>
                {
                    b.Property<int>("UnitOfMeasureId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("UnitOfMeasureName")
                        .IsRequired();

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.HasKey("UnitOfMeasureId");

                    b.HasIndex("UnitOfMeasureName")
                        .IsUnique();

                    b.ToTable("UnitOfMeasure");
                });

            modelBuilder.Entity("ERPAPI.Models.UserBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("CreatedUser");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("ModifiedUser");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("BranchId", "UserId")
                        .IsUnique();

                    b.ToTable("UserBranch");
                });

            modelBuilder.Entity("ERPAPI.Models.Vendor", b =>
                {
                    b.Property<long>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<long>("CityId");

                    b.Property<string>("CompanyReferenceone");

                    b.Property<string>("CompanyReferencetwo");

                    b.Property<string>("ContactPerson");

                    b.Property<long>("CountryId");

                    b.Property<int>("CurrencyId");

                    b.Property<string>("Email");

                    b.Property<string>("Estado");

                    b.Property<string>("EstadoVendorConfi");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<long?>("IdEstadoVendorConfi");

                    b.Property<string>("Identidad");

                    b.Property<string>("IdentityRepresentative");

                    b.Property<string>("Phone");

                    b.Property<string>("PhoneReferenceone");

                    b.Property<string>("PhoneReferencetwo");

                    b.Property<string>("RTN")
                        .IsRequired();

                    b.Property<string>("RTNRepresentative");

                    b.Property<string>("RepresentativeName");

                    b.Property<long>("StateId");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.Property<string>("VendorName")
                        .IsRequired();

                    b.Property<long>("VendorTypeId");

                    b.Property<string>("VendorTypeName");

                    b.Property<string>("ZipCode");

                    b.HasKey("VendorId");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("IdEstado");

                    b.HasIndex("StateId");

                    b.HasIndex("VendorTypeId");

                    b.ToTable("Vendor");
                });

            modelBuilder.Entity("ERPAPI.Models.VendorDocument", b =>
                {
                    b.Property<long>("VendorDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("CreatedUser");

                    b.Property<string>("DocumentName");

                    b.Property<long>("DocumentTypeId");

                    b.Property<string>("DocumentTypeName");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("ModifiedUser");

                    b.Property<string>("Path");

                    b.Property<long>("VendorId");

                    b.HasKey("VendorDocumentId");

                    b.ToTable("VendorDocument");
                });

            modelBuilder.Entity("ERPAPI.Models.VendorInvoice", b =>
                {
                    b.Property<int>("VendorInvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountIdCredito");

                    b.Property<long?>("AccountIdGasto");

                    b.Property<string>("AccountNameCredito");

                    b.Property<string>("AccountNameGasto");

                    b.Property<bool>("AplicaRetencion");

                    b.Property<int>("BranchId");

                    b.Property<string>("BranchName");

                    b.Property<string>("CAI");

                    b.Property<long?>("CostCenterId");

                    b.Property<string>("CostCenterName");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaLimiteEmision");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<string>("Impreso");

                    b.Property<long?>("JournalEntryId");

                    b.Property<string>("NumeroDEI");

                    b.Property<string>("Remarks");

                    b.Property<bool>("RetecionPendiente");

                    b.Property<int>("SalesTypeId");

                    b.Property<decimal>("Tax")
                        .HasColumnType("Money");

                    b.Property<string>("TipoDocumento");

                    b.Property<decimal>("Total")
                        .HasColumnType("Money");

                    b.Property<decimal>("TotalExento")
                        .HasColumnType("Money");

                    b.Property<decimal>("TotalGravado")
                        .HasColumnType("Money");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion");

                    b.Property<long>("VendorId");

                    b.Property<DateTime>("VendorInvoiceDate");

                    b.Property<DateTime>("VendorInvoiceDueDate");

                    b.Property<string>("VendorInvoiceName");

                    b.Property<int>("VendorInvoiceTypeId");

                    b.Property<string>("VendorName");

                    b.Property<string>("VendorRTN");

                    b.HasKey("VendorInvoiceId");

                    b.HasIndex("AccountIdCredito");

                    b.HasIndex("AccountIdGasto");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("JournalEntryId");

                    b.HasIndex("VendorId");

                    b.ToTable("VendorInvoice");
                });

            modelBuilder.Entity("ERPAPI.Models.VendorOfCustomer", b =>
                {
                    b.Property<long>("VendorOfId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("ContactPerson");

                    b.Property<long?>("CustomerId");

                    b.Property<string>("Email");

                    b.Property<string>("Phone");

                    b.Property<string>("State");

                    b.Property<long>("VendorId");

                    b.Property<string>("VendorName")
                        .IsRequired();

                    b.Property<int>("VendorTypeId");

                    b.Property<string>("ZipCode");

                    b.HasKey("VendorOfId");

                    b.HasIndex("CustomerId");

                    b.ToTable("VendorOfCustomer");
                });

            modelBuilder.Entity("ERPAPI.Models.VendorProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ProductId");

                    b.Property<long>("VendorId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId", "VendorId")
                        .IsUnique();

                    b.ToTable("VendorProduct");
                });

            modelBuilder.Entity("ERPAPI.Models.VendorType", b =>
                {
                    b.Property<long>("VendorTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<string>("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.Property<string>("VendorTypeName")
                        .IsRequired();

                    b.HasKey("VendorTypeId");

                    b.ToTable("VendorType");
                });

            modelBuilder.Entity("ERPAPI.Models.Warehouse", b =>
                {
                    b.Property<int>("WarehouseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BranchId");

                    b.Property<double>("CapacidadBodega");

                    b.Property<long>("CurrencyId");

                    b.Property<string>("CurrencyName");

                    b.Property<long?>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("Description");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime?>("FechaHabilitacion");

                    b.Property<DateTime?>("FechaLibertadGravamen");

                    b.Property<DateTime>("FechaModificacion");

                    b.Property<long>("IdEstado");

                    b.Property<int>("UnitOfMeasureId");

                    b.Property<string>("UnitOfMeasureName");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired();

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired();

                    b.Property<string>("WarehouseName")
                        .IsRequired();

                    b.HasKey("WarehouseId");

                    b.HasIndex("BranchId");

                    b.ToTable("Warehouse");
                });

            modelBuilder.Entity("OFAC.sdnListM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("publshInformationId");

                    b.Property<int>("sdnListPublshInformationId");

                    b.HasKey("Id");

                    b.HasIndex("publshInformationId");

                    b.ToTable("sdnList");
                });

            modelBuilder.Entity("OFAC.sdnListPublshInformationM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Publish_Date");

                    b.Property<int>("Record_Count");

                    b.Property<bool>("Record_CountSpecified");

                    b.HasKey("Id");

                    b.ToTable("sdnListPublshInformation");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryAddressM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address1");

                    b.Property<string>("address2");

                    b.Property<string>("address3");

                    b.Property<string>("city");

                    b.Property<string>("country");

                    b.Property<string>("postalCode");

                    b.Property<int>("sdnListSdnEntryMId");

                    b.Property<string>("stateOrProvince");

                    b.Property<int>("uid");

                    b.HasKey("Id");

                    b.HasIndex("sdnListSdnEntryMId");

                    b.ToTable("sdnListSdnEntryAddress");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryAkaM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("category");

                    b.Property<string>("firstName");

                    b.Property<string>("lastName");

                    b.Property<int>("sdnListSdnEntryMId");

                    b.Property<string>("type");

                    b.Property<int>("uid");

                    b.HasKey("Id");

                    b.HasIndex("sdnListSdnEntryMId");

                    b.ToTable("sdnListSdnEntryAka");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryCitizenshipM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("country");

                    b.Property<bool>("mainEntry");

                    b.Property<int>("sdnListSdnEntryMId");

                    b.Property<int>("uid");

                    b.HasKey("Id");

                    b.HasIndex("sdnListSdnEntryMId");

                    b.ToTable("sdnListSdnEntryCitizenship");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryDateOfBirthItemM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("dateOfBirth");

                    b.Property<bool>("mainEntry");

                    b.Property<int>("sdnListSdnEntryMId");

                    b.Property<int>("uid");

                    b.HasKey("Id");

                    b.HasIndex("sdnListSdnEntryMId");

                    b.ToTable("sdnListSdnEntryDateOfBirthItem");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryIDM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("expirationDate");

                    b.Property<string>("idCountry");

                    b.Property<string>("idNumber");

                    b.Property<string>("idType");

                    b.Property<string>("issueDate");

                    b.Property<int>("sdnListSdnEntryMId");

                    b.Property<int>("uid");

                    b.HasKey("Id");

                    b.HasIndex("sdnListSdnEntryMId");

                    b.ToTable("sdnListSdnEntryID");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("firstName");

                    b.Property<string>("lastName");

                    b.Property<string>("programList");

                    b.Property<string>("remarks");

                    b.Property<int?>("sdnListMId");

                    b.Property<string>("sdnType");

                    b.Property<string>("title");

                    b.Property<int>("uid");

                    b.Property<int?>("vesselInfoId");

                    b.HasKey("Id");

                    b.HasIndex("sdnListMId");

                    b.HasIndex("vesselInfoId");

                    b.ToTable("sdnListSdnEntry");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryNationalityM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("country");

                    b.Property<bool>("mainEntry");

                    b.Property<int>("sdnListSdnEntryMId");

                    b.Property<int>("uid");

                    b.HasKey("Id");

                    b.HasIndex("sdnListSdnEntryMId");

                    b.ToTable("sdnListSdnEntryNationality");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryPlaceOfBirthItemM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("mainEntry");

                    b.Property<string>("placeOfBirth");

                    b.Property<int>("sdnListSdnEntryMId");

                    b.Property<int>("uid");

                    b.HasKey("Id");

                    b.HasIndex("sdnListSdnEntryMId");

                    b.ToTable("sdnListSdnEntryPlaceOfBirthItem");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryVesselInfoM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("callSign");

                    b.Property<int>("grossRegisteredTonnage");

                    b.Property<bool>("grossRegisteredTonnageSpecified");

                    b.Property<int>("tonnage");

                    b.Property<bool>("tonnageSpecified");

                    b.Property<string>("vesselFlag");

                    b.Property<string>("vesselOwner");

                    b.Property<string>("vesselType");

                    b.HasKey("Id");

                    b.ToTable("sdnListSdnEntryVesselInfo");
                });

            modelBuilder.Entity("ONUListas.CONSOLIDATED_LISTM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("dateGenerated");

                    b.HasKey("Id");

                    b.ToTable("CONSOLIDATED_LISTM");
                });

            modelBuilder.Entity("ONUListas.DESIGNATIONM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("VALUE");

                    b.HasKey("Id");

                    b.ToTable("DESIGNATIONM");
                });

            modelBuilder.Entity("ONUListas.ENTITIESM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("ENTITIESM");
                });

            modelBuilder.Entity("ONUListas.ENTITYM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("COMMENTS1");

                    b.Property<int?>("CONSOLIDATED_LISTMId");

                    b.Property<string>("DATAID");

                    b.Property<DateTime>("DELISTED_ON");

                    b.Property<bool>("DELISTED_ONSpecified");

                    b.Property<int?>("ENTITIESMId");

                    b.Property<string>("FIRST_NAME");

                    b.Property<string>("LAST_DAY_UPDATED");

                    b.Property<DateTime>("LISTED_ON");

                    b.Property<int?>("LIST_TYPEId");

                    b.Property<string>("NAME_ORIGINAL_SCRIPT");

                    b.Property<string>("REFERENCE_NUMBER");

                    b.Property<string>("SORT_KEY");

                    b.Property<string>("SORT_KEY_LAST_MOD");

                    b.Property<DateTime>("SUBMITTED_ON");

                    b.Property<bool>("SUBMITTED_ONSpecified");

                    b.Property<string>("UN_LIST_TYPE");

                    b.Property<string>("VERSIONNUM");

                    b.HasKey("Id");

                    b.HasIndex("CONSOLIDATED_LISTMId");

                    b.HasIndex("ENTITIESMId");

                    b.HasIndex("LIST_TYPEId");

                    b.ToTable("ENTITYM");
                });

            modelBuilder.Entity("ONUListas.ENTITY_ADDRESSM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CITY");

                    b.Property<string>("COUNTRY");

                    b.Property<int?>("ENTITYMId");

                    b.Property<string>("NOTE");

                    b.Property<string>("STATE_PROVINCE");

                    b.Property<string>("STREET");

                    b.Property<string>("ZIP_CODE");

                    b.HasKey("Id");

                    b.HasIndex("ENTITYMId");

                    b.ToTable("ENTITY_ADDRESSM");
                });

            modelBuilder.Entity("ONUListas.ENTITY_ALIASM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ALIAS_NAME");

                    b.Property<int?>("ENTITYMId");

                    b.Property<string>("QUALITY");

                    b.HasKey("Id");

                    b.HasIndex("ENTITYMId");

                    b.ToTable("ENTITY_ALIASM");
                });

            modelBuilder.Entity("ONUListas.INDIVIDUALM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("COMMENTS1");

                    b.Property<int?>("CONSOLIDATED_LISTMId");

                    b.Property<string>("DATAID");

                    b.Property<DateTime>("DELISTED_ON");

                    b.Property<bool>("DELISTED_ONSpecified");

                    b.Property<string>("DESIGNATION");

                    b.Property<string>("FIRST_NAME");

                    b.Property<string>("FOURTH_NAME");

                    b.Property<string>("GENDER");

                    b.Property<int?>("INDIVIDUALSMId");

                    b.Property<string>("LAST_DAY_UPDATED");

                    b.Property<DateTime>("LISTED_ON");

                    b.Property<int?>("LIST_TYPEId");

                    b.Property<string>("NAME_ORIGINAL_SCRIPT");

                    b.Property<string>("NATIONALITY");

                    b.Property<string>("NATIONALITY2");

                    b.Property<string>("REFERENCE_NUMBER");

                    b.Property<string>("SECOND_NAME");

                    b.Property<string>("SORT_KEY");

                    b.Property<string>("SORT_KEY_LAST_MOD");

                    b.Property<string>("SUBMITTED_BY");

                    b.Property<string>("THIRD_NAME");

                    b.Property<string>("TITLE");

                    b.Property<string>("UN_LIST_TYPE");

                    b.Property<string>("VERSIONNUM");

                    b.HasKey("Id");

                    b.HasIndex("CONSOLIDATED_LISTMId");

                    b.HasIndex("INDIVIDUALSMId");

                    b.HasIndex("LIST_TYPEId");

                    b.ToTable("INDIVIDUALM");
                });

            modelBuilder.Entity("ONUListas.INDIVIDUALSM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("INDIVIDUALSM");
                });

            modelBuilder.Entity("ONUListas.INDIVIDUAL_ADDRESSM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CITY");

                    b.Property<string>("COUNTRY");

                    b.Property<int?>("INDIVIDUALMId");

                    b.Property<string>("NOTE");

                    b.Property<string>("STATE_PROVINCE");

                    b.Property<string>("STREET");

                    b.Property<string>("ZIP_CODE");

                    b.HasKey("Id");

                    b.HasIndex("INDIVIDUALMId");

                    b.ToTable("INDIVIDUAL_ADDRESSM");
                });

            modelBuilder.Entity("ONUListas.INDIVIDUAL_ALIASM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ALIAS_NAME");

                    b.Property<string>("CITY_OF_BIRTH");

                    b.Property<string>("COUNTRY_OF_BIRTH");

                    b.Property<string>("DATE_OF_BIRTH");

                    b.Property<int?>("INDIVIDUALMId");

                    b.Property<string>("NOTE");

                    b.Property<string>("QUALITY");

                    b.HasKey("Id");

                    b.HasIndex("INDIVIDUALMId");

                    b.ToTable("INDIVIDUAL_ALIASM");
                });

            modelBuilder.Entity("ONUListas.INDIVIDUAL_DATE_OF_BIRTHM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("INDIVIDUALMId");

                    b.Property<string>("Items");

                    b.Property<string>("ItemsElementName");

                    b.Property<string>("NOTE");

                    b.Property<string>("TYPE_OF_DATE");

                    b.HasKey("Id");

                    b.HasIndex("INDIVIDUALMId");

                    b.ToTable("INDIVIDUAL_DATE_OF_BIRTHM");
                });

            modelBuilder.Entity("ONUListas.INDIVIDUAL_DOCUMENTM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CITY_OF_ISSUE");

                    b.Property<string>("COUNTRY_OF_ISSUE");

                    b.Property<string>("DATE_OF_ISSUE");

                    b.Property<int?>("INDIVIDUALMId");

                    b.Property<string>("ISSUING_COUNTRY");

                    b.Property<string>("NOTE");

                    b.Property<string>("NUMBER");

                    b.Property<string>("TYPE_OF_DOCUMENT");

                    b.Property<string>("TYPE_OF_DOCUMENT2");

                    b.HasKey("Id");

                    b.HasIndex("INDIVIDUALMId");

                    b.ToTable("INDIVIDUAL_DOCUMENTM");
                });

            modelBuilder.Entity("ONUListas.INDIVIDUAL_PLACE_OF_BIRTHM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CITY");

                    b.Property<string>("COUNTRY");

                    b.Property<int?>("INDIVIDUALMId");

                    b.Property<string>("NOTE");

                    b.Property<string>("STATE_PROVINCE");

                    b.HasKey("Id");

                    b.HasIndex("INDIVIDUALMId");

                    b.ToTable("INDIVIDUAL_PLACE_OF_BIRTHM");
                });

            modelBuilder.Entity("ONUListas.LAST_DAY_UPDATEDM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("VALUE");

                    b.HasKey("Id");

                    b.ToTable("LAST_DAY_UPDATEDM");
                });

            modelBuilder.Entity("ONUListas.LIST_TYPEM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("VALUE");

                    b.HasKey("Id");

                    b.ToTable("LIST_TYPEM");
                });

            modelBuilder.Entity("ONUListas.NATIONALITYM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("VALUE");

                    b.HasKey("Id");

                    b.ToTable("NATIONALITYM");
                });

            modelBuilder.Entity("ONUListas.TITLEM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("VALUE");

                    b.HasKey("Id");

                    b.ToTable("TITLEM");
                });

            modelBuilder.Entity("ERPAPI.Models.AccountManagement", b =>
                {
                    b.HasOne("ERPAPI.Models.Accounting", "Accounting")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.ElementoConfiguracion", "TypeAccount")
                        .WithMany()
                        .HasForeignKey("TypeAccountId");
                });

            modelBuilder.Entity("ERPAPI.Models.Accounting", b =>
                {
                    b.HasOne("ERPAPI.Models.CompanyInfo", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyInfoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Accounting", "ParentAccount")
                        .WithMany("ChildAccounts")
                        .HasForeignKey("ParentAccountAccountId");
                });

            modelBuilder.Entity("ERPAPI.Models.ApplicationUserClaim", b =>
                {
                    b.HasOne("ERPAPI.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.ApplicationUserRole", b =>
                {
                    b.HasOne("ERPAPI.Models.ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.AspNetRoleClaims", b =>
                {
                    b.HasOne("ERPAPI.Models.ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.AspNetUserLogins", b =>
                {
                    b.HasOne("ERPAPI.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.AspNetUserTokens", b =>
                {
                    b.HasOne("ERPAPI.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.BankAccountTransfers", b =>
                {
                    b.HasOne("ERPAPI.Models.AccountManagement", "DestinationAccountManagement")
                        .WithMany()
                        .HasForeignKey("DestinationAccountManagementId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.ExchangeRate", "ExchangeRate")
                        .WithMany()
                        .HasForeignKey("ExchangeRateId");

                    b.HasOne("ERPAPI.Models.JournalEntry", "JournalEntry")
                        .WithMany()
                        .HasForeignKey("JournalEntryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.AccountManagement", "SourceAccountManagement")
                        .WithMany()
                        .HasForeignKey("SourceAccountManagementId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.Biometrico", b =>
                {
                    b.HasOne("ERPAPI.Models.Estados", "Estado")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.BitacoraCierreContable", b =>
                {
                    b.HasOne("ERPAPI.Models.Periodo", "Periodo")
                        .WithMany()
                        .HasForeignKey("PeriodoId");
                });

            modelBuilder.Entity("ERPAPI.Models.BitacoraCierreProcesos", b =>
                {
                    b.HasOne("ERPAPI.Models.BitacoraCierreContable", "BitacoraCierresContable")
                        .WithMany("CierreContableLineas")
                        .HasForeignKey("IdBitacoraCierre")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.BoletaDeSalida", b =>
                {
                    b.HasOne("ERPAPI.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Producto");
                });

            modelBuilder.Entity("ERPAPI.Models.BoletaDeSalidaLine", b =>
                {
                    b.HasOne("ERPAPI.Models.BoletaDeSalida", "BoletaDeSalida")
                        .WithMany("BoletaDeSalidaLines")
                        .HasForeignKey("BoletaSalidaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.SubProduct", "SubProduct")
                        .WithMany()
                        .HasForeignKey("SubProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.UnitOfMeasure", "UnitOfMeasure")
                        .WithMany()
                        .HasForeignKey("UnitOfMeasureId");

                    b.HasOne("ERPAPI.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("Warehouseid");
                });

            modelBuilder.Entity("ERPAPI.Models.Boleto_Ent", b =>
                {
                    b.HasOne("ERPAPI.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("ERPAPI.Models.SubProduct", "SubProduct")
                        .WithMany()
                        .HasForeignKey("SubProductId");
                });

            modelBuilder.Entity("ERPAPI.Models.Boleto_Sal", b =>
                {
                    b.HasOne("ERPAPI.Models.Boleto_Ent", "Boleto_Ent")
                        .WithOne("Boleto_Sal")
                        .HasForeignKey("ERPAPI.Models.Boleto_Sal", "clave_e")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.Bonificacion", b =>
                {
                    b.HasOne("ERPAPI.Models.Employees", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Estados", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.TipoBonificacion", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.Branch", b =>
                {
                    b.HasOne("ERPAPI.Models.City", "Ciudad")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.State", "Departamento")
                        .WithMany("Branch")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ERPAPI.Models.CancelledDocuments", b =>
                {
                    b.HasOne("ERPAPI.Models.TiposDocumento", "TiposDocumento")
                        .WithMany()
                        .HasForeignKey("IdTipoDocumento")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.JournalEntry", "JournalEntry")
                        .WithMany()
                        .HasForeignKey("JournalEntryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.CertificadoDeposito", b =>
                {
                    b.HasOne("ERPAPI.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Insurances", "Insurances")
                        .WithMany()
                        .HasForeignKey("InsuranceId");

                    b.HasOne("ERPAPI.Models.InsurancePolicy", "InsurancePolicy")
                        .WithMany("CertificadoDepositos")
                        .HasForeignKey("InsurancePolicyId");

                    b.HasOne("ERPAPI.Models.PrecioCafe", "PrecioCafe")
                        .WithMany()
                        .HasForeignKey("PrecioCafeId");

                    b.HasOne("ERPAPI.Models.Product", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.CertificadoLine", b =>
                {
                    b.HasOne("ERPAPI.Models.GoodsReceivedLine", "GoodsReceivedLine")
                        .WithMany()
                        .HasForeignKey("GoodsReceivedLineId");

                    b.HasOne("ERPAPI.Models.CertificadoDeposito")
                        .WithMany("_CertificadoLine")
                        .HasForeignKey("IdCD")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.SubProduct", "SubProduct")
                        .WithMany()
                        .HasForeignKey("SubProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.CheckAccount", b =>
                {
                    b.HasOne("ERPAPI.Models.AccountManagement", "AccountManagement")
                        .WithMany()
                        .HasForeignKey("AccountManagementId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("IdEstado");
                });

            modelBuilder.Entity("ERPAPI.Models.CheckAccountLines", b =>
                {
                    b.HasOne("ERPAPI.Models.CheckAccount", "CheckAccount")
                        .WithMany()
                        .HasForeignKey("CheckAccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.JournalEntry", "JournalEntry")
                        .WithMany()
                        .HasForeignKey("JournalEntrId");

                    b.HasOne("ERPAPI.Models.RetentionReceipt", "Retention")
                        .WithMany()
                        .HasForeignKey("RetencionId");
                });

            modelBuilder.Entity("ERPAPI.Models.CierresAccounting", b =>
                {
                    b.HasOne("ERPAPI.Models.BitacoraCierreContable", "BitacoraCierreContable")
                        .WithMany()
                        .HasForeignKey("BitacoraCierreContableId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.CompanyInfo", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyInfoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Accounting", "ParentAccount")
                        .WithMany()
                        .HasForeignKey("ParentAccountAccountId");
                });

            modelBuilder.Entity("ERPAPI.Models.CierresJournal", b =>
                {
                    b.HasOne("ERPAPI.Models.BitacoraCierreContable", "BitacoraCierreContable")
                        .WithMany()
                        .HasForeignKey("BitacoraCierreContableId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.GeneralLedgerHeader", "GeneralLedgerHeader")
                        .WithMany()
                        .HasForeignKey("GeneralLedgerHeaderId1");

                    b.HasOne("ERPAPI.Models.Party", "Party")
                        .WithMany()
                        .HasForeignKey("PartyId1");
                });

            modelBuilder.Entity("ERPAPI.Models.CierresJournalEntryLine", b =>
                {
                    b.HasOne("ERPAPI.Models.BitacoraCierreContable", "BitacoraCierreContable")
                        .WithMany()
                        .HasForeignKey("BitacoraCierreContableId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.CierresJournal")
                        .WithMany("CierresJournalEntryLines")
                        .HasForeignKey("CierresJournalEntryId");
                });

            modelBuilder.Entity("ERPAPI.Models.City", b =>
                {
                    b.HasOne("ERPAPI.Models.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("IdEstado");

                    b.HasOne("ERPAPI.Models.State", "State")
                        .WithMany("City")
                        .HasForeignKey("StateId");
                });

            modelBuilder.Entity("ERPAPI.Models.Conciliacion", b =>
                {
                    b.HasOne("ERPAPI.Models.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.ConciliacionLinea", b =>
                {
                    b.HasOne("ERPAPI.Models.Conciliacion")
                        .WithMany("ConciliacionLinea")
                        .HasForeignKey("ConciliacionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.ConfiguracionVacaciones", b =>
                {
                    b.HasOne("ERPAPI.Models.Estados", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.Contrato", b =>
                {
                    b.HasOne("ERPAPI.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("ERPAPI.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.Contrato_detalle", b =>
                {
                    b.HasOne("ERPAPI.Models.Contrato", "Contrato")
                        .WithMany("Contrato_detalle")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.Contrato_movimientos", b =>
                {
                    b.HasOne("ERPAPI.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("ERPAPI.Models.Contrato", "Contrato")
                        .WithMany("Contrato_movimientos")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Employees", "Employees")
                        .WithMany()
                        .HasForeignKey("EmployeesId");
                });

            modelBuilder.Entity("ERPAPI.Models.Contrato_plan_pagos", b =>
                {
                    b.HasOne("ERPAPI.Models.Contrato", "Contrato")
                        .WithMany("Contrato_plan_pagos")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.ControlAsistencias", b =>
                {
                    b.HasOne("ERPAPI.Models.Employees", "Empleado")
                        .WithMany()
                        .HasForeignKey("IdEmpleado")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.ControlPallets", b =>
                {
                    b.HasOne("ERPAPI.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("ERPAPI.Models.SubProduct", "SubProduct")
                        .WithMany()
                        .HasForeignKey("SubProductId");

                    b.HasOne("ERPAPI.Models.UnitOfMeasure", "unitOfMeasure")
                        .WithMany()
                        .HasForeignKey("UnitOfMeasureId");
                });

            modelBuilder.Entity("ERPAPI.Models.ControlPalletsLine", b =>
                {
                    b.HasOne("ERPAPI.Models.ControlPallets")
                        .WithMany("_ControlPalletsLine")
                        .HasForeignKey("ControlPalletsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.SubProduct", "SubProduct")
                        .WithMany()
                        .HasForeignKey("SubProductId");

                    b.HasOne("ERPAPI.Models.UnitOfMeasure", "UnitOfMeasure")
                        .WithMany()
                        .HasForeignKey("UnitofMeasureId");

                    b.HasOne("ERPAPI.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");
                });

            modelBuilder.Entity("ERPAPI.Models.CreditNote", b =>
                {
                    b.HasOne("ERPAPI.Models.JournalEntry", "JournalEntry")
                        .WithMany()
                        .HasForeignKey("JournalEntryId");
                });

            modelBuilder.Entity("ERPAPI.Models.CreditNoteLine", b =>
                {
                    b.HasOne("ERPAPI.Models.CreditNote", "CreditNote")
                        .WithMany("CreditNoteLine")
                        .HasForeignKey("CreditNoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.Customer", b =>
                {
                    b.HasOne("ERPAPI.Models.ElementoConfiguracion", "ActividadEconomicaNav")
                        .WithMany()
                        .HasForeignKey("ActividadEconomicaId");

                    b.HasOne("ERPAPI.Models.City", "Ciudad")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("ERPAPI.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("ERPAPI.Models.CustomerType", "CustomerType")
                        .WithMany()
                        .HasForeignKey("CustomerTypeId");

                    b.HasOne("ERPAPI.Models.ElementoConfiguracion", "GeneroNav")
                        .WithMany()
                        .HasForeignKey("GeneroId");

                    b.HasOne("ERPAPI.Models.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("IdEstado");

                    b.HasOne("ERPAPI.Models.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId");

                    b.HasOne("ERPAPI.Models.ElementoConfiguracion", "ProfesionNav")
                        .WithMany()
                        .HasForeignKey("ProfesionId");

                    b.HasOne("ERPAPI.Models.State", "Departamento")
                        .WithMany("Customer")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerAcccountStatus", b =>
                {
                    b.HasOne("ERPAPI.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId");

                    b.HasOne("ERPAPI.Models.InvoicePayments", "InvoicePayments")
                        .WithMany()
                        .HasForeignKey("InvoicePaymentId");

                    b.HasOne("ERPAPI.Models.TiposDocumento", "TiposDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoId");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerArea", b =>
                {
                    b.HasOne("ERPAPI.Models.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerAreaProduct", b =>
                {
                    b.HasOne("ERPAPI.Models.CustomerArea")
                        .WithMany("CustomerAreaProduct")
                        .HasForeignKey("CustomerAreaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerContract", b =>
                {
                    b.HasOne("ERPAPI.Models.CustomerContract", "CustomerContractAdendum")
                        .WithMany()
                        .HasForeignKey("CustomerContractId_Source");

                    b.HasOne("ERPAPI.Models.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("IdEstado");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerContractLines", b =>
                {
                    b.HasOne("ERPAPI.Models.CustomerContract", "CustomerContract")
                        .WithMany("customerContractLines")
                        .HasForeignKey("CustomerContractId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.SubProduct", "SubProduct")
                        .WithMany()
                        .HasForeignKey("SubProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.ElementoConfiguracion", "TipoCobro")
                        .WithMany()
                        .HasForeignKey("TipoCobroId");
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerContractLinesTerms", b =>
                {
                    b.HasOne("ERPAPI.Models.CustomerContractTerms", "CustomerContractTerm")
                        .WithMany()
                        .HasForeignKey("ContractTermId");

                    b.HasOne("ERPAPI.Models.CustomerContract", "CustomerContract")
                        .WithMany("customerContractLinesTerms")
                        .HasForeignKey("CustomerContractId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerContractTerms", b =>
                {
                    b.HasOne("ERPAPI.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.CustomerContractWareHouse", b =>
                {
                    b.HasOne("ERPAPI.Models.CustomerContract")
                        .WithMany("customerContractWarehouse")
                        .HasForeignKey("CustomerContractId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.CustomersOfCustomer", b =>
                {
                    b.HasOne("ERPAPI.Models.Customer")
                        .WithMany("_Customers")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.DebitNote", b =>
                {
                    b.HasOne("ERPAPI.Models.AccountManagement", "accountManagement")
                        .WithMany()
                        .HasForeignKey("CuentaBancariaId");

                    b.HasOne("ERPAPI.Models.Accounting", "CuentaContableDebito")
                        .WithMany()
                        .HasForeignKey("CuentaContableDebitoId");

                    b.HasOne("ERPAPI.Models.Accounting", "CuentaContableIngresos")
                        .WithMany()
                        .HasForeignKey("CuentaContableIngresosId");

                    b.HasOne("ERPAPI.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId");

                    b.HasOne("ERPAPI.Models.JournalEntry", "JournalEntry")
                        .WithMany()
                        .HasForeignKey("JournalEntryId");
                });

            modelBuilder.Entity("ERPAPI.Models.DebitNoteLine", b =>
                {
                    b.HasOne("ERPAPI.Models.DebitNote", "DebitNote")
                        .WithMany("DebitNoteLine")
                        .HasForeignKey("DebitNoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.DeduccionEmpleado", b =>
                {
                    b.HasOne("ERPAPI.Models.Deduction", "Deduccion")
                        .WithMany()
                        .HasForeignKey("DeductionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Employees", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.DeduccionPlanilla", b =>
                {
                    b.HasOne("ERPAPI.Models.DetallePlanilla")
                        .WithMany("Deducciones")
                        .HasForeignKey("DetallePlanillaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.Deduction", b =>
                {
                    b.HasOne("ERPAPI.Models.Estados", "Estado")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.DeductionQty", b =>
                {
                    b.HasOne("ERPAPI.Models.Deduction", "Deduction")
                        .WithMany("DeductionQties")
                        .HasForeignKey("DeductionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.DetalleBiometrico", b =>
                {
                    b.HasOne("ERPAPI.Models.Biometrico", "Encabezado")
                        .WithMany("Detalle")
                        .HasForeignKey("IdBiometrico")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Employees", "Empleado")
                        .WithMany()
                        .HasForeignKey("IdEmpleado")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.DetallePlanilla", b =>
                {
                    b.HasOne("ERPAPI.Models.Planilla")
                        .WithMany("Detalle")
                        .HasForeignKey("PlanillaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.Doc_CP", b =>
                {
                    b.HasOne("ERPAPI.Models.Accounting", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.ElementoConfiguracion", "DocType")
                        .WithMany()
                        .HasForeignKey("DocTipoId");

                    b.HasOne("ERPAPI.Models.PaymentTypes", "PaymentType")
                        .WithMany()
                        .HasForeignKey("PaymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.ElementoConfiguracion", b =>
                {
                    b.HasOne("ERPAPI.Models.GrupoConfiguracion", "GrupoConfiguracion")
                        .WithMany()
                        .HasForeignKey("Idconfiguracion");
                });

            modelBuilder.Entity("ERPAPI.Models.EmpleadoBiometrico", b =>
                {
                    b.HasOne("ERPAPI.Models.Employees", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.EmpleadoHorario", b =>
                {
                    b.HasOne("ERPAPI.Models.Employees", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Horario", "HorarioEmpleado")
                        .WithMany()
                        .HasForeignKey("HorarioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Estados", "Estado")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.EmployeeExtraHours", b =>
                {
                    b.HasOne("ERPAPI.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Employees", "Employees")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.EmployeeSalary", b =>
                {
                    b.HasOne("ERPAPI.Models.Employees")
                        .WithMany("_EmployeeSalary")
                        .HasForeignKey("IdEmpleado")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.Employees", b =>
                {
                    b.HasOne("ERPAPI.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("ERPAPI.Models.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("IdBank")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("IdBranch")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.City", "City")
                        .WithMany("Employees")
                        .HasForeignKey("IdCity")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ERPAPI.Models.Country", "Country")
                        .WithMany("Employees")
                        .HasForeignKey("IdCountry")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ERPAPI.Models.Currency", "Currency")
                        .WithMany("Employees")
                        .HasForeignKey("IdCurrency")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ERPAPI.Models.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("IdDepartamento")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Puesto", "Puesto")
                        .WithMany()
                        .HasForeignKey("IdPuesto")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.State", "State")
                        .WithMany("Employees")
                        .HasForeignKey("IdState")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ERPAPI.Models.TipoContrato", "TipoContrato")
                        .WithMany()
                        .HasForeignKey("IdTipoContrato")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.TipoPlanillas", "TipoPlanilla")
                        .WithMany()
                        .HasForeignKey("IdTipoPlanilla");
                });

            modelBuilder.Entity("ERPAPI.Models.EndososBonoLine", b =>
                {
                    b.HasOne("ERPAPI.Models.EndososBono")
                        .WithMany("EndososBonoLine")
                        .HasForeignKey("EndososBonoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.EndososCertificados", b =>
                {
                    b.HasOne("ERPAPI.Models.CertificadoDeposito", "CertificadoDeposito")
                        .WithMany()
                        .HasForeignKey("IdCD")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.EndososCertificadosLine", b =>
                {
                    b.HasOne("ERPAPI.Models.EndososCertificados", "EndososCertificados")
                        .WithMany("EndososCertificadosLine")
                        .HasForeignKey("EndososCertificadosId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.EndososLiberacion", b =>
                {
                    b.HasOne("ERPAPI.Models.EndososCertificadosLine", "EndososCertificadosLine")
                        .WithMany("EndososLiberacion")
                        .HasForeignKey("EndososLineId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.EndososTalonLine", b =>
                {
                    b.HasOne("ERPAPI.Models.EndososTalon")
                        .WithMany("EndososTalonLine")
                        .HasForeignKey("EndososTalonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.ExchangeRate", b =>
                {
                    b.HasOne("ERPAPI.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.ExistenciaBodegaHabilitada", b =>
                {
                    b.HasOne("ERPAPI.Models.InventarioFisico", "InventarioFisico")
                        .WithMany()
                        .HasForeignKey("InventarioFisicoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.SubProduct", "SubProduct")
                        .WithMany()
                        .HasForeignKey("SubProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.Feriado", b =>
                {
                    b.HasOne("ERPAPI.Models.Estados", "Estado")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Periodo", "Periodo")
                        .WithMany()
                        .HasForeignKey("PeriodoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.FixedAsset", b =>
                {
                    b.HasOne("ERPAPI.Models.FixedAssetGroup", "FixedAssetGroup")
                        .WithMany()
                        .HasForeignKey("FixedAssetGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.FixedAssetGroup", b =>
                {
                    b.HasOne("ERPAPI.Models.Accounting", "AccumulatedDepreciationAccounting")
                        .WithMany()
                        .HasForeignKey("AccumulatedDepreciationAccountingId");

                    b.HasOne("ERPAPI.Models.Accounting", "DepreciationFixedAssetAccounting")
                        .WithMany()
                        .HasForeignKey("DepreciationAccountingId");

                    b.HasOne("ERPAPI.Models.Accounting", "FixedAssetAccounting")
                        .WithMany()
                        .HasForeignKey("FixedAssetAccountingId");
                });

            modelBuilder.Entity("ERPAPI.Models.GarantiaBancaria", b =>
                {
                    b.HasOne("ERPAPI.Models.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.GoodsDeliveredLine", b =>
                {
                    b.HasOne("ERPAPI.Models.GoodsDelivered")
                        .WithMany("_GoodsDeliveredLine")
                        .HasForeignKey("GoodsDeliveredId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.GoodsDeliveryAuthorization", b =>
                {
                    b.HasOne("ERPAPI.Models.GoodsDelivered")
                        .WithMany("GoodsDeliveryAuthorizations")
                        .HasForeignKey("GoodsDeliveredId");
                });

            modelBuilder.Entity("ERPAPI.Models.GoodsDeliveryAuthorizationLine", b =>
                {
                    b.HasOne("ERPAPI.Models.GoodsDeliveryAuthorization")
                        .WithMany("GoodsDeliveryAuthorizationLine")
                        .HasForeignKey("GoodsDeliveryAuthorizationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.GoodsDeliveryAuthorizedSignatures", b =>
                {
                    b.HasOne("ERPAPI.Models.CustomerAuthorizedSignature", "CustomerAuthorizedSignature")
                        .WithMany()
                        .HasForeignKey("CustomerAuthorizedSignatureId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.GoodsDeliveryAuthorization", "GoodsDeliveryAuthorization")
                        .WithMany("goodsDeliveryAuthorizedSignatures")
                        .HasForeignKey("GoodsDeliveryAuthorizationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.GoodsReceived", b =>
                {
                    b.HasOne("ERPAPI.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.UnitOfMeasure", "UnitOfMeasure")
                        .WithMany()
                        .HasForeignKey("CustomerUnitOfMeasureId");
                });

            modelBuilder.Entity("ERPAPI.Models.GoodsReceivedLine", b =>
                {
                    b.HasOne("ERPAPI.Models.GoodsReceived", "GoodsReceived")
                        .WithMany("_GoodsReceivedLine")
                        .HasForeignKey("GoodsReceivedId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Kardex", "Kardex")
                        .WithMany()
                        .HasForeignKey("MaxKardexId");

                    b.HasOne("ERPAPI.Models.SubProduct", "SubProduct")
                        .WithMany()
                        .HasForeignKey("SubProductId");
                });

            modelBuilder.Entity("ERPAPI.Models.GuiaRemision", b =>
                {
                    b.HasOne("ERPAPI.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId1");
                });

            modelBuilder.Entity("ERPAPI.Models.GuiaRemisionLine", b =>
                {
                    b.HasOne("ERPAPI.Models.GuiaRemision", "GuiaRemision")
                        .WithMany("GuiaRemisionLines")
                        .HasForeignKey("GuiaRemisionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.Horario", b =>
                {
                    b.HasOne("ERPAPI.Models.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.HorasExtraBiometrico", b =>
                {
                    b.HasOne("ERPAPI.Models.Biometrico", "Encabezado")
                        .WithMany("HorasExtra")
                        .HasForeignKey("IdBiometrico")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Employees", "Empleado")
                        .WithMany()
                        .HasForeignKey("IdEmpleado")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Estados", "Estado")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.HoursWorkedDetail", b =>
                {
                    b.HasOne("ERPAPI.Models.HoursWorked")
                        .WithMany("idhorastrabajadasconstrains")
                        .HasForeignKey("IdHorasTrabajadas");
                });

            modelBuilder.Entity("ERPAPI.Models.Inasistencia", b =>
                {
                    b.HasOne("ERPAPI.Models.Employees", "Empleado")
                        .WithMany()
                        .HasForeignKey("IdEmpleado")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Estados", "Estado")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.ElementoConfiguracion", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoInasistencia")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.IngresoAnual", b =>
                {
                    b.HasOne("ERPAPI.Models.Employees", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.InsuranceCertificate", b =>
                {
                    b.HasOne("ERPAPI.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Insurances", "Insurace")
                        .WithMany()
                        .HasForeignKey("InsuranceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId");

                    b.HasOne("ERPAPI.Models.Product", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId");
                });

            modelBuilder.Entity("ERPAPI.Models.InsuranceCertificateLine", b =>
                {
                    b.HasOne("ERPAPI.Models.InsuranceCertificate", "InsuranceCertificate")
                        .WithMany("InsuranceCertificaLines")
                        .HasForeignKey("InsuraceCertificateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.InsuranceEndorsement", b =>
                {
                    b.HasOne("ERPAPI.Models.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.InsurancePolicy", "InsurancePolicy")
                        .WithMany()
                        .HasForeignKey("InsurancePolicyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductdId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.InsurancePolicy", b =>
                {
                    b.HasOne("ERPAPI.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("ERPAPI.Models.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("EstadoId");
                });

            modelBuilder.Entity("ERPAPI.Models.Insurances", b =>
                {
                    b.HasOne("ERPAPI.Models.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.InsuredAssets", b =>
                {
                    b.HasOne("ERPAPI.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.ElementoConfiguracion", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.InsurancePolicy", "InsurancePolicy")
                        .WithMany("InsuredAssets")
                        .HasForeignKey("InsurancePolicyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");
                });

            modelBuilder.Entity("ERPAPI.Models.InventarioBodegaHabilitada", b =>
                {
                    b.HasOne("ERPAPI.Models.InventarioFisico", "inventarioFisico")
                        .WithMany("InventarioBodegaHabilitadaLines")
                        .HasForeignKey("InventarioFisicoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.SubProduct", "Product")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.UnitOfMeasure", "UnitOfMeasure")
                        .WithMany()
                        .HasForeignKey("UnitOfMeasureId");

                    b.HasOne("ERPAPI.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");
                });

            modelBuilder.Entity("ERPAPI.Models.InventarioFisico", b =>
                {
                    b.HasOne("ERPAPI.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("ERPAPI.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("ERPAPI.Models.Estados", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId");

                    b.HasOne("ERPAPI.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("ERPAPI.Models.InventarioFisicoLine", b =>
                {
                    b.HasOne("ERPAPI.Models.InventarioFisico", "inventarioFisico")
                        .WithMany("InventarioFisicoLines")
                        .HasForeignKey("InventarioFisicoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.SubProduct", "Product")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.UnitOfMeasure", "UnitOfMeasure")
                        .WithMany()
                        .HasForeignKey("UnitOfMeasureId");

                    b.HasOne("ERPAPI.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");
                });

            modelBuilder.Entity("ERPAPI.Models.InventoryTransfer", b =>
                {
                    b.HasOne("ERPAPI.Models.Employees", "CarriedEmployee")
                        .WithMany()
                        .HasForeignKey("CarriedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Employees", "GeneratedbyEmployee")
                        .WithMany()
                        .HasForeignKey("GeneratedbyEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.NumeracionSAR", "NumeracionSAR")
                        .WithMany()
                        .HasForeignKey("NumeracionSARId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Employees", "ReceivedByEmployee")
                        .WithMany()
                        .HasForeignKey("ReceivedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Branch", "SourceBranch")
                        .WithMany()
                        .HasForeignKey("SourceBranchId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Branch", "TargetBranch")
                        .WithMany()
                        .HasForeignKey("TargetBranchId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.TiposDocumento", "TiposDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.InventoryTransferLine", b =>
                {
                    b.HasOne("ERPAPI.Models.InventoryTransfer", "InventoryTransfer")
                        .WithMany("InventoryTransferLines")
                        .HasForeignKey("InventoryTransferId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.UnitOfMeasure", "UnitOfMeasure")
                        .WithMany()
                        .HasForeignKey("UnitOfMeasureId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.Invoice", b =>
                {
                    b.HasOne("ERPAPI.Models.AccountManagement", "accountManagement")
                        .WithMany()
                        .HasForeignKey("CuentaBancariaId");

                    b.HasOne("ERPAPI.Models.CustomerContract", "CustomerContract")
                        .WithMany()
                        .HasForeignKey("CustomerContractId");

                    b.HasOne("ERPAPI.Models.JournalEntry", "JournalEntry")
                        .WithMany()
                        .HasForeignKey("JournalEntryId");
                });

            modelBuilder.Entity("ERPAPI.Models.InvoiceLine", b =>
                {
                    b.HasOne("ERPAPI.Models.CustomerArea", "CustomerArea")
                        .WithMany()
                        .HasForeignKey("CustomerAreaId");

                    b.HasOne("ERPAPI.Models.Invoice", "Invoice")
                        .WithMany("InvoiceLine")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.SubProduct", "SubProduct")
                        .WithMany()
                        .HasForeignKey("SubProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.UnitOfMeasure", "UnitOfMeasure")
                        .WithMany()
                        .HasForeignKey("UnitOfMeasureId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.InvoicePayments", b =>
                {
                    b.HasOne("ERPAPI.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.AccountManagement", "accountManagement")
                        .WithMany()
                        .HasForeignKey("CuentaBancariaId");

                    b.HasOne("ERPAPI.Models.JournalEntry", "journalEntry")
                        .WithMany()
                        .HasForeignKey("JournalId");
                });

            modelBuilder.Entity("ERPAPI.Models.InvoicePaymentsLine", b =>
                {
                    b.HasOne("ERPAPI.Models.InvoicePayments", "InvoicePayment")
                        .WithMany("InvoicePaymentsLines")
                        .HasForeignKey("InvoicePaymentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoivceId");

                    b.HasOne("ERPAPI.Models.SubProduct", "SubProduct")
                        .WithMany()
                        .HasForeignKey("SubProductId");
                });

            modelBuilder.Entity("ERPAPI.Models.JournalClosing", b =>
                {
                    b.HasOne("ERPAPI.Models.JournalEntry", "JournalEntry")
                        .WithMany()
                        .HasForeignKey("JournalEntryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.JournalEntry", b =>
                {
                    b.HasOne("ERPAPI.Models.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("EstadoId");

                    b.HasOne("ERPAPI.Models.Periodo", "PeriodoNav")
                        .WithMany()
                        .HasForeignKey("PeriodoId");
                });

            modelBuilder.Entity("ERPAPI.Models.JournalEntryConfigurationLine", b =>
                {
                    b.HasOne("ERPAPI.Models.JournalEntryConfiguration")
                        .WithMany("JournalEntryConfigurationLine")
                        .HasForeignKey("JournalEntryConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.JournalEntryLine", b =>
                {
                    b.HasOne("ERPAPI.Models.Accounting", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.JournalEntry", "JournalEntry")
                        .WithMany("JournalEntryLines")
                        .HasForeignKey("JournalEntryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.Kardex", b =>
                {
                    b.HasOne("ERPAPI.Models.GoodsDeliveryAuthorization", "GoodsDeliveryAuthorization")
                        .WithMany()
                        .HasForeignKey("GoodsAuthorizationId");
                });

            modelBuilder.Entity("ERPAPI.Models.Liquidacion", b =>
                {
                    b.HasOne("ERPAPI.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.LiquidacionLine", b =>
                {
                    b.HasOne("ERPAPI.Models.GoodsReceivedLine", "GoodsReceivedLine")
                        .WithMany()
                        .HasForeignKey("GoodsReceivedLineId");

                    b.HasOne("ERPAPI.Models.Liquidacion", "Liqudacion")
                        .WithMany("detalleliquidacion")
                        .HasForeignKey("LiquidacionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.SubProduct", "SubProduct")
                        .WithMany()
                        .HasForeignKey("SubProductId");
                });

            modelBuilder.Entity("ERPAPI.Models.LlegadasTardeBiometrico", b =>
                {
                    b.HasOne("ERPAPI.Models.ControlAsistencias", "ControlAsistencias")
                        .WithMany()
                        .HasForeignKey("ControlAsistenciaId");

                    b.HasOne("ERPAPI.Models.Biometrico", "Encabezado")
                        .WithMany("LlegadasTarde")
                        .HasForeignKey("IdBiometrico")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Employees", "Empleado")
                        .WithMany()
                        .HasForeignKey("IdEmpleado")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Estados", "Estado")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.MatrizRiesgoCustomers", b =>
                {
                    b.HasOne("ERPAPI.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.ContextoRiesgo", "ContextoRiesgo")
                        .WithMany()
                        .HasForeignKey("IdContextoRiesgo")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.TipodeAccionderiesgo", "TipodeAccionderiesgo")
                        .WithMany()
                        .HasForeignKey("TipodeAccionderiesgoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.PagoISR", b =>
                {
                    b.HasOne("ERPAPI.Models.Employees", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Estados", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.PasswordHistory", b =>
                {
                    b.HasOne("ERPAPI.Models.ApplicationUser", "User")
                        .WithMany("PasswordHistory")
                        .HasForeignKey("UserId1");
                });

            modelBuilder.Entity("ERPAPI.Models.PaymentTerms", b =>
                {
                    b.HasOne("ERPAPI.Models.Accounting", "Accounting")
                        .WithMany()
                        .HasForeignKey("AccountingAccountId");

                    b.HasOne("ERPAPI.Models.PaymentTypes", "PaymentTypes")
                        .WithMany()
                        .HasForeignKey("PaymentTypesId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.Periodo", b =>
                {
                    b.HasOne("ERPAPI.Models.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.PhoneLines", b =>
                {
                    b.HasOne("ERPAPI.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("IdBranch")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.Planilla", b =>
                {
                    b.HasOne("ERPAPI.Models.Estados", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.TipoPlanillas", "TipoPlanilla")
                        .WithMany()
                        .HasForeignKey("TipoPlanillaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.PolicyRoles", b =>
                {
                    b.HasOne("ERPAPI.Models.Policy", "Policy")
                        .WithMany()
                        .HasForeignKey("IdPolicy")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.ApplicationRole", "Role")
                        .WithMany()
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.PrecioCafe", b =>
                {
                    b.HasOne("ERPAPI.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("ERPAPI.Models.ExchangeRate", "ExchangeRate")
                        .WithMany()
                        .HasForeignKey("ExchangeRateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.Presupuesto", b =>
                {
                    b.HasOne("ERPAPI.Models.Accounting", "Accounting")
                        .WithMany()
                        .HasForeignKey("AccountigId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Periodo", "Periodo")
                        .WithMany()
                        .HasForeignKey("PeriodoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.Product", b =>
                {
                    b.HasOne("ERPAPI.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Currency", "Currency")
                        .WithMany("Product")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ERPAPI.Models.FundingInterestRate", "FundingInterestRate")
                        .WithMany()
                        .HasForeignKey("FundingInterestRateId");

                    b.HasOne("ERPAPI.Models.ElementoConfiguracion", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId");

                    b.HasOne("ERPAPI.Models.UnitOfMeasure", "UnitOfMeasure")
                        .WithMany()
                        .HasForeignKey("UnitOfMeasureId");
                });

            modelBuilder.Entity("ERPAPI.Models.ProductRelation", b =>
                {
                    b.HasOne("ERPAPI.Models.Accounting", "CuentaContableIngresos")
                        .WithMany()
                        .HasForeignKey("AccountId");

                    b.HasOne("ERPAPI.Models.Accounting", "CuentaContablePorCobrar")
                        .WithMany()
                        .HasForeignKey("AccountIdPorCobrar");

                    b.HasOne("ERPAPI.Models.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Product", "Product")
                        .WithMany("ProductRelation")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ERPAPI.Models.SubProduct", "SubProduct")
                        .WithMany("ProductRelation")
                        .HasForeignKey("SubProductId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ERPAPI.Models.PurchaseOrder", b =>
                {
                    b.HasOne("ERPAPI.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("ERPAPI.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("ERPAPI.Models.ElementoConfiguracion", "POType")
                        .WithMany()
                        .HasForeignKey("EstadoId");

                    b.HasOne("ERPAPI.Models.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("EstadoId");

                    b.HasOne("ERPAPI.Models.ElementoConfiguracion", "ShippingType")
                        .WithMany()
                        .HasForeignKey("ShippingTypeId");

                    b.HasOne("ERPAPI.Models.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxId");

                    b.HasOne("ERPAPI.Models.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorId");
                });

            modelBuilder.Entity("ERPAPI.Models.PurchaseOrderLine", b =>
                {
                    b.HasOne("ERPAPI.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("ERPAPI.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany("PurchaseOrderLines")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxId");

                    b.HasOne("ERPAPI.Models.UnitOfMeasure", "UnitOfMeasure")
                        .WithMany()
                        .HasForeignKey("UnitOfMeasureId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.RetentionReceipt", b =>
                {
                    b.HasOne("ERPAPI.Models.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxId");
                });

            modelBuilder.Entity("ERPAPI.Models.SalesOrder", b =>
                {
                    b.HasOne("ERPAPI.Models.CustomerContract", "CustomerContractSource")
                        .WithMany()
                        .HasForeignKey("CustomerContractId_Source");
                });

            modelBuilder.Entity("ERPAPI.Models.SalesOrderLine", b =>
                {
                    b.HasOne("ERPAPI.Models.SalesOrder", "SalesOrder")
                        .WithMany("SalesOrderLines")
                        .HasForeignKey("SalesOrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.SubProduct", "SubProduct")
                        .WithMany()
                        .HasForeignKey("SubProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.ElementoConfiguracion", "TipoCobro")
                        .WithMany()
                        .HasForeignKey("TipoCobroId");
                });

            modelBuilder.Entity("ERPAPI.Models.SolicitudCertificadoDeposito", b =>
                {
                    b.HasOne("ERPAPI.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");
                });

            modelBuilder.Entity("ERPAPI.Models.SolicitudCertificadoLine", b =>
                {
                    b.HasOne("ERPAPI.Models.GoodsReceivedLine", "GoodsReceivedLine")
                        .WithMany()
                        .HasForeignKey("GoodsReceivedLineId");

                    b.HasOne("ERPAPI.Models.SolicitudCertificadoDeposito")
                        .WithMany("_SolicitudCertificadoLine")
                        .HasForeignKey("IdSCD")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.SubProduct", "Product")
                        .WithMany()
                        .HasForeignKey("SubProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.State", b =>
                {
                    b.HasOne("ERPAPI.Models.Country", "Country")
                        .WithMany("State")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.SubServicesWareHouse", b =>
                {
                    b.HasOne("ERPAPI.Models.Employees", "Employees")
                        .WithMany()
                        .HasForeignKey("EmpleadoId");

                    b.HasOne("ERPAPI.Models.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId");

                    b.HasOne("ERPAPI.Models.InvoiceLine", "InvoiceLine")
                        .WithMany()
                        .HasForeignKey("InvoiceLineId");
                });

            modelBuilder.Entity("ERPAPI.Models.Tax", b =>
                {
                    b.HasOne("ERPAPI.Models.Accounting", "CuentaImpuestoPagado")
                        .WithMany()
                        .HasForeignKey("CuentaImpuestoPagadoId");

                    b.HasOne("ERPAPI.Models.Accounting", "CuentaContableIngresos")
                        .WithMany()
                        .HasForeignKey("CuentaImpuestoporCobrarId");

                    b.HasOne("ERPAPI.Models.Accounting", "CuentaContablePorCobrar")
                        .WithMany()
                        .HasForeignKey("CuentaImpuestoporPagarId");
                });

            modelBuilder.Entity("ERPAPI.Models.TipoBonificacion", b =>
                {
                    b.HasOne("ERPAPI.Models.Estados", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.TipoPlanillas", b =>
                {
                    b.HasOne("ERPAPI.Models.CategoriaPlanilla", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Estados", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.UserBranch", b =>
                {
                    b.HasOne("ERPAPI.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.Vendor", b =>
                {
                    b.HasOne("ERPAPI.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERPAPI.Models.State", "State")
                        .WithMany("Vendor")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ERPAPI.Models.VendorType", "VendorType")
                        .WithMany()
                        .HasForeignKey("VendorTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.VendorInvoice", b =>
                {
                    b.HasOne("ERPAPI.Models.Accounting", "Accountcredito")
                        .WithMany()
                        .HasForeignKey("AccountIdCredito");

                    b.HasOne("ERPAPI.Models.Accounting", "AccountGasto")
                        .WithMany()
                        .HasForeignKey("AccountIdGasto");

                    b.HasOne("ERPAPI.Models.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId");

                    b.HasOne("ERPAPI.Models.JournalEntry", "JournalEntry")
                        .WithMany()
                        .HasForeignKey("JournalEntryId");

                    b.HasOne("ERPAPI.Models.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERPAPI.Models.VendorOfCustomer", b =>
                {
                    b.HasOne("ERPAPI.Models.Customer")
                        .WithMany("_Vendor")
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("ERPAPI.Models.Warehouse", b =>
                {
                    b.HasOne("ERPAPI.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");
                });

            modelBuilder.Entity("OFAC.sdnListM", b =>
                {
                    b.HasOne("OFAC.sdnListPublshInformationM", "publshInformation")
                        .WithMany()
                        .HasForeignKey("publshInformationId");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryAddressM", b =>
                {
                    b.HasOne("OFAC.sdnListSdnEntryM")
                        .WithMany("addressList")
                        .HasForeignKey("sdnListSdnEntryMId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryAkaM", b =>
                {
                    b.HasOne("OFAC.sdnListSdnEntryM")
                        .WithMany("akaList")
                        .HasForeignKey("sdnListSdnEntryMId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryCitizenshipM", b =>
                {
                    b.HasOne("OFAC.sdnListSdnEntryM")
                        .WithMany("citizenshipList")
                        .HasForeignKey("sdnListSdnEntryMId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryDateOfBirthItemM", b =>
                {
                    b.HasOne("OFAC.sdnListSdnEntryM")
                        .WithMany("dateOfBirthList")
                        .HasForeignKey("sdnListSdnEntryMId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryIDM", b =>
                {
                    b.HasOne("OFAC.sdnListSdnEntryM")
                        .WithMany("idList")
                        .HasForeignKey("sdnListSdnEntryMId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryM", b =>
                {
                    b.HasOne("OFAC.sdnListM")
                        .WithMany("sdnEntry")
                        .HasForeignKey("sdnListMId");

                    b.HasOne("OFAC.sdnListSdnEntryVesselInfoM", "vesselInfo")
                        .WithMany()
                        .HasForeignKey("vesselInfoId");
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryNationalityM", b =>
                {
                    b.HasOne("OFAC.sdnListSdnEntryM")
                        .WithMany("nationalityList")
                        .HasForeignKey("sdnListSdnEntryMId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OFAC.sdnListSdnEntryPlaceOfBirthItemM", b =>
                {
                    b.HasOne("OFAC.sdnListSdnEntryM")
                        .WithMany("placeOfBirthList")
                        .HasForeignKey("sdnListSdnEntryMId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ONUListas.ENTITYM", b =>
                {
                    b.HasOne("ONUListas.CONSOLIDATED_LISTM")
                        .WithMany("ENTITIES")
                        .HasForeignKey("CONSOLIDATED_LISTMId");

                    b.HasOne("ONUListas.ENTITIESM")
                        .WithMany("ENTITY")
                        .HasForeignKey("ENTITIESMId");

                    b.HasOne("ONUListas.LIST_TYPEM", "LIST_TYPE")
                        .WithMany()
                        .HasForeignKey("LIST_TYPEId");
                });

            modelBuilder.Entity("ONUListas.ENTITY_ADDRESSM", b =>
                {
                    b.HasOne("ONUListas.ENTITYM")
                        .WithMany("ENTITY_ADDRESS")
                        .HasForeignKey("ENTITYMId");
                });

            modelBuilder.Entity("ONUListas.ENTITY_ALIASM", b =>
                {
                    b.HasOne("ONUListas.ENTITYM")
                        .WithMany("ENTITY_ALIAS")
                        .HasForeignKey("ENTITYMId");
                });

            modelBuilder.Entity("ONUListas.INDIVIDUALM", b =>
                {
                    b.HasOne("ONUListas.CONSOLIDATED_LISTM")
                        .WithMany("iNDIVIDUALS")
                        .HasForeignKey("CONSOLIDATED_LISTMId");

                    b.HasOne("ONUListas.INDIVIDUALSM")
                        .WithMany("INDIVIDUAL")
                        .HasForeignKey("INDIVIDUALSMId");

                    b.HasOne("ONUListas.LIST_TYPEM", "LIST_TYPE")
                        .WithMany()
                        .HasForeignKey("LIST_TYPEId");
                });

            modelBuilder.Entity("ONUListas.INDIVIDUAL_ADDRESSM", b =>
                {
                    b.HasOne("ONUListas.INDIVIDUALM")
                        .WithMany("INDIVIDUAL_ADDRESS")
                        .HasForeignKey("INDIVIDUALMId");
                });

            modelBuilder.Entity("ONUListas.INDIVIDUAL_ALIASM", b =>
                {
                    b.HasOne("ONUListas.INDIVIDUALM")
                        .WithMany("INDIVIDUAL_ALIAS")
                        .HasForeignKey("INDIVIDUALMId");
                });

            modelBuilder.Entity("ONUListas.INDIVIDUAL_DATE_OF_BIRTHM", b =>
                {
                    b.HasOne("ONUListas.INDIVIDUALM")
                        .WithMany("INDIVIDUAL_DATE_OF_BIRTH")
                        .HasForeignKey("INDIVIDUALMId");
                });

            modelBuilder.Entity("ONUListas.INDIVIDUAL_DOCUMENTM", b =>
                {
                    b.HasOne("ONUListas.INDIVIDUALM")
                        .WithMany("INDIVIDUAL_DOCUMENT")
                        .HasForeignKey("INDIVIDUALMId");
                });

            modelBuilder.Entity("ONUListas.INDIVIDUAL_PLACE_OF_BIRTHM", b =>
                {
                    b.HasOne("ONUListas.INDIVIDUALM")
                        .WithMany("INDIVIDUAL_PLACE_OF_BIRTH")
                        .HasForeignKey("INDIVIDUALMId");
                });
#pragma warning restore 612, 618
        }
    }
}
